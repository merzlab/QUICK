/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [HS|DS] integral - Start
    QUICKDouble VY_7 = VY(0, 0, 7);
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_1_0_6 = Ptempx * VY_6 + WPtempx * VY_7;
    QUICKDouble x_2_0_6 = Ptempy * VY_6 + WPtempy * VY_7;
    QUICKDouble x_3_0_6 = Ptempz * VY_6 + WPtempz * VY_7;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_1_0_5 = Ptempx * VY_5 + WPtempx * VY_6;
    QUICKDouble x_7_0_5 = Ptempx * x_1_0_5 + WPtempx * x_1_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble x_2_0_5 = Ptempy * VY_5 + WPtempy * VY_6;
    QUICKDouble x_4_0_5 = Ptempx * x_2_0_5 + WPtempx * x_2_0_6;
    QUICKDouble x_3_0_5 = Ptempz * VY_5 + WPtempz * VY_6;
    QUICKDouble x_6_0_5 = Ptempx * x_3_0_5 + WPtempx * x_3_0_6;
    QUICKDouble x_8_0_5 = Ptempy * x_2_0_5 + WPtempy * x_2_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble x_5_0_5 = Ptempy * x_3_0_5 + WPtempy * x_3_0_6;
    QUICKDouble x_9_0_5 = Ptempz * x_3_0_5 + WPtempz * x_3_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_1_0_4 = Ptempx * VY_4 + WPtempx * VY_5;
    QUICKDouble x_7_0_4 = Ptempx * x_1_0_4 + WPtempx * x_1_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_17_0_4 = Ptempx * x_7_0_4 + WPtempx * x_7_0_5 + 2.000000 * ABtemp * (x_1_0_4 - CDcom * x_1_0_5);
    QUICKDouble x_2_0_4 = Ptempy * VY_4 + WPtempy * VY_5;
    QUICKDouble x_4_0_4 = Ptempx * x_2_0_4 + WPtempx * x_2_0_5;
    QUICKDouble x_11_0_4 = Ptempx * x_4_0_4 + WPtempx * x_4_0_5 + ABtemp * (x_2_0_4 - CDcom * x_2_0_5);
    QUICKDouble x_3_0_4 = Ptempz * VY_4 + WPtempz * VY_5;
    QUICKDouble x_6_0_4 = Ptempx * x_3_0_4 + WPtempx * x_3_0_5;
    QUICKDouble x_13_0_4 = Ptempx * x_6_0_4 + WPtempx * x_6_0_5 + ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble x_8_0_4 = Ptempy * x_2_0_4 + WPtempy * x_2_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_12_0_4 = Ptempx * x_8_0_4 + WPtempx * x_8_0_5;
    QUICKDouble x_18_0_4 = Ptempy * x_8_0_4 + WPtempy * x_8_0_5 + 2.000000 * ABtemp * (x_2_0_4 - CDcom * x_2_0_5);
    QUICKDouble x_9_0_4 = Ptempz * x_3_0_4 + WPtempz * x_3_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_14_0_4 = Ptempx * x_9_0_4 + WPtempx * x_9_0_5;
    QUICKDouble x_19_0_4 = Ptempz * x_9_0_4 + WPtempz * x_9_0_5 + 2.000000 * ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble x_5_0_4 = Ptempy * x_3_0_4 + WPtempy * x_3_0_5;
    QUICKDouble x_10_0_4 = Ptempx * x_5_0_4 + WPtempx * x_5_0_5;
    QUICKDouble x_15_0_4 = Ptempy * x_5_0_4 + WPtempy * x_5_0_5 + ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble x_16_0_4 = Ptempy * x_9_0_4 + WPtempy * x_9_0_5;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble x_1_0_1 = Ptempx * VY_1 + WPtempx * VY_2;
    QUICKDouble x_1_0_0 = Ptempx * VY_0 + WPtempx * VY_1;
    QUICKDouble x_7_0_0 = Ptempx * x_1_0_0 + WPtempx * x_1_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_1_0_3 = Ptempx * VY_3 + WPtempx * VY_4;
    QUICKDouble x_7_0_3 = Ptempx * x_1_0_3 + WPtempx * x_1_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_17_0_3 = Ptempx * x_7_0_3 + WPtempx * x_7_0_4 + 2.000000 * ABtemp * (x_1_0_3 - CDcom * x_1_0_4);
    QUICKDouble x_32_0_3 = Ptempx * x_17_0_3 + WPtempx * x_17_0_4 + 3.000000 * ABtemp * (x_7_0_3 - CDcom * x_7_0_4);
    QUICKDouble x_2_0_0 = Ptempy * VY_0 + WPtempy * VY_1;
    QUICKDouble x_2_0_1 = Ptempy * VY_1 + WPtempy * VY_2;
    QUICKDouble x_4_0_0 = Ptempx * x_2_0_0 + WPtempx * x_2_0_1;
    QUICKDouble x_2_0_3 = Ptempy * VY_3 + WPtempy * VY_4;
    QUICKDouble x_4_0_3 = Ptempx * x_2_0_3 + WPtempx * x_2_0_4;
    QUICKDouble x_11_0_3 = Ptempx * x_4_0_3 + WPtempx * x_4_0_4 + ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_28_0_3 = Ptempx * x_11_0_3 + WPtempx * x_11_0_4 + 2.000000 * ABtemp * (x_4_0_3 - CDcom * x_4_0_4);
    QUICKDouble x_8_0_3 = Ptempy * x_2_0_3 + WPtempy * x_2_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_18_0_3 = Ptempy * x_8_0_3 + WPtempy * x_8_0_4 + 2.000000 * ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_33_0_3 = Ptempy * x_18_0_3 + WPtempy * x_18_0_4 + 3.000000 * ABtemp * (x_8_0_3 - CDcom * x_8_0_4);
    QUICKDouble x_1_0_2 = Ptempx * VY_2 + WPtempx * VY_3;
    QUICKDouble x_7_0_1 = Ptempx * x_1_0_1 + WPtempx * x_1_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_3_0_0 = Ptempz * VY_0 + WPtempz * VY_1;
    QUICKDouble x_3_0_1 = Ptempz * VY_1 + WPtempz * VY_2;
    QUICKDouble x_6_0_0 = Ptempx * x_3_0_0 + WPtempx * x_3_0_1;
    QUICKDouble x_3_0_3 = Ptempz * VY_3 + WPtempz * VY_4;
    QUICKDouble x_6_0_3 = Ptempx * x_3_0_3 + WPtempx * x_3_0_4;
    QUICKDouble x_13_0_3 = Ptempx * x_6_0_3 + WPtempx * x_6_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_26_0_3 = Ptempx * x_13_0_3 + WPtempx * x_13_0_4 + 2.000000 * ABtemp * (x_6_0_3 - CDcom * x_6_0_4);
    QUICKDouble x_9_0_3 = Ptempz * x_3_0_3 + WPtempz * x_3_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_19_0_3 = Ptempz * x_9_0_3 + WPtempz * x_9_0_4 + 2.000000 * ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_34_0_3 = Ptempz * x_19_0_3 + WPtempz * x_19_0_4 + 3.000000 * ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_12_0_3 = Ptempx * x_8_0_3 + WPtempx * x_8_0_4;
    QUICKDouble x_20_0_3 = Ptempx * x_12_0_3 + WPtempx * x_12_0_4 + ABtemp * (x_8_0_3 - CDcom * x_8_0_4);
    QUICKDouble x_8_0_0 = Ptempy * x_2_0_0 + WPtempy * x_2_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_29_0_3 = Ptempx * x_18_0_3 + WPtempx * x_18_0_4;
    QUICKDouble x_14_0_3 = Ptempx * x_9_0_3 + WPtempx * x_9_0_4;
    QUICKDouble x_21_0_3 = Ptempx * x_14_0_3 + WPtempx * x_14_0_4 + ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_27_0_3 = Ptempx * x_19_0_3 + WPtempx * x_19_0_4;
    QUICKDouble x_31_0_3 = Ptempy * x_19_0_3 + WPtempy * x_19_0_4;
    QUICKDouble x_5_0_3 = Ptempy * x_3_0_3 + WPtempy * x_3_0_4;
    QUICKDouble x_15_0_3 = Ptempy * x_5_0_3 + WPtempy * x_5_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_30_0_3 = Ptempy * x_15_0_3 + WPtempy * x_15_0_4 + 2.000000 * ABtemp * (x_5_0_3 - CDcom * x_5_0_4);
    QUICKDouble x_7_0_2 = Ptempx * x_1_0_2 + WPtempx * x_1_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_2_0_2 = Ptempy * VY_2 + WPtempy * VY_3;
    QUICKDouble x_4_0_1 = Ptempx * x_2_0_1 + WPtempx * x_2_0_2;
    QUICKDouble x_3_0_2 = Ptempz * VY_2 + WPtempz * VY_3;
    QUICKDouble x_6_0_1 = Ptempx * x_3_0_1 + WPtempx * x_3_0_2;
    QUICKDouble x_10_0_3 = Ptempx * x_5_0_3 + WPtempx * x_5_0_4;
    QUICKDouble x_23_0_3 = Ptempx * x_10_0_3 + WPtempx * x_10_0_4 + ABtemp * (x_5_0_3 - CDcom * x_5_0_4);
    QUICKDouble x_8_0_1 = Ptempy * x_2_0_1 + WPtempy * x_2_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_5_0_0 = Ptempy * x_3_0_0 + WPtempy * x_3_0_1;
    QUICKDouble x_24_0_3 = Ptempx * x_15_0_3 + WPtempx * x_15_0_4;
    QUICKDouble x_6_0_2 = Ptempx * x_3_0_2 + WPtempx * x_3_0_3;
    QUICKDouble x_4_0_2 = Ptempx * x_2_0_2 + WPtempx * x_2_0_3;
    QUICKDouble x_5_0_1 = Ptempy * x_3_0_1 + WPtempy * x_3_0_2;
    QUICKDouble x_16_0_3 = Ptempy * x_9_0_3 + WPtempy * x_9_0_4;
    QUICKDouble x_25_0_3 = Ptempx * x_16_0_3 + WPtempx * x_16_0_4;
    QUICKDouble x_5_0_2 = Ptempy * x_3_0_2 + WPtempy * x_3_0_3;
    QUICKDouble x_8_0_2 = Ptempy * x_2_0_2 + WPtempy * x_2_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_9_0_0 = Ptempz * x_3_0_0 + WPtempz * x_3_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_22_0_3 = Ptempy * x_16_0_3 + WPtempy * x_16_0_4 + ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_9_0_2 = Ptempz * x_3_0_2 + WPtempz * x_3_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_9_0_1 = Ptempz * x_3_0_1 + WPtempz * x_3_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_19_0_2 = Ptempz * x_9_0_2 + WPtempz * x_9_0_3 + 2.000000 * ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_34_0_2 = Ptempz * x_19_0_2 + WPtempz * x_19_0_3 + 3.000000 * ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_55_0_2 = Ptempz * x_34_0_2 + WPtempz * x_34_0_3 + 4.000000 * ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_18_0_2 = Ptempy * x_8_0_2 + WPtempy * x_8_0_3 + 2.000000 * ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_33_0_2 = Ptempy * x_18_0_2 + WPtempy * x_18_0_3 + 3.000000 * ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_54_0_2 = Ptempy * x_33_0_2 + WPtempy * x_33_0_3 + 4.000000 * ABtemp * (x_18_0_2 - CDcom * x_18_0_3);
    QUICKDouble x_17_0_1 = Ptempx * x_7_0_1 + WPtempx * x_7_0_2 + 2.000000 * ABtemp * (x_1_0_1 - CDcom * x_1_0_2);
    QUICKDouble x_17_0_0 = Ptempx * x_7_0_0 + WPtempx * x_7_0_1 + 2.000000 * ABtemp * (x_1_0_0 - CDcom * x_1_0_1);
    QUICKDouble x_32_0_0 = Ptempx * x_17_0_0 + WPtempx * x_17_0_1 + 3.000000 * ABtemp * (x_7_0_0 - CDcom * x_7_0_1);
    QUICKDouble x_17_0_2 = Ptempx * x_7_0_2 + WPtempx * x_7_0_3 + 2.000000 * ABtemp * (x_1_0_2 - CDcom * x_1_0_3);
    QUICKDouble x_32_0_2 = Ptempx * x_17_0_2 + WPtempx * x_17_0_3 + 3.000000 * ABtemp * (x_7_0_2 - CDcom * x_7_0_3);
    QUICKDouble x_53_0_2 = Ptempx * x_32_0_2 + WPtempx * x_32_0_3 + 4.000000 * ABtemp * (x_17_0_2 - CDcom * x_17_0_3);
    QUICKDouble x_11_0_1 = Ptempx * x_4_0_1 + WPtempx * x_4_0_2 + ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_11_0_0 = Ptempx * x_4_0_0 + WPtempx * x_4_0_1 + ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_28_0_0 = Ptempx * x_11_0_0 + WPtempx * x_11_0_1 + 2.000000 * ABtemp * (x_4_0_0 - CDcom * x_4_0_1);
    QUICKDouble x_11_0_2 = Ptempx * x_4_0_2 + WPtempx * x_4_0_3 + ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_28_0_2 = Ptempx * x_11_0_2 + WPtempx * x_11_0_3 + 2.000000 * ABtemp * (x_4_0_2 - CDcom * x_4_0_3);
    QUICKDouble x_52_0_2 = Ptempx * x_28_0_2 + WPtempx * x_28_0_3 + 3.000000 * ABtemp * (x_11_0_2 - CDcom * x_11_0_3);
    QUICKDouble x_18_0_0 = Ptempy * x_8_0_0 + WPtempy * x_8_0_1 + 2.000000 * ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_18_0_1 = Ptempy * x_8_0_1 + WPtempy * x_8_0_2 + 2.000000 * ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_33_0_0 = Ptempy * x_18_0_0 + WPtempy * x_18_0_1 + 3.000000 * ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_51_0_2 = Ptempx * x_33_0_2 + WPtempx * x_33_0_3;
    QUICKDouble x_32_0_1 = Ptempx * x_17_0_1 + WPtempx * x_17_0_2 + 3.000000 * ABtemp * (x_7_0_1 - CDcom * x_7_0_2);
    QUICKDouble x_13_0_1 = Ptempx * x_6_0_1 + WPtempx * x_6_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_13_0_0 = Ptempx * x_6_0_0 + WPtempx * x_6_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_26_0_0 = Ptempx * x_13_0_0 + WPtempx * x_13_0_1 + 2.000000 * ABtemp * (x_6_0_0 - CDcom * x_6_0_1);
    QUICKDouble x_13_0_2 = Ptempx * x_6_0_2 + WPtempx * x_6_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_26_0_2 = Ptempx * x_13_0_2 + WPtempx * x_13_0_3 + 2.000000 * ABtemp * (x_6_0_2 - CDcom * x_6_0_3);
    QUICKDouble x_50_0_2 = Ptempx * x_26_0_2 + WPtempx * x_26_0_3 + 3.000000 * ABtemp * (x_13_0_2 - CDcom * x_13_0_3);
    QUICKDouble x_49_0_2 = Ptempx * x_34_0_2 + WPtempx * x_34_0_3;
    QUICKDouble x_33_0_1 = Ptempy * x_18_0_1 + WPtempy * x_18_0_2 + 3.000000 * ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_15_0_2 = Ptempy * x_5_0_2 + WPtempy * x_5_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_30_0_2 = Ptempy * x_15_0_2 + WPtempy * x_15_0_3 + 2.000000 * ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_48_0_2 = Ptempy * x_30_0_2 + WPtempy * x_30_0_3 + 3.000000 * ABtemp * (x_15_0_2 - CDcom * x_15_0_3);
    QUICKDouble x_19_0_1 = Ptempz * x_9_0_1 + WPtempz * x_9_0_2 + 2.000000 * ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_34_0_1 = Ptempz * x_19_0_1 + WPtempz * x_19_0_2 + 3.000000 * ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_19_0_0 = Ptempz * x_9_0_0 + WPtempz * x_9_0_1 + 2.000000 * ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_34_0_0 = Ptempz * x_19_0_0 + WPtempz * x_19_0_1 + 3.000000 * ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_47_0_2 = Ptempy * x_34_0_2 + WPtempy * x_34_0_3;
    QUICKDouble x_12_0_1 = Ptempx * x_8_0_1 + WPtempx * x_8_0_2;
    QUICKDouble x_12_0_0 = Ptempx * x_8_0_0 + WPtempx * x_8_0_1;
    QUICKDouble x_20_0_0 = Ptempx * x_12_0_0 + WPtempx * x_12_0_1 + ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_12_0_2 = Ptempx * x_8_0_2 + WPtempx * x_8_0_3;
    QUICKDouble x_20_0_2 = Ptempx * x_12_0_2 + WPtempx * x_12_0_3 + ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_46_0_2 = Ptempx * x_20_0_2 + WPtempx * x_20_0_3 + 2.000000 * ABtemp * (x_12_0_2 - CDcom * x_12_0_3);
    QUICKDouble x_29_0_0 = Ptempx * x_18_0_0 + WPtempx * x_18_0_1;
    QUICKDouble x_29_0_2 = Ptempx * x_18_0_2 + WPtempx * x_18_0_3;
    QUICKDouble x_45_0_2 = Ptempx * x_29_0_2 + WPtempx * x_29_0_3 + ABtemp * (x_18_0_2 - CDcom * x_18_0_3);
    QUICKDouble x_14_0_1 = Ptempx * x_9_0_1 + WPtempx * x_9_0_2;
    QUICKDouble x_14_0_0 = Ptempx * x_9_0_0 + WPtempx * x_9_0_1;
    QUICKDouble x_21_0_0 = Ptempx * x_14_0_0 + WPtempx * x_14_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_14_0_2 = Ptempx * x_9_0_2 + WPtempx * x_9_0_3;
    QUICKDouble x_21_0_2 = Ptempx * x_14_0_2 + WPtempx * x_14_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_44_0_2 = Ptempx * x_21_0_2 + WPtempx * x_21_0_3 + 2.000000 * ABtemp * (x_14_0_2 - CDcom * x_14_0_3);
    QUICKDouble x_27_0_0 = Ptempx * x_19_0_0 + WPtempx * x_19_0_1;
    QUICKDouble x_27_0_2 = Ptempx * x_19_0_2 + WPtempx * x_19_0_3;
    QUICKDouble x_43_0_2 = Ptempx * x_27_0_2 + WPtempx * x_27_0_3 + ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_16_0_2 = Ptempy * x_9_0_2 + WPtempy * x_9_0_3;
    QUICKDouble x_22_0_2 = Ptempy * x_16_0_2 + WPtempy * x_16_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_42_0_2 = Ptempy * x_22_0_2 + WPtempy * x_22_0_3 + 2.000000 * ABtemp * (x_16_0_2 - CDcom * x_16_0_3);
    QUICKDouble x_31_0_2 = Ptempy * x_19_0_2 + WPtempy * x_19_0_3;
    QUICKDouble x_41_0_2 = Ptempy * x_31_0_2 + WPtempy * x_31_0_3 + ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_31_0_1 = Ptempy * x_19_0_1 + WPtempy * x_19_0_2;
    QUICKDouble x_31_0_0 = Ptempy * x_19_0_0 + WPtempy * x_19_0_1;
    QUICKDouble x_40_0_2 = Ptempx * x_31_0_2 + WPtempx * x_31_0_3;
    QUICKDouble x_27_0_1 = Ptempx * x_19_0_1 + WPtempx * x_19_0_2;
    QUICKDouble x_29_0_1 = Ptempx * x_18_0_1 + WPtempx * x_18_0_2;
    QUICKDouble x_15_0_0 = Ptempy * x_5_0_0 + WPtempy * x_5_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_15_0_1 = Ptempy * x_5_0_1 + WPtempy * x_5_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_30_0_0 = Ptempy * x_15_0_0 + WPtempy * x_15_0_1 + 2.000000 * ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_39_0_2 = Ptempx * x_30_0_2 + WPtempx * x_30_0_3;
    QUICKDouble x_30_0_1 = Ptempy * x_15_0_1 + WPtempy * x_15_0_2 + 2.000000 * ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_28_0_1 = Ptempx * x_11_0_1 + WPtempx * x_11_0_2 + 2.000000 * ABtemp * (x_4_0_1 - CDcom * x_4_0_2);
    QUICKDouble x_26_0_1 = Ptempx * x_13_0_1 + WPtempx * x_13_0_2 + 2.000000 * ABtemp * (x_6_0_1 - CDcom * x_6_0_2);
    QUICKDouble x_10_0_1 = Ptempx * x_5_0_1 + WPtempx * x_5_0_2;
    QUICKDouble x_10_0_0 = Ptempx * x_5_0_0 + WPtempx * x_5_0_1;
    QUICKDouble x_23_0_0 = Ptempx * x_10_0_0 + WPtempx * x_10_0_1 + ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_10_0_2 = Ptempx * x_5_0_2 + WPtempx * x_5_0_3;
    QUICKDouble x_23_0_2 = Ptempx * x_10_0_2 + WPtempx * x_10_0_3 + ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_38_0_2 = Ptempx * x_23_0_2 + WPtempx * x_23_0_3 + 2.000000 * ABtemp * (x_10_0_2 - CDcom * x_10_0_3);
    QUICKDouble x_20_0_1 = Ptempx * x_12_0_1 + WPtempx * x_12_0_2 + ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_24_0_0 = Ptempx * x_15_0_0 + WPtempx * x_15_0_1;
    QUICKDouble x_24_0_2 = Ptempx * x_15_0_2 + WPtempx * x_15_0_3;
    QUICKDouble x_37_0_2 = Ptempx * x_24_0_2 + WPtempx * x_24_0_3 + ABtemp * (x_15_0_2 - CDcom * x_15_0_3);
    QUICKDouble x_23_0_1 = Ptempx * x_10_0_1 + WPtempx * x_10_0_2 + ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_21_0_1 = Ptempx * x_14_0_1 + WPtempx * x_14_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_16_0_1 = Ptempy * x_9_0_1 + WPtempy * x_9_0_2;
    QUICKDouble x_16_0_0 = Ptempy * x_9_0_0 + WPtempy * x_9_0_1;
    QUICKDouble x_25_0_0 = Ptempx * x_16_0_0 + WPtempx * x_16_0_1;
    QUICKDouble x_25_0_2 = Ptempx * x_16_0_2 + WPtempx * x_16_0_3;
    QUICKDouble x_36_0_2 = Ptempx * x_25_0_2 + WPtempx * x_25_0_3 + ABtemp * (x_16_0_2 - CDcom * x_16_0_3);
    QUICKDouble x_24_0_1 = Ptempx * x_15_0_1 + WPtempx * x_15_0_2;
    QUICKDouble x_25_0_1 = Ptempx * x_16_0_1 + WPtempx * x_16_0_2;
    QUICKDouble x_22_0_0 = Ptempy * x_16_0_0 + WPtempy * x_16_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_35_0_2 = Ptempx * x_22_0_2 + WPtempx * x_22_0_3;
    QUICKDouble x_22_0_1 = Ptempy * x_16_0_1 + WPtempy * x_16_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_55_0_1 = Ptempz * x_34_0_1 + WPtempz * x_34_0_2 + 4.000000 * ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_55_0_0 = Ptempz * x_34_0_0 + WPtempz * x_34_0_1 + 4.000000 * ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_55_3_1 = Qtempz * x_55_0_1 + WQtempz * x_55_0_2 + 5.000000 * ABCDtemp * x_34_0_2;
    QUICKDouble x_55_3_0 = Qtempz * x_55_0_0 + WQtempz * x_55_0_1 + 5.000000 * ABCDtemp * x_34_0_1;
    QUICKDouble x_54_0_1 = Ptempy * x_33_0_1 + WPtempy * x_33_0_2 + 4.000000 * ABtemp * (x_18_0_1 - CDcom * x_18_0_2);
    QUICKDouble x_54_3_1 = Qtempz * x_54_0_1 + WQtempz * x_54_0_2;
    QUICKDouble x_54_0_0 = Ptempy * x_33_0_0 + WPtempy * x_33_0_1 + 4.000000 * ABtemp * (x_18_0_0 - CDcom * x_18_0_1);
    QUICKDouble x_54_3_0 = Qtempz * x_54_0_0 + WQtempz * x_54_0_1;
    LOCSTORE(store, 54, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_54_3_0 + WQtempx * x_54_3_1;
    LOCSTORE(store, 54, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_54_3_0 + WQtempz * x_54_3_1 + CDtemp * (x_54_0_0 - ABcom * x_54_0_1);
    QUICKDouble x_54_2_1 = Qtempy * x_54_0_1 + WQtempy * x_54_0_2 + 5.000000 * ABCDtemp * x_33_0_2;
    QUICKDouble x_54_2_0 = Qtempy * x_54_0_0 + WQtempy * x_54_0_1 + 5.000000 * ABCDtemp * x_33_0_1;
    LOCSTORE(store, 54, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_54_2_0 + WQtempx * x_54_2_1;
    QUICKDouble x_54_1_1 = Qtempx * x_54_0_1 + WQtempx * x_54_0_2;
    QUICKDouble x_54_1_0 = Qtempx * x_54_0_0 + WQtempx * x_54_0_1;
    LOCSTORE(store, 54, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_54_1_0 + WQtempx * x_54_1_1 + CDtemp * (x_54_0_0 - ABcom * x_54_0_1);
    QUICKDouble x_53_0_1 = Ptempx * x_32_0_1 + WPtempx * x_32_0_2 + 4.000000 * ABtemp * (x_17_0_1 - CDcom * x_17_0_2);
    QUICKDouble x_53_3_1 = Qtempz * x_53_0_1 + WQtempz * x_53_0_2;
    QUICKDouble x_53_0_0 = Ptempx * x_32_0_0 + WPtempx * x_32_0_1 + 4.000000 * ABtemp * (x_17_0_0 - CDcom * x_17_0_1);
    QUICKDouble x_53_3_0 = Qtempz * x_53_0_0 + WQtempz * x_53_0_1;
    LOCSTORE(store, 53, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_53_3_0 + WQtempy * x_53_3_1;
    LOCSTORE(store, 53, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_53_3_0 + WQtempz * x_53_3_1 + CDtemp * (x_53_0_0 - ABcom * x_53_0_1);
    QUICKDouble x_53_2_1 = Qtempy * x_53_0_1 + WQtempy * x_53_0_2;
    QUICKDouble x_53_2_0 = Qtempy * x_53_0_0 + WQtempy * x_53_0_1;
    LOCSTORE(store, 53, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_53_2_0 + WQtempy * x_53_2_1 + CDtemp * (x_53_0_0 - ABcom * x_53_0_1);
    QUICKDouble x_32_1_1 = Qtempx * x_32_0_1 + WQtempx * x_32_0_2 + 4.000000 * ABCDtemp * x_17_0_2;
    QUICKDouble x_53_1_1 = Qtempx * x_53_0_1 + WQtempx * x_53_0_2 + 5.000000 * ABCDtemp * x_32_0_2;
    QUICKDouble x_53_1_0 = Qtempx * x_53_0_0 + WQtempx * x_53_0_1 + 5.000000 * ABCDtemp * x_32_0_1;
    LOCSTORE(store, 53, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_53_1_0 + WQtempx * x_53_1_1 + CDtemp * (x_53_0_0 - ABcom * x_53_0_1) + 5.000000 * ABCDtemp * x_32_1_1;
    QUICKDouble x_52_0_1 = Ptempx * x_28_0_1 + WPtempx * x_28_0_2 + 3.000000 * ABtemp * (x_11_0_1 - CDcom * x_11_0_2);
    QUICKDouble x_52_3_1 = Qtempz * x_52_0_1 + WQtempz * x_52_0_2;
    QUICKDouble x_52_0_0 = Ptempx * x_28_0_0 + WPtempx * x_28_0_1 + 3.000000 * ABtemp * (x_11_0_0 - CDcom * x_11_0_1);
    QUICKDouble x_52_3_0 = Qtempz * x_52_0_0 + WQtempz * x_52_0_1;
    LOCSTORE(store, 52, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_52_3_0 + WQtempz * x_52_3_1 + CDtemp * (x_52_0_0 - ABcom * x_52_0_1);
    QUICKDouble x_32_2_1 = Qtempy * x_32_0_1 + WQtempy * x_32_0_2;
    LOCSTORE(store, 53, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_53_2_0 + WQtempx * x_53_2_1 + 5.000000 * ABCDtemp * x_32_2_1;
    QUICKDouble x_52_2_1 = Qtempy * x_52_0_1 + WQtempy * x_52_0_2 + ABCDtemp * x_32_0_2;
    QUICKDouble x_52_2_0 = Qtempy * x_52_0_0 + WQtempy * x_52_0_1 + ABCDtemp * x_32_0_1;
    LOCSTORE(store, 52, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_52_2_0 + WQtempy * x_52_2_1 + CDtemp * (x_52_0_0 - ABcom * x_52_0_1) + ABCDtemp * x_32_2_1;
    QUICKDouble x_28_1_1 = Qtempx * x_28_0_1 + WQtempx * x_28_0_2 + 3.000000 * ABCDtemp * x_11_0_2;
    QUICKDouble x_52_1_1 = Qtempx * x_52_0_1 + WQtempx * x_52_0_2 + 4.000000 * ABCDtemp * x_28_0_2;
    QUICKDouble x_52_1_0 = Qtempx * x_52_0_0 + WQtempx * x_52_0_1 + 4.000000 * ABCDtemp * x_28_0_1;
    LOCSTORE(store, 52, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_52_1_0 + WQtempx * x_52_1_1 + CDtemp * (x_52_0_0 - ABcom * x_52_0_1) + 4.000000 * ABCDtemp * x_28_1_1;
    QUICKDouble x_51_0_1 = Ptempx * x_33_0_1 + WPtempx * x_33_0_2;
    QUICKDouble x_51_3_1 = Qtempz * x_51_0_1 + WQtempz * x_51_0_2;
    QUICKDouble x_51_0_0 = Ptempx * x_33_0_0 + WPtempx * x_33_0_1;
    QUICKDouble x_51_3_0 = Qtempz * x_51_0_0 + WQtempz * x_51_0_1;
    LOCSTORE(store, 51, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_51_3_0 + WQtempz * x_51_3_1 + CDtemp * (x_51_0_0 - ABcom * x_51_0_1);
    QUICKDouble x_33_2_1 = Qtempy * x_33_0_1 + WQtempy * x_33_0_2 + 4.000000 * ABCDtemp * x_18_0_2;
    LOCSTORE(store, 54, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_54_2_0 + WQtempy * x_54_2_1 + CDtemp * (x_54_0_0 - ABcom * x_54_0_1) + 5.000000 * ABCDtemp * x_33_2_1;
    QUICKDouble x_51_2_1 = Qtempy * x_51_0_1 + WQtempy * x_51_0_2 + 4.000000 * ABCDtemp * x_29_0_2;
    QUICKDouble x_51_2_0 = Qtempy * x_51_0_0 + WQtempy * x_51_0_1 + 4.000000 * ABCDtemp * x_29_0_1;
    LOCSTORE(store, 51, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_51_2_0 + WQtempx * x_51_2_1 + ABCDtemp * x_33_2_1;
    QUICKDouble x_33_1_1 = Qtempx * x_33_0_1 + WQtempx * x_33_0_2;
    QUICKDouble x_51_1_1 = Qtempx * x_51_0_1 + WQtempx * x_51_0_2 + ABCDtemp * x_33_0_2;
    QUICKDouble x_51_1_0 = Qtempx * x_51_0_0 + WQtempx * x_51_0_1 + ABCDtemp * x_33_0_1;
    LOCSTORE(store, 51, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_51_1_0 + WQtempx * x_51_1_1 + CDtemp * (x_51_0_0 - ABcom * x_51_0_1) + ABCDtemp * x_33_1_1;
    QUICKDouble x_32_3_1 = Qtempz * x_32_0_1 + WQtempz * x_32_0_2;
    LOCSTORE(store, 53, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_53_3_0 + WQtempx * x_53_3_1 + 5.000000 * ABCDtemp * x_32_3_1;
    LOCSTORE(store, 52, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_52_3_0 + WQtempy * x_52_3_1 + ABCDtemp * x_32_3_1;
    QUICKDouble x_50_0_1 = Ptempx * x_26_0_1 + WPtempx * x_26_0_2 + 3.000000 * ABtemp * (x_13_0_1 - CDcom * x_13_0_2);
    QUICKDouble x_50_3_1 = Qtempz * x_50_0_1 + WQtempz * x_50_0_2 + ABCDtemp * x_32_0_2;
    QUICKDouble x_50_0_0 = Ptempx * x_26_0_0 + WPtempx * x_26_0_1 + 3.000000 * ABtemp * (x_13_0_0 - CDcom * x_13_0_1);
    QUICKDouble x_50_3_0 = Qtempz * x_50_0_0 + WQtempz * x_50_0_1 + ABCDtemp * x_32_0_1;
    LOCSTORE(store, 50, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_50_3_0 + WQtempy * x_50_3_1;
    LOCSTORE(store, 50, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_50_3_0 + WQtempz * x_50_3_1 + CDtemp * (x_50_0_0 - ABcom * x_50_0_1) + ABCDtemp * x_32_3_1;
    QUICKDouble x_50_2_1 = Qtempy * x_50_0_1 + WQtempy * x_50_0_2;
    QUICKDouble x_50_2_0 = Qtempy * x_50_0_0 + WQtempy * x_50_0_1;
    LOCSTORE(store, 50, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_50_2_0 + WQtempy * x_50_2_1 + CDtemp * (x_50_0_0 - ABcom * x_50_0_1);
    QUICKDouble x_26_1_1 = Qtempx * x_26_0_1 + WQtempx * x_26_0_2 + 3.000000 * ABCDtemp * x_13_0_2;
    QUICKDouble x_50_1_1 = Qtempx * x_50_0_1 + WQtempx * x_50_0_2 + 4.000000 * ABCDtemp * x_26_0_2;
    QUICKDouble x_50_1_0 = Qtempx * x_50_0_0 + WQtempx * x_50_0_1 + 4.000000 * ABCDtemp * x_26_0_1;
    LOCSTORE(store, 50, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_50_1_0 + WQtempx * x_50_1_1 + CDtemp * (x_50_0_0 - ABcom * x_50_0_1) + 4.000000 * ABCDtemp * x_26_1_1;
    QUICKDouble x_49_0_1 = Ptempx * x_34_0_1 + WPtempx * x_34_0_2;
    QUICKDouble x_49_0_0 = Ptempx * x_34_0_0 + WPtempx * x_34_0_1;
    QUICKDouble x_49_3_1 = Qtempz * x_49_0_1 + WQtempz * x_49_0_2 + 4.000000 * ABCDtemp * x_27_0_2;
    QUICKDouble x_49_3_0 = Qtempz * x_49_0_0 + WQtempz * x_49_0_1 + 4.000000 * ABCDtemp * x_27_0_1;
    LOCSTORE(store, 49, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_49_3_0 + WQtempy * x_49_3_1;
    QUICKDouble x_33_3_1 = Qtempz * x_33_0_1 + WQtempz * x_33_0_2;
    LOCSTORE(store, 54, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_54_3_0 + WQtempy * x_54_3_1 + 5.000000 * ABCDtemp * x_33_3_1;
    LOCSTORE(store, 51, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_51_3_0 + WQtempx * x_51_3_1 + ABCDtemp * x_33_3_1;
    QUICKDouble x_48_0_1 = Ptempy * x_30_0_1 + WPtempy * x_30_0_2 + 3.000000 * ABtemp * (x_15_0_1 - CDcom * x_15_0_2);
    QUICKDouble x_48_3_1 = Qtempz * x_48_0_1 + WQtempz * x_48_0_2 + ABCDtemp * x_33_0_2;
    QUICKDouble x_48_0_0 = Ptempy * x_30_0_0 + WPtempy * x_30_0_1 + 3.000000 * ABtemp * (x_15_0_0 - CDcom * x_15_0_1);
    QUICKDouble x_48_3_0 = Qtempz * x_48_0_0 + WQtempz * x_48_0_1 + ABCDtemp * x_33_0_1;
    LOCSTORE(store, 48, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_48_3_0 + WQtempx * x_48_3_1;
    LOCSTORE(store, 48, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_48_3_0 + WQtempz * x_48_3_1 + CDtemp * (x_48_0_0 - ABcom * x_48_0_1) + ABCDtemp * x_33_3_1;
    QUICKDouble x_48_2_1 = Qtempy * x_48_0_1 + WQtempy * x_48_0_2 + 4.000000 * ABCDtemp * x_30_0_2;
    QUICKDouble x_48_2_0 = Qtempy * x_48_0_0 + WQtempy * x_48_0_1 + 4.000000 * ABCDtemp * x_30_0_1;
    LOCSTORE(store, 48, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_48_2_0 + WQtempx * x_48_2_1;
    QUICKDouble x_48_1_1 = Qtempx * x_48_0_1 + WQtempx * x_48_0_2;
    QUICKDouble x_48_1_0 = Qtempx * x_48_0_0 + WQtempx * x_48_0_1;
    LOCSTORE(store, 48, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_48_1_0 + WQtempx * x_48_1_1 + CDtemp * (x_48_0_0 - ABcom * x_48_0_1);
    QUICKDouble x_34_3_1 = Qtempz * x_34_0_1 + WQtempz * x_34_0_2 + 4.000000 * ABCDtemp * x_19_0_2;
    LOCSTORE(store, 55, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_55_3_0 + WQtempz * x_55_3_1 + CDtemp * (x_55_0_0 - ABcom * x_55_0_1) + 5.000000 * ABCDtemp * x_34_3_1;
    LOCSTORE(store, 49, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_49_3_0 + WQtempx * x_49_3_1 + ABCDtemp * x_34_3_1;
    QUICKDouble x_47_0_1 = Ptempy * x_34_0_1 + WPtempy * x_34_0_2;
    QUICKDouble x_47_0_0 = Ptempy * x_34_0_0 + WPtempy * x_34_0_1;
    QUICKDouble x_47_3_1 = Qtempz * x_47_0_1 + WQtempz * x_47_0_2 + 4.000000 * ABCDtemp * x_31_0_2;
    QUICKDouble x_47_3_0 = Qtempz * x_47_0_0 + WQtempz * x_47_0_1 + 4.000000 * ABCDtemp * x_31_0_1;
    LOCSTORE(store, 47, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_47_3_0 + WQtempy * x_47_3_1 + ABCDtemp * x_34_3_1;
    QUICKDouble x_46_0_1 = Ptempx * x_20_0_1 + WPtempx * x_20_0_2 + 2.000000 * ABtemp * (x_12_0_1 - CDcom * x_12_0_2);
    QUICKDouble x_46_3_1 = Qtempz * x_46_0_1 + WQtempz * x_46_0_2;
    QUICKDouble x_46_0_0 = Ptempx * x_20_0_0 + WPtempx * x_20_0_1 + 2.000000 * ABtemp * (x_12_0_0 - CDcom * x_12_0_1);
    QUICKDouble x_46_3_0 = Qtempz * x_46_0_0 + WQtempz * x_46_0_1;
    LOCSTORE(store, 46, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_46_3_0 + WQtempz * x_46_3_1 + CDtemp * (x_46_0_0 - ABcom * x_46_0_1);
    QUICKDouble x_28_2_1 = Qtempy * x_28_0_1 + WQtempy * x_28_0_2 + ABCDtemp * x_17_0_2;
    LOCSTORE(store, 52, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_52_2_0 + WQtempx * x_52_2_1 + 4.000000 * ABCDtemp * x_28_2_1;
    QUICKDouble x_46_2_1 = Qtempy * x_46_0_1 + WQtempy * x_46_0_2 + 2.000000 * ABCDtemp * x_28_0_2;
    QUICKDouble x_46_2_0 = Qtempy * x_46_0_0 + WQtempy * x_46_0_1 + 2.000000 * ABCDtemp * x_28_0_1;
    LOCSTORE(store, 46, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_46_2_0 + WQtempy * x_46_2_1 + CDtemp * (x_46_0_0 - ABcom * x_46_0_1) + 2.000000 * ABCDtemp * x_28_2_1;
    QUICKDouble x_20_1_1 = Qtempx * x_20_0_1 + WQtempx * x_20_0_2 + 2.000000 * ABCDtemp * x_12_0_2;
    QUICKDouble x_46_1_1 = Qtempx * x_46_0_1 + WQtempx * x_46_0_2 + 3.000000 * ABCDtemp * x_20_0_2;
    QUICKDouble x_46_1_0 = Qtempx * x_46_0_0 + WQtempx * x_46_0_1 + 3.000000 * ABCDtemp * x_20_0_1;
    LOCSTORE(store, 46, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_46_1_0 + WQtempx * x_46_1_1 + CDtemp * (x_46_0_0 - ABcom * x_46_0_1) + 3.000000 * ABCDtemp * x_20_1_1;
    QUICKDouble x_45_0_1 = Ptempx * x_29_0_1 + WPtempx * x_29_0_2 + ABtemp * (x_18_0_1 - CDcom * x_18_0_2);
    QUICKDouble x_45_3_1 = Qtempz * x_45_0_1 + WQtempz * x_45_0_2;
    QUICKDouble x_45_0_0 = Ptempx * x_29_0_0 + WPtempx * x_29_0_1 + ABtemp * (x_18_0_0 - CDcom * x_18_0_1);
    QUICKDouble x_45_3_0 = Qtempz * x_45_0_0 + WQtempz * x_45_0_1;
    LOCSTORE(store, 45, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_45_3_0 + WQtempz * x_45_3_1 + CDtemp * (x_45_0_0 - ABcom * x_45_0_1);
    QUICKDouble x_29_2_1 = Qtempy * x_29_0_1 + WQtempy * x_29_0_2 + 3.000000 * ABCDtemp * x_12_0_2;
    LOCSTORE(store, 51, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_51_2_0 + WQtempy * x_51_2_1 + CDtemp * (x_51_0_0 - ABcom * x_51_0_1) + 4.000000 * ABCDtemp * x_29_2_1;
    QUICKDouble x_20_2_1 = Qtempy * x_20_0_1 + WQtempy * x_20_0_2 + 2.000000 * ABCDtemp * x_11_0_2;
    LOCSTORE(store, 46, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_46_2_0 + WQtempx * x_46_2_1 + 3.000000 * ABCDtemp * x_20_2_1;
    QUICKDouble x_45_2_1 = Qtempy * x_45_0_1 + WQtempy * x_45_0_2 + 3.000000 * ABCDtemp * x_20_0_2;
    QUICKDouble x_45_2_0 = Qtempy * x_45_0_0 + WQtempy * x_45_0_1 + 3.000000 * ABCDtemp * x_20_0_1;
    LOCSTORE(store, 45, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_45_2_0 + WQtempx * x_45_2_1 + 2.000000 * ABCDtemp * x_29_2_1;
    LOCSTORE(store, 45, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_45_2_0 + WQtempy * x_45_2_1 + CDtemp * (x_45_0_0 - ABcom * x_45_0_1) + 3.000000 * ABCDtemp * x_20_2_1;
    QUICKDouble x_29_1_1 = Qtempx * x_29_0_1 + WQtempx * x_29_0_2 + ABCDtemp * x_18_0_2;
    QUICKDouble x_45_1_1 = Qtempx * x_45_0_1 + WQtempx * x_45_0_2 + 2.000000 * ABCDtemp * x_29_0_2;
    QUICKDouble x_45_1_0 = Qtempx * x_45_0_0 + WQtempx * x_45_0_1 + 2.000000 * ABCDtemp * x_29_0_1;
    LOCSTORE(store, 45, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_45_1_0 + WQtempx * x_45_1_1 + CDtemp * (x_45_0_0 - ABcom * x_45_0_1) + 2.000000 * ABCDtemp * x_29_1_1;
    QUICKDouble x_44_0_1 = Ptempx * x_21_0_1 + WPtempx * x_21_0_2 + 2.000000 * ABtemp * (x_14_0_1 - CDcom * x_14_0_2);
    QUICKDouble x_44_3_1 = Qtempz * x_44_0_1 + WQtempz * x_44_0_2 + 2.000000 * ABCDtemp * x_26_0_2;
    QUICKDouble x_44_0_0 = Ptempx * x_21_0_0 + WPtempx * x_21_0_1 + 2.000000 * ABtemp * (x_14_0_0 - CDcom * x_14_0_1);
    QUICKDouble x_44_3_0 = Qtempz * x_44_0_0 + WQtempz * x_44_0_1 + 2.000000 * ABCDtemp * x_26_0_1;
    LOCSTORE(store, 44, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_44_3_0 + WQtempy * x_44_3_1;
    QUICKDouble x_44_2_1 = Qtempy * x_44_0_1 + WQtempy * x_44_0_2;
    QUICKDouble x_44_2_0 = Qtempy * x_44_0_0 + WQtempy * x_44_0_1;
    LOCSTORE(store, 44, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_44_2_0 + WQtempy * x_44_2_1 + CDtemp * (x_44_0_0 - ABcom * x_44_0_1);
    QUICKDouble x_21_1_1 = Qtempx * x_21_0_1 + WQtempx * x_21_0_2 + 2.000000 * ABCDtemp * x_14_0_2;
    QUICKDouble x_44_1_1 = Qtempx * x_44_0_1 + WQtempx * x_44_0_2 + 3.000000 * ABCDtemp * x_21_0_2;
    QUICKDouble x_44_1_0 = Qtempx * x_44_0_0 + WQtempx * x_44_0_1 + 3.000000 * ABCDtemp * x_21_0_1;
    LOCSTORE(store, 44, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_44_1_0 + WQtempx * x_44_1_1 + CDtemp * (x_44_0_0 - ABcom * x_44_0_1) + 3.000000 * ABCDtemp * x_21_1_1;
    QUICKDouble x_43_0_1 = Ptempx * x_27_0_1 + WPtempx * x_27_0_2 + ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_43_3_1 = Qtempz * x_43_0_1 + WQtempz * x_43_0_2 + 3.000000 * ABCDtemp * x_21_0_2;
    QUICKDouble x_43_0_0 = Ptempx * x_27_0_0 + WPtempx * x_27_0_1 + ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_43_3_0 = Qtempz * x_43_0_0 + WQtempz * x_43_0_1 + 3.000000 * ABCDtemp * x_21_0_1;
    LOCSTORE(store, 43, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_43_3_0 + WQtempy * x_43_3_1;
    QUICKDouble x_43_2_1 = Qtempy * x_43_0_1 + WQtempy * x_43_0_2;
    QUICKDouble x_43_2_0 = Qtempy * x_43_0_0 + WQtempy * x_43_0_1;
    LOCSTORE(store, 43, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_43_2_0 + WQtempy * x_43_2_1 + CDtemp * (x_43_0_0 - ABcom * x_43_0_1);
    QUICKDouble x_27_1_1 = Qtempx * x_27_0_1 + WQtempx * x_27_0_2 + ABCDtemp * x_19_0_2;
    QUICKDouble x_43_1_1 = Qtempx * x_43_0_1 + WQtempx * x_43_0_2 + 2.000000 * ABCDtemp * x_27_0_2;
    QUICKDouble x_43_1_0 = Qtempx * x_43_0_0 + WQtempx * x_43_0_1 + 2.000000 * ABCDtemp * x_27_0_1;
    LOCSTORE(store, 43, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_43_1_0 + WQtempx * x_43_1_1 + CDtemp * (x_43_0_0 - ABcom * x_43_0_1) + 2.000000 * ABCDtemp * x_27_1_1;
    QUICKDouble x_42_0_1 = Ptempy * x_22_0_1 + WPtempy * x_22_0_2 + 2.000000 * ABtemp * (x_16_0_1 - CDcom * x_16_0_2);
    QUICKDouble x_42_3_1 = Qtempz * x_42_0_1 + WQtempz * x_42_0_2 + 2.000000 * ABCDtemp * x_30_0_2;
    QUICKDouble x_42_0_0 = Ptempy * x_22_0_0 + WPtempy * x_22_0_1 + 2.000000 * ABtemp * (x_16_0_0 - CDcom * x_16_0_1);
    QUICKDouble x_42_3_0 = Qtempz * x_42_0_0 + WQtempz * x_42_0_1 + 2.000000 * ABCDtemp * x_30_0_1;
    LOCSTORE(store, 42, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_42_3_0 + WQtempx * x_42_3_1;
    QUICKDouble x_42_2_1 = Qtempy * x_42_0_1 + WQtempy * x_42_0_2 + 3.000000 * ABCDtemp * x_22_0_2;
    QUICKDouble x_42_2_0 = Qtempy * x_42_0_0 + WQtempy * x_42_0_1 + 3.000000 * ABCDtemp * x_22_0_1;
    LOCSTORE(store, 42, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_42_2_0 + WQtempx * x_42_2_1;
    QUICKDouble x_42_1_1 = Qtempx * x_42_0_1 + WQtempx * x_42_0_2;
    QUICKDouble x_42_1_0 = Qtempx * x_42_0_0 + WQtempx * x_42_0_1;
    LOCSTORE(store, 42, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_42_1_0 + WQtempx * x_42_1_1 + CDtemp * (x_42_0_0 - ABcom * x_42_0_1);
    QUICKDouble x_41_0_1 = Ptempy * x_31_0_1 + WPtempy * x_31_0_2 + ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_41_3_1 = Qtempz * x_41_0_1 + WQtempz * x_41_0_2 + 3.000000 * ABCDtemp * x_22_0_2;
    QUICKDouble x_41_0_0 = Ptempy * x_31_0_0 + WPtempy * x_31_0_1 + ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_41_3_0 = Qtempz * x_41_0_0 + WQtempz * x_41_0_1 + 3.000000 * ABCDtemp * x_22_0_1;
    LOCSTORE(store, 41, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_41_3_0 + WQtempx * x_41_3_1;
    QUICKDouble x_41_2_1 = Qtempy * x_41_0_1 + WQtempy * x_41_0_2 + 2.000000 * ABCDtemp * x_31_0_2;
    QUICKDouble x_41_2_0 = Qtempy * x_41_0_0 + WQtempy * x_41_0_1 + 2.000000 * ABCDtemp * x_31_0_1;
    QUICKDouble x_27_3_1 = Qtempz * x_27_0_1 + WQtempz * x_27_0_2 + 3.000000 * ABCDtemp * x_14_0_2;
    LOCSTORE(store, 49, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_49_3_0 + WQtempz * x_49_3_1 + CDtemp * (x_49_0_0 - ABcom * x_49_0_1) + 4.000000 * ABCDtemp * x_27_3_1;
    LOCSTORE(store, 43, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_43_3_0 + WQtempx * x_43_3_1 + 2.000000 * ABCDtemp * x_27_3_1;
    QUICKDouble x_31_3_1 = Qtempz * x_31_0_1 + WQtempz * x_31_0_2 + 3.000000 * ABCDtemp * x_16_0_2;
    LOCSTORE(store, 47, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_47_3_0 + WQtempz * x_47_3_1 + CDtemp * (x_47_0_0 - ABcom * x_47_0_1) + 4.000000 * ABCDtemp * x_31_3_1;
    LOCSTORE(store, 41, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_41_3_0 + WQtempy * x_41_3_1 + 2.000000 * ABCDtemp * x_31_3_1;
    QUICKDouble x_40_0_1 = Ptempx * x_31_0_1 + WPtempx * x_31_0_2;
    QUICKDouble x_40_3_1 = Qtempz * x_40_0_1 + WQtempz * x_40_0_2 + 3.000000 * ABCDtemp * x_25_0_2;
    QUICKDouble x_40_0_0 = Ptempx * x_31_0_0 + WPtempx * x_31_0_1;
    QUICKDouble x_40_3_0 = Qtempz * x_40_0_0 + WQtempz * x_40_0_1 + 3.000000 * ABCDtemp * x_25_0_1;
    LOCSTORE(store, 40, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_40_3_0 + WQtempy * x_40_3_1 + ABCDtemp * x_27_3_1;
    LOCSTORE(store, 40, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_40_3_0 + WQtempx * x_40_3_1 + ABCDtemp * x_31_3_1;
    QUICKDouble x_31_2_1 = Qtempy * x_31_0_1 + WQtempy * x_31_0_2 + ABCDtemp * x_19_0_2;
    LOCSTORE(store, 41, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_41_2_0 + WQtempy * x_41_2_1 + CDtemp * (x_41_0_0 - ABcom * x_41_0_1) + 2.000000 * ABCDtemp * x_31_2_1;
    QUICKDouble x_27_2_1 = Qtempy * x_27_0_1 + WQtempy * x_27_0_2;
    LOCSTORE(store, 43, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_43_2_0 + WQtempx * x_43_2_1 + 2.000000 * ABCDtemp * x_27_2_1;
    QUICKDouble x_40_2_1 = Qtempy * x_40_0_1 + WQtempy * x_40_0_2 + ABCDtemp * x_27_0_2;
    QUICKDouble x_40_2_0 = Qtempy * x_40_0_0 + WQtempy * x_40_0_1 + ABCDtemp * x_27_0_1;
    LOCSTORE(store, 40, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_40_2_0 + WQtempx * x_40_2_1 + ABCDtemp * x_31_2_1;
    LOCSTORE(store, 40, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_40_2_0 + WQtempy * x_40_2_1 + CDtemp * (x_40_0_0 - ABcom * x_40_0_1) + ABCDtemp * x_27_2_1;
    QUICKDouble x_30_3_1 = Qtempz * x_30_0_1 + WQtempz * x_30_0_2 + ABCDtemp * x_18_0_2;
    LOCSTORE(store, 48, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_48_3_0 + WQtempy * x_48_3_1 + 4.000000 * ABCDtemp * x_30_3_1;
    LOCSTORE(store, 42, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_42_3_0 + WQtempz * x_42_3_1 + CDtemp * (x_42_0_0 - ABcom * x_42_0_1) + 2.000000 * ABCDtemp * x_30_3_1;
    QUICKDouble x_29_3_1 = Qtempz * x_29_0_1 + WQtempz * x_29_0_2;
    LOCSTORE(store, 51, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_51_3_0 + WQtempy * x_51_3_1 + 4.000000 * ABCDtemp * x_29_3_1;
    LOCSTORE(store, 45, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_45_3_0 + WQtempx * x_45_3_1 + 2.000000 * ABCDtemp * x_29_3_1;
    QUICKDouble x_39_0_1 = Ptempx * x_30_0_1 + WPtempx * x_30_0_2;
    QUICKDouble x_39_3_1 = Qtempz * x_39_0_1 + WQtempz * x_39_0_2 + ABCDtemp * x_29_0_2;
    QUICKDouble x_39_0_0 = Ptempx * x_30_0_0 + WPtempx * x_30_0_1;
    QUICKDouble x_39_3_0 = Qtempz * x_39_0_0 + WQtempz * x_39_0_1 + ABCDtemp * x_29_0_1;
    LOCSTORE(store, 39, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_39_3_0 + WQtempx * x_39_3_1 + ABCDtemp * x_30_3_1;
    LOCSTORE(store, 39, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_39_3_0 + WQtempz * x_39_3_1 + CDtemp * (x_39_0_0 - ABcom * x_39_0_1) + ABCDtemp * x_29_3_1;
    QUICKDouble x_30_2_1 = Qtempy * x_30_0_1 + WQtempy * x_30_0_2 + 3.000000 * ABCDtemp * x_15_0_2;
    LOCSTORE(store, 48, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_48_2_0 + WQtempy * x_48_2_1 + CDtemp * (x_48_0_0 - ABcom * x_48_0_1) + 4.000000 * ABCDtemp * x_30_2_1;
    QUICKDouble x_39_2_1 = Qtempy * x_39_0_1 + WQtempy * x_39_0_2 + 3.000000 * ABCDtemp * x_24_0_2;
    QUICKDouble x_39_2_0 = Qtempy * x_39_0_0 + WQtempy * x_39_0_1 + 3.000000 * ABCDtemp * x_24_0_1;
    LOCSTORE(store, 39, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_39_2_0 + WQtempx * x_39_2_1 + ABCDtemp * x_30_2_1;
    QUICKDouble x_30_1_1 = Qtempx * x_30_0_1 + WQtempx * x_30_0_2;
    QUICKDouble x_39_1_1 = Qtempx * x_39_0_1 + WQtempx * x_39_0_2 + ABCDtemp * x_30_0_2;
    QUICKDouble x_39_1_0 = Qtempx * x_39_0_0 + WQtempx * x_39_0_1 + ABCDtemp * x_30_0_1;
    LOCSTORE(store, 39, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_39_1_0 + WQtempx * x_39_1_1 + CDtemp * (x_39_0_0 - ABcom * x_39_0_1) + ABCDtemp * x_30_1_1;
    QUICKDouble x_26_3_1 = Qtempz * x_26_0_1 + WQtempz * x_26_0_2 + ABCDtemp * x_17_0_2;
    LOCSTORE(store, 50, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_50_3_0 + WQtempx * x_50_3_1 + 4.000000 * ABCDtemp * x_26_3_1;
    LOCSTORE(store, 44, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_44_3_0 + WQtempz * x_44_3_1 + CDtemp * (x_44_0_0 - ABcom * x_44_0_1) + 2.000000 * ABCDtemp * x_26_3_1;
    QUICKDouble x_28_3_1 = Qtempz * x_28_0_1 + WQtempz * x_28_0_2;
    LOCSTORE(store, 52, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_52_3_0 + WQtempx * x_52_3_1 + 4.000000 * ABCDtemp * x_28_3_1;
    LOCSTORE(store, 46, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_46_3_0 + WQtempy * x_46_3_1 + 2.000000 * ABCDtemp * x_28_3_1;
    QUICKDouble x_38_0_1 = Ptempx * x_23_0_1 + WPtempx * x_23_0_2 + 2.000000 * ABtemp * (x_10_0_1 - CDcom * x_10_0_2);
    QUICKDouble x_38_3_1 = Qtempz * x_38_0_1 + WQtempz * x_38_0_2 + ABCDtemp * x_28_0_2;
    QUICKDouble x_38_0_0 = Ptempx * x_23_0_0 + WPtempx * x_23_0_1 + 2.000000 * ABtemp * (x_10_0_0 - CDcom * x_10_0_1);
    QUICKDouble x_38_3_0 = Qtempz * x_38_0_0 + WQtempz * x_38_0_1 + ABCDtemp * x_28_0_1;
    LOCSTORE(store, 38, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_38_3_0 + WQtempy * x_38_3_1 + ABCDtemp * x_26_3_1;
    LOCSTORE(store, 38, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_38_3_0 + WQtempz * x_38_3_1 + CDtemp * (x_38_0_0 - ABcom * x_38_0_1) + ABCDtemp * x_28_3_1;
    QUICKDouble x_26_2_1 = Qtempy * x_26_0_1 + WQtempy * x_26_0_2;
    LOCSTORE(store, 50, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_50_2_0 + WQtempx * x_50_2_1 + 4.000000 * ABCDtemp * x_26_2_1;
    QUICKDouble x_38_2_1 = Qtempy * x_38_0_1 + WQtempy * x_38_0_2 + ABCDtemp * x_26_0_2;
    QUICKDouble x_38_2_0 = Qtempy * x_38_0_0 + WQtempy * x_38_0_1 + ABCDtemp * x_26_0_1;
    LOCSTORE(store, 38, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_38_2_0 + WQtempy * x_38_2_1 + CDtemp * (x_38_0_0 - ABcom * x_38_0_1) + ABCDtemp * x_26_2_1;
    QUICKDouble x_23_1_1 = Qtempx * x_23_0_1 + WQtempx * x_23_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    QUICKDouble x_38_1_1 = Qtempx * x_38_0_1 + WQtempx * x_38_0_2 + 3.000000 * ABCDtemp * x_23_0_2;
    QUICKDouble x_38_1_0 = Qtempx * x_38_0_0 + WQtempx * x_38_0_1 + 3.000000 * ABCDtemp * x_23_0_1;
    LOCSTORE(store, 38, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_38_1_0 + WQtempx * x_38_1_1 + CDtemp * (x_38_0_0 - ABcom * x_38_0_1) + 3.000000 * ABCDtemp * x_23_1_1;
    QUICKDouble x_20_3_1 = Qtempz * x_20_0_1 + WQtempz * x_20_0_2;
    LOCSTORE(store, 46, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_46_3_0 + WQtempx * x_46_3_1 + 3.000000 * ABCDtemp * x_20_3_1;
    LOCSTORE(store, 45, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_45_3_0 + WQtempy * x_45_3_1 + 3.000000 * ABCDtemp * x_20_3_1;
    QUICKDouble x_37_0_1 = Ptempx * x_24_0_1 + WPtempx * x_24_0_2 + ABtemp * (x_15_0_1 - CDcom * x_15_0_2);
    QUICKDouble x_37_3_1 = Qtempz * x_37_0_1 + WQtempz * x_37_0_2 + ABCDtemp * x_20_0_2;
    QUICKDouble x_37_0_0 = Ptempx * x_24_0_0 + WPtempx * x_24_0_1 + ABtemp * (x_15_0_0 - CDcom * x_15_0_1);
    QUICKDouble x_37_3_0 = Qtempz * x_37_0_0 + WQtempz * x_37_0_1 + ABCDtemp * x_20_0_1;
    LOCSTORE(store, 37, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_37_3_0 + WQtempz * x_37_3_1 + CDtemp * (x_37_0_0 - ABcom * x_37_0_1) + ABCDtemp * x_20_3_1;
    QUICKDouble x_24_2_1 = Qtempy * x_24_0_1 + WQtempy * x_24_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    LOCSTORE(store, 39, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_39_2_0 + WQtempy * x_39_2_1 + CDtemp * (x_39_0_0 - ABcom * x_39_0_1) + 3.000000 * ABCDtemp * x_24_2_1;
    QUICKDouble x_23_2_1 = Qtempy * x_23_0_1 + WQtempy * x_23_0_2 + ABCDtemp * x_13_0_2;
    LOCSTORE(store, 38, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_38_2_0 + WQtempx * x_38_2_1 + 3.000000 * ABCDtemp * x_23_2_1;
    QUICKDouble x_37_2_1 = Qtempy * x_37_0_1 + WQtempy * x_37_0_2 + 2.000000 * ABCDtemp * x_23_0_2;
    QUICKDouble x_37_2_0 = Qtempy * x_37_0_0 + WQtempy * x_37_0_1 + 2.000000 * ABCDtemp * x_23_0_1;
    LOCSTORE(store, 37, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_37_2_0 + WQtempx * x_37_2_1 + 2.000000 * ABCDtemp * x_24_2_1;
    LOCSTORE(store, 37, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_37_2_0 + WQtempy * x_37_2_1 + CDtemp * (x_37_0_0 - ABcom * x_37_0_1) + 2.000000 * ABCDtemp * x_23_2_1;
    QUICKDouble x_24_1_1 = Qtempx * x_24_0_1 + WQtempx * x_24_0_2 + ABCDtemp * x_15_0_2;
    QUICKDouble x_37_1_1 = Qtempx * x_37_0_1 + WQtempx * x_37_0_2 + 2.000000 * ABCDtemp * x_24_0_2;
    QUICKDouble x_37_1_0 = Qtempx * x_37_0_0 + WQtempx * x_37_0_1 + 2.000000 * ABCDtemp * x_24_0_1;
    LOCSTORE(store, 37, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_37_1_0 + WQtempx * x_37_1_1 + CDtemp * (x_37_0_0 - ABcom * x_37_0_1) + 2.000000 * ABCDtemp * x_24_1_1;
    QUICKDouble x_21_3_1 = Qtempz * x_21_0_1 + WQtempz * x_21_0_2 + 2.000000 * ABCDtemp * x_13_0_2;
    LOCSTORE(store, 44, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_44_3_0 + WQtempx * x_44_3_1 + 3.000000 * ABCDtemp * x_21_3_1;
    LOCSTORE(store, 43, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_43_3_0 + WQtempz * x_43_3_1 + CDtemp * (x_43_0_0 - ABcom * x_43_0_1) + 3.000000 * ABCDtemp * x_21_3_1;
    QUICKDouble x_23_3_1 = Qtempz * x_23_0_1 + WQtempz * x_23_0_2 + ABCDtemp * x_11_0_2;
    LOCSTORE(store, 38, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_38_3_0 + WQtempx * x_38_3_1 + 3.000000 * ABCDtemp * x_23_3_1;
    LOCSTORE(store, 37, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_37_3_0 + WQtempy * x_37_3_1 + 2.000000 * ABCDtemp * x_23_3_1;
    QUICKDouble x_36_0_1 = Ptempx * x_25_0_1 + WPtempx * x_25_0_2 + ABtemp * (x_16_0_1 - CDcom * x_16_0_2);
    QUICKDouble x_36_3_1 = Qtempz * x_36_0_1 + WQtempz * x_36_0_2 + 2.000000 * ABCDtemp * x_23_0_2;
    QUICKDouble x_36_0_0 = Ptempx * x_25_0_0 + WPtempx * x_25_0_1 + ABtemp * (x_16_0_0 - CDcom * x_16_0_1);
    QUICKDouble x_36_3_0 = Qtempz * x_36_0_0 + WQtempz * x_36_0_1 + 2.000000 * ABCDtemp * x_23_0_1;
    LOCSTORE(store, 36, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_36_3_0 + WQtempy * x_36_3_1 + ABCDtemp * x_21_3_1;
    LOCSTORE(store, 36, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_36_3_0 + WQtempz * x_36_3_1 + CDtemp * (x_36_0_0 - ABcom * x_36_0_1) + 2.000000 * ABCDtemp * x_23_3_1;
    QUICKDouble x_21_2_1 = Qtempy * x_21_0_1 + WQtempy * x_21_0_2;
    LOCSTORE(store, 44, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_44_2_0 + WQtempx * x_44_2_1 + 3.000000 * ABCDtemp * x_21_2_1;
    QUICKDouble x_36_2_1 = Qtempy * x_36_0_1 + WQtempy * x_36_0_2 + ABCDtemp * x_21_0_2;
    QUICKDouble x_36_2_0 = Qtempy * x_36_0_0 + WQtempy * x_36_0_1 + ABCDtemp * x_21_0_1;
    LOCSTORE(store, 36, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_36_2_0 + WQtempy * x_36_2_1 + CDtemp * (x_36_0_0 - ABcom * x_36_0_1) + ABCDtemp * x_21_2_1;
    QUICKDouble x_25_1_1 = Qtempx * x_25_0_1 + WQtempx * x_25_0_2 + ABCDtemp * x_16_0_2;
    QUICKDouble x_36_1_1 = Qtempx * x_36_0_1 + WQtempx * x_36_0_2 + 2.000000 * ABCDtemp * x_25_0_2;
    QUICKDouble x_36_1_0 = Qtempx * x_36_0_0 + WQtempx * x_36_0_1 + 2.000000 * ABCDtemp * x_25_0_1;
    LOCSTORE(store, 36, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_36_1_0 + WQtempx * x_36_1_1 + CDtemp * (x_36_0_0 - ABcom * x_36_0_1) + 2.000000 * ABCDtemp * x_25_1_1;
    QUICKDouble x_25_3_1 = Qtempz * x_25_0_1 + WQtempz * x_25_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    LOCSTORE(store, 40, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_40_3_0 + WQtempz * x_40_3_1 + CDtemp * (x_40_0_0 - ABcom * x_40_0_1) + 3.000000 * ABCDtemp * x_25_3_1;
    LOCSTORE(store, 36, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_36_3_0 + WQtempx * x_36_3_1 + 2.000000 * ABCDtemp * x_25_3_1;
    QUICKDouble x_22_3_1 = Qtempz * x_22_0_1 + WQtempz * x_22_0_2 + 2.000000 * ABCDtemp * x_15_0_2;
    LOCSTORE(store, 42, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_42_3_0 + WQtempy * x_42_3_1 + 3.000000 * ABCDtemp * x_22_3_1;
    LOCSTORE(store, 41, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_41_3_0 + WQtempz * x_41_3_1 + CDtemp * (x_41_0_0 - ABcom * x_41_0_1) + 3.000000 * ABCDtemp * x_22_3_1;
    QUICKDouble x_24_3_1 = Qtempz * x_24_0_1 + WQtempz * x_24_0_2 + ABCDtemp * x_12_0_2;
    LOCSTORE(store, 39, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_39_3_0 + WQtempy * x_39_3_1 + 3.000000 * ABCDtemp * x_24_3_1;
    LOCSTORE(store, 37, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_37_3_0 + WQtempx * x_37_3_1 + 2.000000 * ABCDtemp * x_24_3_1;
    QUICKDouble x_35_0_1 = Ptempx * x_22_0_1 + WPtempx * x_22_0_2;
    QUICKDouble x_35_3_1 = Qtempz * x_35_0_1 + WQtempz * x_35_0_2 + 2.000000 * ABCDtemp * x_24_0_2;
    QUICKDouble x_35_0_0 = Ptempx * x_22_0_0 + WPtempx * x_22_0_1;
    QUICKDouble x_35_3_0 = Qtempz * x_35_0_0 + WQtempz * x_35_0_1 + 2.000000 * ABCDtemp * x_24_0_1;
    LOCSTORE(store, 35, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_35_3_0 + WQtempy * x_35_3_1 + 2.000000 * ABCDtemp * x_25_3_1;
    LOCSTORE(store, 35, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_35_3_0 + WQtempx * x_35_3_1 + ABCDtemp * x_22_3_1;
    LOCSTORE(store, 35, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_35_3_0 + WQtempz * x_35_3_1 + CDtemp * (x_35_0_0 - ABcom * x_35_0_1) + 2.000000 * ABCDtemp * x_24_3_1;
    QUICKDouble x_22_2_1 = Qtempy * x_22_0_1 + WQtempy * x_22_0_2 + 2.000000 * ABCDtemp * x_16_0_2;
    LOCSTORE(store, 42, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_42_2_0 + WQtempy * x_42_2_1 + CDtemp * (x_42_0_0 - ABcom * x_42_0_1) + 3.000000 * ABCDtemp * x_22_2_1;
    QUICKDouble x_25_2_1 = Qtempy * x_25_0_1 + WQtempy * x_25_0_2 + ABCDtemp * x_14_0_2;
    LOCSTORE(store, 36, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_36_2_0 + WQtempx * x_36_2_1 + 2.000000 * ABCDtemp * x_25_2_1;
    QUICKDouble x_35_2_1 = Qtempy * x_35_0_1 + WQtempy * x_35_0_2 + 2.000000 * ABCDtemp * x_25_0_2;
    QUICKDouble x_35_2_0 = Qtempy * x_35_0_0 + WQtempy * x_35_0_1 + 2.000000 * ABCDtemp * x_25_0_1;
    LOCSTORE(store, 35, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_35_2_0 + WQtempx * x_35_2_1 + ABCDtemp * x_22_2_1;
    LOCSTORE(store, 35, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_35_2_0 + WQtempy * x_35_2_1 + CDtemp * (x_35_0_0 - ABcom * x_35_0_1) + 2.000000 * ABCDtemp * x_25_2_1;
    QUICKDouble x_22_1_1 = Qtempx * x_22_0_1 + WQtempx * x_22_0_2;
    QUICKDouble x_35_1_1 = Qtempx * x_35_0_1 + WQtempx * x_35_0_2 + ABCDtemp * x_22_0_2;
    QUICKDouble x_35_1_0 = Qtempx * x_35_0_0 + WQtempx * x_35_0_1 + ABCDtemp * x_22_0_1;
    LOCSTORE(store, 35, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_35_1_0 + WQtempx * x_35_1_1 + CDtemp * (x_35_0_0 - ABcom * x_35_0_1) + ABCDtemp * x_22_1_1;
    // [HS|DS] integral - End 

}

