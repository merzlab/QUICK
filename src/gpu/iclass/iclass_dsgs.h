/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [DS|GS] integral - Start
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble x_0_2_0 = Qtempy * VY_0 + WQtempy * VY_1;
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble x_0_2_1 = Qtempy * VY_1 + WQtempy * VY_2;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_0_2_2 = Qtempy * VY_2 + WQtempy * VY_3;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_0_2_3 = Qtempy * VY_3 + WQtempy * VY_4;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_0_2_4 = Qtempy * VY_4 + WQtempy * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_0_2_5 = Qtempy * VY_5 + WQtempy * VY_6;
    QUICKDouble x_0_8_0 = Qtempy * x_0_2_0 + WQtempy * x_0_2_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_8_1 = Qtempy * x_0_2_1 + WQtempy * x_0_2_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_8_2 = Qtempy * x_0_2_2 + WQtempy * x_0_2_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_8_3 = Qtempy * x_0_2_3 + WQtempy * x_0_2_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_8_4 = Qtempy * x_0_2_4 + WQtempy * x_0_2_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_12_0 = Qtempx * x_0_8_0 + WQtempx * x_0_8_1;
    QUICKDouble x_0_12_1 = Qtempx * x_0_8_1 + WQtempx * x_0_8_2;
    QUICKDouble x_0_12_2 = Qtempx * x_0_8_2 + WQtempx * x_0_8_3;
    QUICKDouble x_0_12_3 = Qtempx * x_0_8_3 + WQtempx * x_0_8_4;
    QUICKDouble x_0_20_0 = Qtempx * x_0_12_0 + WQtempx * x_0_12_1 + CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_20_1 = Qtempx * x_0_12_1 + WQtempx * x_0_12_2 + CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_20_2 = Qtempx * x_0_12_2 + WQtempx * x_0_12_3 + CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_3_20_0 = Ptempz * x_0_20_0 + WPtempz * x_0_20_1;
    QUICKDouble x_3_20_1 = Ptempz * x_0_20_1 + WPtempz * x_0_20_2;
    LOCSTORE(store, 9, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_20_0 + WPtempz * x_3_20_1 + ABtemp * (x_0_20_0 - CDcom * x_0_20_1);
    QUICKDouble x_0_3_0 = Qtempz * VY_0 + WQtempz * VY_1;
    QUICKDouble x_0_3_1 = Qtempz * VY_1 + WQtempz * VY_2;
    QUICKDouble x_0_3_2 = Qtempz * VY_2 + WQtempz * VY_3;
    QUICKDouble x_0_3_3 = Qtempz * VY_3 + WQtempz * VY_4;
    QUICKDouble x_0_3_4 = Qtempz * VY_4 + WQtempz * VY_5;
    QUICKDouble x_0_3_5 = Qtempz * VY_5 + WQtempz * VY_6;
    QUICKDouble x_0_9_0 = Qtempz * x_0_3_0 + WQtempz * x_0_3_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_9_1 = Qtempz * x_0_3_1 + WQtempz * x_0_3_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_9_2 = Qtempz * x_0_3_2 + WQtempz * x_0_3_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_9_3 = Qtempz * x_0_3_3 + WQtempz * x_0_3_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_9_4 = Qtempz * x_0_3_4 + WQtempz * x_0_3_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_14_0 = Qtempx * x_0_9_0 + WQtempx * x_0_9_1;
    QUICKDouble x_0_14_1 = Qtempx * x_0_9_1 + WQtempx * x_0_9_2;
    QUICKDouble x_0_14_2 = Qtempx * x_0_9_2 + WQtempx * x_0_9_3;
    QUICKDouble x_0_14_3 = Qtempx * x_0_9_3 + WQtempx * x_0_9_4;
    QUICKDouble x_0_21_0 = Qtempx * x_0_14_0 + WQtempx * x_0_14_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_21_1 = Qtempx * x_0_14_1 + WQtempx * x_0_14_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_21_2 = Qtempx * x_0_14_2 + WQtempx * x_0_14_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_2_21_0 = Ptempy * x_0_21_0 + WPtempy * x_0_21_1;
    QUICKDouble x_2_21_1 = Ptempy * x_0_21_1 + WPtempy * x_0_21_2;
    LOCSTORE(store, 8, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_21_0 + WPtempy * x_2_21_1 + ABtemp * (x_0_21_0 - CDcom * x_0_21_1);
    QUICKDouble x_0_6_1 = Qtempx * x_0_3_1 + WQtempx * x_0_3_2;
    QUICKDouble x_0_6_2 = Qtempx * x_0_3_2 + WQtempx * x_0_3_3;
    QUICKDouble x_0_6_3 = Qtempx * x_0_3_3 + WQtempx * x_0_3_4;
    QUICKDouble x_0_13_1 = Qtempx * x_0_6_1 + WQtempx * x_0_6_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_13_2 = Qtempx * x_0_6_2 + WQtempx * x_0_6_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_3_21_0 = Ptempz * x_0_21_0 + WPtempz * x_0_21_1 + 2.000000 * ABCDtemp * x_0_13_1;
    QUICKDouble x_3_21_1 = Ptempz * x_0_21_1 + WPtempz * x_0_21_2 + 2.000000 * ABCDtemp * x_0_13_2;
    LOCSTORE(store, 5, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_21_0 + WPtempy * x_3_21_1;
    QUICKDouble x_0_16_0 = Qtempy * x_0_9_0 + WQtempy * x_0_9_1;
    QUICKDouble x_0_16_1 = Qtempy * x_0_9_1 + WQtempy * x_0_9_2;
    QUICKDouble x_0_16_2 = Qtempy * x_0_9_2 + WQtempy * x_0_9_3;
    QUICKDouble x_0_16_3 = Qtempy * x_0_9_3 + WQtempy * x_0_9_4;
    QUICKDouble x_0_22_0 = Qtempy * x_0_16_0 + WQtempy * x_0_16_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_22_1 = Qtempy * x_0_16_1 + WQtempy * x_0_16_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_22_2 = Qtempy * x_0_16_2 + WQtempy * x_0_16_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_1_22_0 = Ptempx * x_0_22_0 + WPtempx * x_0_22_1;
    QUICKDouble x_1_22_1 = Ptempx * x_0_22_1 + WPtempx * x_0_22_2;
    LOCSTORE(store, 7, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_22_0 + WPtempx * x_1_22_1 + ABtemp * (x_0_22_0 - CDcom * x_0_22_1);
    QUICKDouble x_2_22_0 = Ptempy * x_0_22_0 + WPtempy * x_0_22_1 + 2.000000 * ABCDtemp * x_0_16_1;
    QUICKDouble x_2_22_1 = Ptempy * x_0_22_1 + WPtempy * x_0_22_2 + 2.000000 * ABCDtemp * x_0_16_2;
    LOCSTORE(store, 4, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_22_0 + WPtempx * x_2_22_1;
    QUICKDouble x_0_5_1 = Qtempy * x_0_3_1 + WQtempy * x_0_3_2;
    QUICKDouble x_0_5_2 = Qtempy * x_0_3_2 + WQtempy * x_0_3_3;
    QUICKDouble x_0_5_3 = Qtempy * x_0_3_3 + WQtempy * x_0_3_4;
    QUICKDouble x_0_15_1 = Qtempy * x_0_5_1 + WQtempy * x_0_5_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_15_2 = Qtempy * x_0_5_2 + WQtempy * x_0_5_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_3_22_0 = Ptempz * x_0_22_0 + WPtempz * x_0_22_1 + 2.000000 * ABCDtemp * x_0_15_1;
    QUICKDouble x_3_22_1 = Ptempz * x_0_22_1 + WPtempz * x_0_22_2 + 2.000000 * ABCDtemp * x_0_15_2;
    LOCSTORE(store, 6, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_22_0 + WPtempx * x_3_22_1;
    QUICKDouble x_0_6_0 = Qtempx * x_0_3_0 + WQtempx * x_0_3_1;
    QUICKDouble x_0_6_4 = Qtempx * x_0_3_4 + WQtempx * x_0_3_5;
    QUICKDouble x_0_13_0 = Qtempx * x_0_6_0 + WQtempx * x_0_6_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_13_3 = Qtempx * x_0_6_3 + WQtempx * x_0_6_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_26_0 = Qtempx * x_0_13_0 + WQtempx * x_0_13_1 + 2.000000 * CDtemp * (x_0_6_0 - ABcom * x_0_6_1);
    QUICKDouble x_0_26_1 = Qtempx * x_0_13_1 + WQtempx * x_0_13_2 + 2.000000 * CDtemp * (x_0_6_1 - ABcom * x_0_6_2);
    QUICKDouble x_0_26_2 = Qtempx * x_0_13_2 + WQtempx * x_0_13_3 + 2.000000 * CDtemp * (x_0_6_2 - ABcom * x_0_6_3);
    QUICKDouble x_2_26_0 = Ptempy * x_0_26_0 + WPtempy * x_0_26_1;
    QUICKDouble x_2_26_1 = Ptempy * x_0_26_1 + WPtempy * x_0_26_2;
    LOCSTORE(store, 8, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_26_0 + WPtempy * x_2_26_1 + ABtemp * (x_0_26_0 - CDcom * x_0_26_1);
    QUICKDouble x_0_1_1 = Qtempx * VY_1 + WQtempx * VY_2;
    QUICKDouble x_0_1_2 = Qtempx * VY_2 + WQtempx * VY_3;
    QUICKDouble x_0_1_3 = Qtempx * VY_3 + WQtempx * VY_4;
    QUICKDouble x_0_1_4 = Qtempx * VY_4 + WQtempx * VY_5;
    QUICKDouble x_0_7_1 = Qtempx * x_0_1_1 + WQtempx * x_0_1_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_7_2 = Qtempx * x_0_1_2 + WQtempx * x_0_1_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_7_3 = Qtempx * x_0_1_3 + WQtempx * x_0_1_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_17_1 = Qtempx * x_0_7_1 + WQtempx * x_0_7_2 + 2.000000 * CDtemp * (x_0_1_1 - ABcom * x_0_1_2);
    QUICKDouble x_0_17_2 = Qtempx * x_0_7_2 + WQtempx * x_0_7_3 + 2.000000 * CDtemp * (x_0_1_2 - ABcom * x_0_1_3);
    QUICKDouble x_3_26_0 = Ptempz * x_0_26_0 + WPtempz * x_0_26_1 + ABCDtemp * x_0_17_1;
    QUICKDouble x_3_26_1 = Ptempz * x_0_26_1 + WPtempz * x_0_26_2 + ABCDtemp * x_0_17_2;
    LOCSTORE(store, 5, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_26_0 + WPtempy * x_3_26_1;
    QUICKDouble x_0_19_0 = Qtempz * x_0_9_0 + WQtempz * x_0_9_1 + 2.000000 * CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_19_1 = Qtempz * x_0_9_1 + WQtempz * x_0_9_2 + 2.000000 * CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_19_2 = Qtempz * x_0_9_2 + WQtempz * x_0_9_3 + 2.000000 * CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_19_3 = Qtempz * x_0_9_3 + WQtempz * x_0_9_4 + 2.000000 * CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_27_0 = Qtempx * x_0_19_0 + WQtempx * x_0_19_1;
    QUICKDouble x_0_27_1 = Qtempx * x_0_19_1 + WQtempx * x_0_19_2;
    QUICKDouble x_0_27_2 = Qtempx * x_0_19_2 + WQtempx * x_0_19_3;
    QUICKDouble x_2_27_0 = Ptempy * x_0_27_0 + WPtempy * x_0_27_1;
    QUICKDouble x_2_27_1 = Ptempy * x_0_27_1 + WPtempy * x_0_27_2;
    LOCSTORE(store, 8, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_27_0 + WPtempy * x_2_27_1 + ABtemp * (x_0_27_0 - CDcom * x_0_27_1);
    QUICKDouble x_3_27_0 = Ptempz * x_0_27_0 + WPtempz * x_0_27_1 + 3.000000 * ABCDtemp * x_0_14_1;
    QUICKDouble x_3_27_1 = Ptempz * x_0_27_1 + WPtempz * x_0_27_2 + 3.000000 * ABCDtemp * x_0_14_2;
    LOCSTORE(store, 5, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_27_0 + WPtempy * x_3_27_1;
    QUICKDouble x_0_4_0 = Qtempx * x_0_2_0 + WQtempx * x_0_2_1;
    QUICKDouble x_0_4_1 = Qtempx * x_0_2_1 + WQtempx * x_0_2_2;
    QUICKDouble x_0_4_2 = Qtempx * x_0_2_2 + WQtempx * x_0_2_3;
    QUICKDouble x_0_4_3 = Qtempx * x_0_2_3 + WQtempx * x_0_2_4;
    QUICKDouble x_0_4_4 = Qtempx * x_0_2_4 + WQtempx * x_0_2_5;
    QUICKDouble x_0_11_0 = Qtempx * x_0_4_0 + WQtempx * x_0_4_1 + CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_11_1 = Qtempx * x_0_4_1 + WQtempx * x_0_4_2 + CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_11_2 = Qtempx * x_0_4_2 + WQtempx * x_0_4_3 + CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_11_3 = Qtempx * x_0_4_3 + WQtempx * x_0_4_4 + CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_28_0 = Qtempx * x_0_11_0 + WQtempx * x_0_11_1 + 2.000000 * CDtemp * (x_0_4_0 - ABcom * x_0_4_1);
    QUICKDouble x_0_28_1 = Qtempx * x_0_11_1 + WQtempx * x_0_11_2 + 2.000000 * CDtemp * (x_0_4_1 - ABcom * x_0_4_2);
    QUICKDouble x_0_28_2 = Qtempx * x_0_11_2 + WQtempx * x_0_11_3 + 2.000000 * CDtemp * (x_0_4_2 - ABcom * x_0_4_3);
    QUICKDouble x_3_28_0 = Ptempz * x_0_28_0 + WPtempz * x_0_28_1;
    QUICKDouble x_3_28_1 = Ptempz * x_0_28_1 + WPtempz * x_0_28_2;
    LOCSTORE(store, 9, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_28_0 + WPtempz * x_3_28_1 + ABtemp * (x_0_28_0 - CDcom * x_0_28_1);
    QUICKDouble x_0_18_0 = Qtempy * x_0_8_0 + WQtempy * x_0_8_1 + 2.000000 * CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_18_1 = Qtempy * x_0_8_1 + WQtempy * x_0_8_2 + 2.000000 * CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_18_2 = Qtempy * x_0_8_2 + WQtempy * x_0_8_3 + 2.000000 * CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_18_3 = Qtempy * x_0_8_3 + WQtempy * x_0_8_4 + 2.000000 * CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_29_0 = Qtempx * x_0_18_0 + WQtempx * x_0_18_1;
    QUICKDouble x_0_29_1 = Qtempx * x_0_18_1 + WQtempx * x_0_18_2;
    QUICKDouble x_0_29_2 = Qtempx * x_0_18_2 + WQtempx * x_0_18_3;
    QUICKDouble x_3_29_0 = Ptempz * x_0_29_0 + WPtempz * x_0_29_1;
    QUICKDouble x_3_29_1 = Ptempz * x_0_29_1 + WPtempz * x_0_29_2;
    LOCSTORE(store, 9, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_29_0 + WPtempz * x_3_29_1 + ABtemp * (x_0_29_0 - CDcom * x_0_29_1);
    QUICKDouble x_0_5_0 = Qtempy * x_0_3_0 + WQtempy * x_0_3_1;
    QUICKDouble x_0_5_4 = Qtempy * x_0_3_4 + WQtempy * x_0_3_5;
    QUICKDouble x_0_15_0 = Qtempy * x_0_5_0 + WQtempy * x_0_5_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_15_3 = Qtempy * x_0_5_3 + WQtempy * x_0_5_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_30_0 = Qtempy * x_0_15_0 + WQtempy * x_0_15_1 + 2.000000 * CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_30_1 = Qtempy * x_0_15_1 + WQtempy * x_0_15_2 + 2.000000 * CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_30_2 = Qtempy * x_0_15_2 + WQtempy * x_0_15_3 + 2.000000 * CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_1_30_0 = Ptempx * x_0_30_0 + WPtempx * x_0_30_1;
    QUICKDouble x_1_30_1 = Ptempx * x_0_30_1 + WPtempx * x_0_30_2;
    LOCSTORE(store, 7, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_30_0 + WPtempx * x_1_30_1 + ABtemp * (x_0_30_0 - CDcom * x_0_30_1);
    QUICKDouble x_2_30_0 = Ptempy * x_0_30_0 + WPtempy * x_0_30_1 + 3.000000 * ABCDtemp * x_0_15_1;
    QUICKDouble x_2_30_1 = Ptempy * x_0_30_1 + WPtempy * x_0_30_2 + 3.000000 * ABCDtemp * x_0_15_2;
    LOCSTORE(store, 4, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_30_0 + WPtempx * x_2_30_1;
    QUICKDouble x_3_30_0 = Ptempz * x_0_30_0 + WPtempz * x_0_30_1 + ABCDtemp * x_0_18_1;
    QUICKDouble x_3_30_1 = Ptempz * x_0_30_1 + WPtempz * x_0_30_2 + ABCDtemp * x_0_18_2;
    LOCSTORE(store, 6, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_30_0 + WPtempx * x_3_30_1;
    QUICKDouble x_0_31_0 = Qtempy * x_0_19_0 + WQtempy * x_0_19_1;
    QUICKDouble x_0_31_1 = Qtempy * x_0_19_1 + WQtempy * x_0_19_2;
    QUICKDouble x_0_31_2 = Qtempy * x_0_19_2 + WQtempy * x_0_19_3;
    QUICKDouble x_1_31_0 = Ptempx * x_0_31_0 + WPtempx * x_0_31_1;
    QUICKDouble x_1_31_1 = Ptempx * x_0_31_1 + WPtempx * x_0_31_2;
    LOCSTORE(store, 7, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_31_0 + WPtempx * x_1_31_1 + ABtemp * (x_0_31_0 - CDcom * x_0_31_1);
    QUICKDouble x_2_31_0 = Ptempy * x_0_31_0 + WPtempy * x_0_31_1 + ABCDtemp * x_0_19_1;
    QUICKDouble x_2_31_1 = Ptempy * x_0_31_1 + WPtempy * x_0_31_2 + ABCDtemp * x_0_19_2;
    LOCSTORE(store, 4, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_31_0 + WPtempx * x_2_31_1;
    QUICKDouble x_3_31_0 = Ptempz * x_0_31_0 + WPtempz * x_0_31_1 + 3.000000 * ABCDtemp * x_0_16_1;
    QUICKDouble x_3_31_1 = Ptempz * x_0_31_1 + WPtempz * x_0_31_2 + 3.000000 * ABCDtemp * x_0_16_2;
    LOCSTORE(store, 6, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_31_0 + WPtempx * x_3_31_1;
    QUICKDouble x_0_1_0 = Qtempx * VY_0 + WQtempx * VY_1;
    QUICKDouble x_0_1_5 = Qtempx * VY_5 + WQtempx * VY_6;
    QUICKDouble x_0_7_0 = Qtempx * x_0_1_0 + WQtempx * x_0_1_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_7_4 = Qtempx * x_0_1_4 + WQtempx * x_0_1_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_17_0 = Qtempx * x_0_7_0 + WQtempx * x_0_7_1 + 2.000000 * CDtemp * (x_0_1_0 - ABcom * x_0_1_1);
    QUICKDouble x_0_17_3 = Qtempx * x_0_7_3 + WQtempx * x_0_7_4 + 2.000000 * CDtemp * (x_0_1_3 - ABcom * x_0_1_4);
    QUICKDouble x_0_32_0 = Qtempx * x_0_17_0 + WQtempx * x_0_17_1 + 3.000000 * CDtemp * (x_0_7_0 - ABcom * x_0_7_1);
    QUICKDouble x_0_32_1 = Qtempx * x_0_17_1 + WQtempx * x_0_17_2 + 3.000000 * CDtemp * (x_0_7_1 - ABcom * x_0_7_2);
    QUICKDouble x_0_32_2 = Qtempx * x_0_17_2 + WQtempx * x_0_17_3 + 3.000000 * CDtemp * (x_0_7_2 - ABcom * x_0_7_3);
    QUICKDouble x_2_32_0 = Ptempy * x_0_32_0 + WPtempy * x_0_32_1;
    QUICKDouble x_2_32_1 = Ptempy * x_0_32_1 + WPtempy * x_0_32_2;
    LOCSTORE(store, 8, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_32_0 + WPtempy * x_2_32_1 + ABtemp * (x_0_32_0 - CDcom * x_0_32_1);
    QUICKDouble x_3_32_0 = Ptempz * x_0_32_0 + WPtempz * x_0_32_1;
    QUICKDouble x_3_32_1 = Ptempz * x_0_32_1 + WPtempz * x_0_32_2;
    LOCSTORE(store, 9, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_32_0 + WPtempz * x_3_32_1 + ABtemp * (x_0_32_0 - CDcom * x_0_32_1);
    LOCSTORE(store, 5, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_32_0 + WPtempy * x_3_32_1;
    QUICKDouble x_0_33_0 = Qtempy * x_0_18_0 + WQtempy * x_0_18_1 + 3.000000 * CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_33_1 = Qtempy * x_0_18_1 + WQtempy * x_0_18_2 + 3.000000 * CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_33_2 = Qtempy * x_0_18_2 + WQtempy * x_0_18_3 + 3.000000 * CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_1_33_0 = Ptempx * x_0_33_0 + WPtempx * x_0_33_1;
    QUICKDouble x_1_33_1 = Ptempx * x_0_33_1 + WPtempx * x_0_33_2;
    LOCSTORE(store, 7, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_33_0 + WPtempx * x_1_33_1 + ABtemp * (x_0_33_0 - CDcom * x_0_33_1);
    QUICKDouble x_2_33_0 = Ptempy * x_0_33_0 + WPtempy * x_0_33_1 + 4.000000 * ABCDtemp * x_0_18_1;
    QUICKDouble x_2_33_1 = Ptempy * x_0_33_1 + WPtempy * x_0_33_2 + 4.000000 * ABCDtemp * x_0_18_2;
    LOCSTORE(store, 4, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_33_0 + WPtempx * x_2_33_1;
    QUICKDouble x_3_33_0 = Ptempz * x_0_33_0 + WPtempz * x_0_33_1;
    QUICKDouble x_3_33_1 = Ptempz * x_0_33_1 + WPtempz * x_0_33_2;
    LOCSTORE(store, 9, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_33_0 + WPtempz * x_3_33_1 + ABtemp * (x_0_33_0 - CDcom * x_0_33_1);
    LOCSTORE(store, 6, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_33_0 + WPtempx * x_3_33_1;
    QUICKDouble x_0_34_0 = Qtempz * x_0_19_0 + WQtempz * x_0_19_1 + 3.000000 * CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_34_1 = Qtempz * x_0_19_1 + WQtempz * x_0_19_2 + 3.000000 * CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_34_2 = Qtempz * x_0_19_2 + WQtempz * x_0_19_3 + 3.000000 * CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_1_34_0 = Ptempx * x_0_34_0 + WPtempx * x_0_34_1;
    QUICKDouble x_1_34_1 = Ptempx * x_0_34_1 + WPtempx * x_0_34_2;
    LOCSTORE(store, 7, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_34_0 + WPtempx * x_1_34_1 + ABtemp * (x_0_34_0 - CDcom * x_0_34_1);
    QUICKDouble x_2_34_0 = Ptempy * x_0_34_0 + WPtempy * x_0_34_1;
    QUICKDouble x_2_34_1 = Ptempy * x_0_34_1 + WPtempy * x_0_34_2;
    LOCSTORE(store, 8, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_34_0 + WPtempy * x_2_34_1 + ABtemp * (x_0_34_0 - CDcom * x_0_34_1);
    LOCSTORE(store, 4, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_34_0 + WPtempx * x_2_34_1;
    QUICKDouble x_3_34_0 = Ptempz * x_0_34_0 + WPtempz * x_0_34_1 + 4.000000 * ABCDtemp * x_0_19_1;
    QUICKDouble x_3_34_1 = Ptempz * x_0_34_1 + WPtempz * x_0_34_2 + 4.000000 * ABCDtemp * x_0_19_2;
    LOCSTORE(store, 6, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_34_0 + WPtempx * x_3_34_1;
    LOCSTORE(store, 5, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_34_0 + WPtempy * x_3_34_1;
    QUICKDouble x_0_10_0 = Qtempx * x_0_5_0 + WQtempx * x_0_5_1;
    QUICKDouble x_0_10_1 = Qtempx * x_0_5_1 + WQtempx * x_0_5_2;
    QUICKDouble x_0_10_2 = Qtempx * x_0_5_2 + WQtempx * x_0_5_3;
    QUICKDouble x_0_10_3 = Qtempx * x_0_5_3 + WQtempx * x_0_5_4;
    QUICKDouble x_0_23_0 = Qtempx * x_0_10_0 + WQtempx * x_0_10_1 + CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_23_1 = Qtempx * x_0_10_1 + WQtempx * x_0_10_2 + CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_23_2 = Qtempx * x_0_10_2 + WQtempx * x_0_10_3 + CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_1_23_0 = Ptempx * x_0_23_0 + WPtempx * x_0_23_1 + 2.000000 * ABCDtemp * x_0_10_1;
    QUICKDouble x_1_23_1 = Ptempx * x_0_23_1 + WPtempx * x_0_23_2 + 2.000000 * ABCDtemp * x_0_10_2;
    QUICKDouble x_1_10_1 = Ptempx * x_0_10_1 + WPtempx * x_0_10_2 + ABCDtemp * x_0_5_2;
    LOCSTORE(store, 7, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_23_0 + WPtempx * x_1_23_1 + ABtemp * (x_0_23_0 - CDcom * x_0_23_1) + 2.000000 * ABCDtemp * x_1_10_1;
    QUICKDouble x_0_24_0 = Qtempx * x_0_15_0 + WQtempx * x_0_15_1;
    QUICKDouble x_0_24_1 = Qtempx * x_0_15_1 + WQtempx * x_0_15_2;
    QUICKDouble x_0_24_2 = Qtempx * x_0_15_2 + WQtempx * x_0_15_3;
    QUICKDouble x_2_24_0 = Ptempy * x_0_24_0 + WPtempy * x_0_24_1 + 2.000000 * ABCDtemp * x_0_10_1;
    QUICKDouble x_2_24_1 = Ptempy * x_0_24_1 + WPtempy * x_0_24_2 + 2.000000 * ABCDtemp * x_0_10_2;
    QUICKDouble x_2_10_1 = Ptempy * x_0_10_1 + WPtempy * x_0_10_2 + ABCDtemp * x_0_6_2;
    LOCSTORE(store, 8, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_24_0 + WPtempy * x_2_24_1 + ABtemp * (x_0_24_0 - CDcom * x_0_24_1) + 2.000000 * ABCDtemp * x_2_10_1;
    QUICKDouble x_2_23_0 = Ptempy * x_0_23_0 + WPtempy * x_0_23_1 + ABCDtemp * x_0_13_1;
    QUICKDouble x_2_23_1 = Ptempy * x_0_23_1 + WPtempy * x_0_23_2 + ABCDtemp * x_0_13_2;
    LOCSTORE(store, 4, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_23_0 + WPtempx * x_2_23_1 + 2.000000 * ABCDtemp * x_2_10_1;
    QUICKDouble x_0_25_0 = Qtempx * x_0_16_0 + WQtempx * x_0_16_1;
    QUICKDouble x_0_25_1 = Qtempx * x_0_16_1 + WQtempx * x_0_16_2;
    QUICKDouble x_0_25_2 = Qtempx * x_0_16_2 + WQtempx * x_0_16_3;
    QUICKDouble x_3_25_0 = Ptempz * x_0_25_0 + WPtempz * x_0_25_1 + 2.000000 * ABCDtemp * x_0_10_1;
    QUICKDouble x_3_25_1 = Ptempz * x_0_25_1 + WPtempz * x_0_25_2 + 2.000000 * ABCDtemp * x_0_10_2;
    QUICKDouble x_3_10_1 = Ptempz * x_0_10_1 + WPtempz * x_0_10_2 + ABCDtemp * x_0_4_2;
    LOCSTORE(store, 9, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_25_0 + WPtempz * x_3_25_1 + ABtemp * (x_0_25_0 - CDcom * x_0_25_1) + 2.000000 * ABCDtemp * x_3_10_1;
    QUICKDouble x_3_24_0 = Ptempz * x_0_24_0 + WPtempz * x_0_24_1 + ABCDtemp * x_0_12_1;
    QUICKDouble x_3_24_1 = Ptempz * x_0_24_1 + WPtempz * x_0_24_2 + ABCDtemp * x_0_12_2;
    LOCSTORE(store, 5, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_24_0 + WPtempy * x_3_24_1 + 2.000000 * ABCDtemp * x_3_10_1;
    QUICKDouble x_3_23_0 = Ptempz * x_0_23_0 + WPtempz * x_0_23_1 + ABCDtemp * x_0_11_1;
    QUICKDouble x_3_23_1 = Ptempz * x_0_23_1 + WPtempz * x_0_23_2 + ABCDtemp * x_0_11_2;
    LOCSTORE(store, 6, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_23_0 + WPtempx * x_3_23_1 + 2.000000 * ABCDtemp * x_3_10_1;
    QUICKDouble x_1_28_0 = Ptempx * x_0_28_0 + WPtempx * x_0_28_1 + 3.000000 * ABCDtemp * x_0_11_1;
    QUICKDouble x_1_28_1 = Ptempx * x_0_28_1 + WPtempx * x_0_28_2 + 3.000000 * ABCDtemp * x_0_11_2;
    QUICKDouble x_1_11_1 = Ptempx * x_0_11_1 + WPtempx * x_0_11_2 + 2.000000 * ABCDtemp * x_0_4_2;
    LOCSTORE(store, 7, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_28_0 + WPtempx * x_1_28_1 + ABtemp * (x_0_28_0 - CDcom * x_0_28_1) + 3.000000 * ABCDtemp * x_1_11_1;
    QUICKDouble x_2_28_0 = Ptempy * x_0_28_0 + WPtempy * x_0_28_1 + ABCDtemp * x_0_17_1;
    QUICKDouble x_2_28_1 = Ptempy * x_0_28_1 + WPtempy * x_0_28_2 + ABCDtemp * x_0_17_2;
    QUICKDouble x_2_11_1 = Ptempy * x_0_11_1 + WPtempy * x_0_11_2 + ABCDtemp * x_0_7_2;
    LOCSTORE(store, 4, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_28_0 + WPtempx * x_2_28_1 + 3.000000 * ABCDtemp * x_2_11_1;
    QUICKDouble x_2_20_0 = Ptempy * x_0_20_0 + WPtempy * x_0_20_1 + 2.000000 * ABCDtemp * x_0_11_1;
    QUICKDouble x_2_20_1 = Ptempy * x_0_20_1 + WPtempy * x_0_20_2 + 2.000000 * ABCDtemp * x_0_11_2;
    LOCSTORE(store, 8, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_20_0 + WPtempy * x_2_20_1 + ABtemp * (x_0_20_0 - CDcom * x_0_20_1) + 2.000000 * ABCDtemp * x_2_11_1;
    QUICKDouble x_3_11_1 = Ptempz * x_0_11_1 + WPtempz * x_0_11_2;
    LOCSTORE(store, 6, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_28_0 + WPtempx * x_3_28_1 + 3.000000 * ABCDtemp * x_3_11_1;
    LOCSTORE(store, 9, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_23_0 + WPtempz * x_3_23_1 + ABtemp * (x_0_23_0 - CDcom * x_0_23_1) + ABCDtemp * x_3_11_1;
    LOCSTORE(store, 5, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_20_0 + WPtempy * x_3_20_1 + 2.000000 * ABCDtemp * x_3_11_1;
    QUICKDouble x_1_20_0 = Ptempx * x_0_20_0 + WPtempx * x_0_20_1 + 2.000000 * ABCDtemp * x_0_12_1;
    QUICKDouble x_1_20_1 = Ptempx * x_0_20_1 + WPtempx * x_0_20_2 + 2.000000 * ABCDtemp * x_0_12_2;
    QUICKDouble x_1_12_1 = Ptempx * x_0_12_1 + WPtempx * x_0_12_2 + ABCDtemp * x_0_8_2;
    LOCSTORE(store, 7, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_20_0 + WPtempx * x_1_20_1 + ABtemp * (x_0_20_0 - CDcom * x_0_20_1) + 2.000000 * ABCDtemp * x_1_12_1;
    QUICKDouble x_2_29_0 = Ptempy * x_0_29_0 + WPtempy * x_0_29_1 + 3.000000 * ABCDtemp * x_0_12_1;
    QUICKDouble x_2_29_1 = Ptempy * x_0_29_1 + WPtempy * x_0_29_2 + 3.000000 * ABCDtemp * x_0_12_2;
    QUICKDouble x_2_12_1 = Ptempy * x_0_12_1 + WPtempy * x_0_12_2 + 2.000000 * ABCDtemp * x_0_4_2;
    LOCSTORE(store, 8, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_29_0 + WPtempy * x_2_29_1 + ABtemp * (x_0_29_0 - CDcom * x_0_29_1) + 3.000000 * ABCDtemp * x_2_12_1;
    LOCSTORE(store, 4, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_20_0 + WPtempx * x_2_20_1 + 2.000000 * ABCDtemp * x_2_12_1;
    QUICKDouble x_3_12_1 = Ptempz * x_0_12_1 + WPtempz * x_0_12_2;
    LOCSTORE(store, 5, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_29_0 + WPtempy * x_3_29_1 + 3.000000 * ABCDtemp * x_3_12_1;
    LOCSTORE(store, 9, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_24_0 + WPtempz * x_3_24_1 + ABtemp * (x_0_24_0 - CDcom * x_0_24_1) + ABCDtemp * x_3_12_1;
    LOCSTORE(store, 6, 20, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_20_0 + WPtempx * x_3_20_1 + 2.000000 * ABCDtemp * x_3_12_1;
    QUICKDouble x_1_26_0 = Ptempx * x_0_26_0 + WPtempx * x_0_26_1 + 3.000000 * ABCDtemp * x_0_13_1;
    QUICKDouble x_1_26_1 = Ptempx * x_0_26_1 + WPtempx * x_0_26_2 + 3.000000 * ABCDtemp * x_0_13_2;
    QUICKDouble x_1_13_1 = Ptempx * x_0_13_1 + WPtempx * x_0_13_2 + 2.000000 * ABCDtemp * x_0_6_2;
    LOCSTORE(store, 7, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_26_0 + WPtempx * x_1_26_1 + ABtemp * (x_0_26_0 - CDcom * x_0_26_1) + 3.000000 * ABCDtemp * x_1_13_1;
    QUICKDouble x_2_13_1 = Ptempy * x_0_13_1 + WPtempy * x_0_13_2;
    LOCSTORE(store, 4, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_26_0 + WPtempx * x_2_26_1 + 3.000000 * ABCDtemp * x_2_13_1;
    LOCSTORE(store, 8, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_23_0 + WPtempy * x_2_23_1 + ABtemp * (x_0_23_0 - CDcom * x_0_23_1) + ABCDtemp * x_2_13_1;
    QUICKDouble x_3_13_1 = Ptempz * x_0_13_1 + WPtempz * x_0_13_2 + ABCDtemp * x_0_7_2;
    LOCSTORE(store, 6, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_26_0 + WPtempx * x_3_26_1 + 3.000000 * ABCDtemp * x_3_13_1;
    LOCSTORE(store, 5, 23, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_23_0 + WPtempy * x_3_23_1 + ABCDtemp * x_3_13_1;
    LOCSTORE(store, 9, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_21_0 + WPtempz * x_3_21_1 + ABtemp * (x_0_21_0 - CDcom * x_0_21_1) + 2.000000 * ABCDtemp * x_3_13_1;
    QUICKDouble x_1_21_0 = Ptempx * x_0_21_0 + WPtempx * x_0_21_1 + 2.000000 * ABCDtemp * x_0_14_1;
    QUICKDouble x_1_21_1 = Ptempx * x_0_21_1 + WPtempx * x_0_21_2 + 2.000000 * ABCDtemp * x_0_14_2;
    QUICKDouble x_1_14_1 = Ptempx * x_0_14_1 + WPtempx * x_0_14_2 + ABCDtemp * x_0_9_2;
    LOCSTORE(store, 7, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_21_0 + WPtempx * x_1_21_1 + ABtemp * (x_0_21_0 - CDcom * x_0_21_1) + 2.000000 * ABCDtemp * x_1_14_1;
    QUICKDouble x_2_25_0 = Ptempy * x_0_25_0 + WPtempy * x_0_25_1 + ABCDtemp * x_0_14_1;
    QUICKDouble x_2_25_1 = Ptempy * x_0_25_1 + WPtempy * x_0_25_2 + ABCDtemp * x_0_14_2;
    QUICKDouble x_2_14_1 = Ptempy * x_0_14_1 + WPtempy * x_0_14_2;
    LOCSTORE(store, 8, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_25_0 + WPtempy * x_2_25_1 + ABtemp * (x_0_25_0 - CDcom * x_0_25_1) + ABCDtemp * x_2_14_1;
    LOCSTORE(store, 4, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_21_0 + WPtempx * x_2_21_1 + 2.000000 * ABCDtemp * x_2_14_1;
    QUICKDouble x_3_14_1 = Ptempz * x_0_14_1 + WPtempz * x_0_14_2 + 2.000000 * ABCDtemp * x_0_6_2;
    LOCSTORE(store, 9, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_27_0 + WPtempz * x_3_27_1 + ABtemp * (x_0_27_0 - CDcom * x_0_27_1) + 3.000000 * ABCDtemp * x_3_14_1;
    LOCSTORE(store, 5, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_25_0 + WPtempy * x_3_25_1 + ABCDtemp * x_3_14_1;
    LOCSTORE(store, 6, 21, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_21_0 + WPtempx * x_3_21_1 + 2.000000 * ABCDtemp * x_3_14_1;
    QUICKDouble x_1_24_0 = Ptempx * x_0_24_0 + WPtempx * x_0_24_1 + ABCDtemp * x_0_15_1;
    QUICKDouble x_1_24_1 = Ptempx * x_0_24_1 + WPtempx * x_0_24_2 + ABCDtemp * x_0_15_2;
    QUICKDouble x_1_15_1 = Ptempx * x_0_15_1 + WPtempx * x_0_15_2;
    LOCSTORE(store, 7, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_24_0 + WPtempx * x_1_24_1 + ABtemp * (x_0_24_0 - CDcom * x_0_24_1) + ABCDtemp * x_1_15_1;
    QUICKDouble x_2_15_1 = Ptempy * x_0_15_1 + WPtempy * x_0_15_2 + 2.000000 * ABCDtemp * x_0_5_2;
    LOCSTORE(store, 8, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_30_0 + WPtempy * x_2_30_1 + ABtemp * (x_0_30_0 - CDcom * x_0_30_1) + 3.000000 * ABCDtemp * x_2_15_1;
    LOCSTORE(store, 4, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_24_0 + WPtempx * x_2_24_1 + ABCDtemp * x_2_15_1;
    QUICKDouble x_3_15_1 = Ptempz * x_0_15_1 + WPtempz * x_0_15_2 + ABCDtemp * x_0_8_2;
    LOCSTORE(store, 5, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_30_0 + WPtempy * x_3_30_1 + 3.000000 * ABCDtemp * x_3_15_1;
    LOCSTORE(store, 6, 24, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_24_0 + WPtempx * x_3_24_1 + ABCDtemp * x_3_15_1;
    LOCSTORE(store, 9, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_22_0 + WPtempz * x_3_22_1 + ABtemp * (x_0_22_0 - CDcom * x_0_22_1) + 2.000000 * ABCDtemp * x_3_15_1;
    QUICKDouble x_1_25_0 = Ptempx * x_0_25_0 + WPtempx * x_0_25_1 + ABCDtemp * x_0_16_1;
    QUICKDouble x_1_25_1 = Ptempx * x_0_25_1 + WPtempx * x_0_25_2 + ABCDtemp * x_0_16_2;
    QUICKDouble x_1_16_1 = Ptempx * x_0_16_1 + WPtempx * x_0_16_2;
    LOCSTORE(store, 7, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_25_0 + WPtempx * x_1_25_1 + ABtemp * (x_0_25_0 - CDcom * x_0_25_1) + ABCDtemp * x_1_16_1;
    QUICKDouble x_2_16_1 = Ptempy * x_0_16_1 + WPtempy * x_0_16_2 + ABCDtemp * x_0_9_2;
    LOCSTORE(store, 4, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_25_0 + WPtempx * x_2_25_1 + ABCDtemp * x_2_16_1;
    LOCSTORE(store, 8, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_22_0 + WPtempy * x_2_22_1 + ABtemp * (x_0_22_0 - CDcom * x_0_22_1) + 2.000000 * ABCDtemp * x_2_16_1;
    QUICKDouble x_3_16_1 = Ptempz * x_0_16_1 + WPtempz * x_0_16_2 + 2.000000 * ABCDtemp * x_0_5_2;
    LOCSTORE(store, 9, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_31_0 + WPtempz * x_3_31_1 + ABtemp * (x_0_31_0 - CDcom * x_0_31_1) + 3.000000 * ABCDtemp * x_3_16_1;
    LOCSTORE(store, 6, 25, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_25_0 + WPtempx * x_3_25_1 + ABCDtemp * x_3_16_1;
    LOCSTORE(store, 5, 22, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_22_0 + WPtempy * x_3_22_1 + 2.000000 * ABCDtemp * x_3_16_1;
    QUICKDouble x_1_32_0 = Ptempx * x_0_32_0 + WPtempx * x_0_32_1 + 4.000000 * ABCDtemp * x_0_17_1;
    QUICKDouble x_1_32_1 = Ptempx * x_0_32_1 + WPtempx * x_0_32_2 + 4.000000 * ABCDtemp * x_0_17_2;
    QUICKDouble x_1_17_1 = Ptempx * x_0_17_1 + WPtempx * x_0_17_2 + 3.000000 * ABCDtemp * x_0_7_2;
    LOCSTORE(store, 7, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_32_0 + WPtempx * x_1_32_1 + ABtemp * (x_0_32_0 - CDcom * x_0_32_1) + 4.000000 * ABCDtemp * x_1_17_1;
    QUICKDouble x_2_17_1 = Ptempy * x_0_17_1 + WPtempy * x_0_17_2;
    LOCSTORE(store, 4, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_32_0 + WPtempx * x_2_32_1 + 4.000000 * ABCDtemp * x_2_17_1;
    LOCSTORE(store, 8, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_28_0 + WPtempy * x_2_28_1 + ABtemp * (x_0_28_0 - CDcom * x_0_28_1) + ABCDtemp * x_2_17_1;
    QUICKDouble x_3_17_1 = Ptempz * x_0_17_1 + WPtempz * x_0_17_2;
    LOCSTORE(store, 6, 32, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_32_0 + WPtempx * x_3_32_1 + 4.000000 * ABCDtemp * x_3_17_1;
    LOCSTORE(store, 5, 28, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_28_0 + WPtempy * x_3_28_1 + ABCDtemp * x_3_17_1;
    LOCSTORE(store, 9, 26, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_26_0 + WPtempz * x_3_26_1 + ABtemp * (x_0_26_0 - CDcom * x_0_26_1) + ABCDtemp * x_3_17_1;
    QUICKDouble x_1_29_0 = Ptempx * x_0_29_0 + WPtempx * x_0_29_1 + ABCDtemp * x_0_18_1;
    QUICKDouble x_1_29_1 = Ptempx * x_0_29_1 + WPtempx * x_0_29_2 + ABCDtemp * x_0_18_2;
    QUICKDouble x_1_18_1 = Ptempx * x_0_18_1 + WPtempx * x_0_18_2;
    LOCSTORE(store, 7, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_29_0 + WPtempx * x_1_29_1 + ABtemp * (x_0_29_0 - CDcom * x_0_29_1) + ABCDtemp * x_1_18_1;
    QUICKDouble x_2_18_1 = Ptempy * x_0_18_1 + WPtempy * x_0_18_2 + 3.000000 * ABCDtemp * x_0_8_2;
    LOCSTORE(store, 8, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_33_0 + WPtempy * x_2_33_1 + ABtemp * (x_0_33_0 - CDcom * x_0_33_1) + 4.000000 * ABCDtemp * x_2_18_1;
    LOCSTORE(store, 4, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_29_0 + WPtempx * x_2_29_1 + ABCDtemp * x_2_18_1;
    QUICKDouble x_3_18_1 = Ptempz * x_0_18_1 + WPtempz * x_0_18_2;
    LOCSTORE(store, 5, 33, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_33_0 + WPtempy * x_3_33_1 + 4.000000 * ABCDtemp * x_3_18_1;
    LOCSTORE(store, 9, 30, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_30_0 + WPtempz * x_3_30_1 + ABtemp * (x_0_30_0 - CDcom * x_0_30_1) + ABCDtemp * x_3_18_1;
    LOCSTORE(store, 6, 29, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_29_0 + WPtempx * x_3_29_1 + ABCDtemp * x_3_18_1;
    QUICKDouble x_1_27_0 = Ptempx * x_0_27_0 + WPtempx * x_0_27_1 + ABCDtemp * x_0_19_1;
    QUICKDouble x_1_27_1 = Ptempx * x_0_27_1 + WPtempx * x_0_27_2 + ABCDtemp * x_0_19_2;
    QUICKDouble x_1_19_1 = Ptempx * x_0_19_1 + WPtempx * x_0_19_2;
    LOCSTORE(store, 7, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_27_0 + WPtempx * x_1_27_1 + ABtemp * (x_0_27_0 - CDcom * x_0_27_1) + ABCDtemp * x_1_19_1;
    QUICKDouble x_2_19_1 = Ptempy * x_0_19_1 + WPtempy * x_0_19_2;
    LOCSTORE(store, 8, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_31_0 + WPtempy * x_2_31_1 + ABtemp * (x_0_31_0 - CDcom * x_0_31_1) + ABCDtemp * x_2_19_1;
    LOCSTORE(store, 4, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_27_0 + WPtempx * x_2_27_1 + ABCDtemp * x_2_19_1;
    QUICKDouble x_3_19_1 = Ptempz * x_0_19_1 + WPtempz * x_0_19_2 + 3.000000 * ABCDtemp * x_0_9_2;
    LOCSTORE(store, 9, 34, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_34_0 + WPtempz * x_3_34_1 + ABtemp * (x_0_34_0 - CDcom * x_0_34_1) + 4.000000 * ABCDtemp * x_3_19_1;
    LOCSTORE(store, 5, 31, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_31_0 + WPtempy * x_3_31_1 + ABCDtemp * x_3_19_1;
    LOCSTORE(store, 6, 27, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_27_0 + WPtempx * x_3_27_1 + ABCDtemp * x_3_19_1;
    // [DS|GS] integral - End 

}

