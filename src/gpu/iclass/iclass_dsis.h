/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [DS|IS] integral - Start
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble x_0_3_0 = Qtempz * VY_0 + WQtempz * VY_1;
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble x_0_3_1 = Qtempz * VY_1 + WQtempz * VY_2;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_0_3_2 = Qtempz * VY_2 + WQtempz * VY_3;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_0_3_3 = Qtempz * VY_3 + WQtempz * VY_4;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_0_3_4 = Qtempz * VY_4 + WQtempz * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_0_3_5 = Qtempz * VY_5 + WQtempz * VY_6;
    QUICKDouble VY_7 = VY(0, 0, 7);
    QUICKDouble x_0_3_6 = Qtempz * VY_6 + WQtempz * VY_7;
    QUICKDouble VY_8 = VY(0, 0, 8);
    QUICKDouble x_0_3_7 = Qtempz * VY_7 + WQtempz * VY_8;
    QUICKDouble x_0_9_0 = Qtempz * x_0_3_0 + WQtempz * x_0_3_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_9_1 = Qtempz * x_0_3_1 + WQtempz * x_0_3_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_9_2 = Qtempz * x_0_3_2 + WQtempz * x_0_3_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_9_3 = Qtempz * x_0_3_3 + WQtempz * x_0_3_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_9_4 = Qtempz * x_0_3_4 + WQtempz * x_0_3_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_9_5 = Qtempz * x_0_3_5 + WQtempz * x_0_3_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_9_6 = Qtempz * x_0_3_6 + WQtempz * x_0_3_7 + CDtemp * (VY_6 - ABcom * VY_7);
    QUICKDouble x_0_19_0 = Qtempz * x_0_9_0 + WQtempz * x_0_9_1 + 2.000000 * CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_19_1 = Qtempz * x_0_9_1 + WQtempz * x_0_9_2 + 2.000000 * CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_19_2 = Qtempz * x_0_9_2 + WQtempz * x_0_9_3 + 2.000000 * CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_19_3 = Qtempz * x_0_9_3 + WQtempz * x_0_9_4 + 2.000000 * CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_19_4 = Qtempz * x_0_9_4 + WQtempz * x_0_9_5 + 2.000000 * CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_19_5 = Qtempz * x_0_9_5 + WQtempz * x_0_9_6 + 2.000000 * CDtemp * (x_0_3_5 - ABcom * x_0_3_6);
    QUICKDouble x_0_34_0 = Qtempz * x_0_19_0 + WQtempz * x_0_19_1 + 3.000000 * CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_34_1 = Qtempz * x_0_19_1 + WQtempz * x_0_19_2 + 3.000000 * CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_34_2 = Qtempz * x_0_19_2 + WQtempz * x_0_19_3 + 3.000000 * CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_0_34_3 = Qtempz * x_0_19_3 + WQtempz * x_0_19_4 + 3.000000 * CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_34_4 = Qtempz * x_0_19_4 + WQtempz * x_0_19_5 + 3.000000 * CDtemp * (x_0_9_4 - ABcom * x_0_9_5);
    QUICKDouble x_0_55_0 = Qtempz * x_0_34_0 + WQtempz * x_0_34_1 + 4.000000 * CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_55_1 = Qtempz * x_0_34_1 + WQtempz * x_0_34_2 + 4.000000 * CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_55_2 = Qtempz * x_0_34_2 + WQtempz * x_0_34_3 + 4.000000 * CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_0_55_3 = Qtempz * x_0_34_3 + WQtempz * x_0_34_4 + 4.000000 * CDtemp * (x_0_19_3 - ABcom * x_0_19_4);
    QUICKDouble x_0_66_0 = Qtempy * x_0_55_0 + WQtempy * x_0_55_1;
    QUICKDouble x_0_66_1 = Qtempy * x_0_55_1 + WQtempy * x_0_55_2;
    QUICKDouble x_0_66_2 = Qtempy * x_0_55_2 + WQtempy * x_0_55_3;
    QUICKDouble x_1_66_0 = Ptempx * x_0_66_0 + WPtempx * x_0_66_1;
    QUICKDouble x_1_66_1 = Ptempx * x_0_66_1 + WPtempx * x_0_66_2;
    LOCSTORE(store, 7, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_66_0 + WPtempx * x_1_66_1 + ABtemp * (x_0_66_0 - CDcom * x_0_66_1);
    QUICKDouble x_2_66_0 = Ptempy * x_0_66_0 + WPtempy * x_0_66_1 + ABCDtemp * x_0_55_1;
    QUICKDouble x_2_66_1 = Ptempy * x_0_66_1 + WPtempy * x_0_66_2 + ABCDtemp * x_0_55_2;
    LOCSTORE(store, 4, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_66_0 + WPtempx * x_2_66_1;
    QUICKDouble x_0_47_1 = Qtempy * x_0_34_1 + WQtempy * x_0_34_2;
    QUICKDouble x_0_47_2 = Qtempy * x_0_34_2 + WQtempy * x_0_34_3;
    QUICKDouble x_3_66_0 = Ptempz * x_0_66_0 + WPtempz * x_0_66_1 + 5.000000 * ABCDtemp * x_0_47_1;
    QUICKDouble x_3_66_1 = Ptempz * x_0_66_1 + WPtempz * x_0_66_2 + 5.000000 * ABCDtemp * x_0_47_2;
    LOCSTORE(store, 6, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_66_0 + WPtempx * x_3_66_1;
    QUICKDouble x_0_5_0 = Qtempy * x_0_3_0 + WQtempy * x_0_3_1;
    QUICKDouble x_0_5_1 = Qtempy * x_0_3_1 + WQtempy * x_0_3_2;
    QUICKDouble x_0_5_2 = Qtempy * x_0_3_2 + WQtempy * x_0_3_3;
    QUICKDouble x_0_5_3 = Qtempy * x_0_3_3 + WQtempy * x_0_3_4;
    QUICKDouble x_0_5_4 = Qtempy * x_0_3_4 + WQtempy * x_0_3_5;
    QUICKDouble x_0_5_5 = Qtempy * x_0_3_5 + WQtempy * x_0_3_6;
    QUICKDouble x_0_5_6 = Qtempy * x_0_3_6 + WQtempy * x_0_3_7;
    QUICKDouble x_0_15_0 = Qtempy * x_0_5_0 + WQtempy * x_0_5_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_15_1 = Qtempy * x_0_5_1 + WQtempy * x_0_5_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_15_2 = Qtempy * x_0_5_2 + WQtempy * x_0_5_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_15_3 = Qtempy * x_0_5_3 + WQtempy * x_0_5_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_15_4 = Qtempy * x_0_5_4 + WQtempy * x_0_5_5 + CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_15_5 = Qtempy * x_0_5_5 + WQtempy * x_0_5_6 + CDtemp * (x_0_3_5 - ABcom * x_0_3_6);
    QUICKDouble x_0_30_0 = Qtempy * x_0_15_0 + WQtempy * x_0_15_1 + 2.000000 * CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_30_1 = Qtempy * x_0_15_1 + WQtempy * x_0_15_2 + 2.000000 * CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_30_2 = Qtempy * x_0_15_2 + WQtempy * x_0_15_3 + 2.000000 * CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_0_30_3 = Qtempy * x_0_15_3 + WQtempy * x_0_15_4 + 2.000000 * CDtemp * (x_0_5_3 - ABcom * x_0_5_4);
    QUICKDouble x_0_30_4 = Qtempy * x_0_15_4 + WQtempy * x_0_15_5 + 2.000000 * CDtemp * (x_0_5_4 - ABcom * x_0_5_5);
    QUICKDouble x_0_48_0 = Qtempy * x_0_30_0 + WQtempy * x_0_30_1 + 3.000000 * CDtemp * (x_0_15_0 - ABcom * x_0_15_1);
    QUICKDouble x_0_48_1 = Qtempy * x_0_30_1 + WQtempy * x_0_30_2 + 3.000000 * CDtemp * (x_0_15_1 - ABcom * x_0_15_2);
    QUICKDouble x_0_48_2 = Qtempy * x_0_30_2 + WQtempy * x_0_30_3 + 3.000000 * CDtemp * (x_0_15_2 - ABcom * x_0_15_3);
    QUICKDouble x_0_48_3 = Qtempy * x_0_30_3 + WQtempy * x_0_30_4 + 3.000000 * CDtemp * (x_0_15_3 - ABcom * x_0_15_4);
    QUICKDouble x_0_67_0 = Qtempy * x_0_48_0 + WQtempy * x_0_48_1 + 4.000000 * CDtemp * (x_0_30_0 - ABcom * x_0_30_1);
    QUICKDouble x_0_67_1 = Qtempy * x_0_48_1 + WQtempy * x_0_48_2 + 4.000000 * CDtemp * (x_0_30_1 - ABcom * x_0_30_2);
    QUICKDouble x_0_67_2 = Qtempy * x_0_48_2 + WQtempy * x_0_48_3 + 4.000000 * CDtemp * (x_0_30_2 - ABcom * x_0_30_3);
    QUICKDouble x_1_67_0 = Ptempx * x_0_67_0 + WPtempx * x_0_67_1;
    QUICKDouble x_1_67_1 = Ptempx * x_0_67_1 + WPtempx * x_0_67_2;
    LOCSTORE(store, 7, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_67_0 + WPtempx * x_1_67_1 + ABtemp * (x_0_67_0 - CDcom * x_0_67_1);
    QUICKDouble x_2_67_0 = Ptempy * x_0_67_0 + WPtempy * x_0_67_1 + 5.000000 * ABCDtemp * x_0_48_1;
    QUICKDouble x_2_67_1 = Ptempy * x_0_67_1 + WPtempy * x_0_67_2 + 5.000000 * ABCDtemp * x_0_48_2;
    LOCSTORE(store, 4, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_67_0 + WPtempx * x_2_67_1;
    QUICKDouble x_0_2_1 = Qtempy * VY_1 + WQtempy * VY_2;
    QUICKDouble x_0_2_2 = Qtempy * VY_2 + WQtempy * VY_3;
    QUICKDouble x_0_2_3 = Qtempy * VY_3 + WQtempy * VY_4;
    QUICKDouble x_0_2_4 = Qtempy * VY_4 + WQtempy * VY_5;
    QUICKDouble x_0_2_5 = Qtempy * VY_5 + WQtempy * VY_6;
    QUICKDouble x_0_2_6 = Qtempy * VY_6 + WQtempy * VY_7;
    QUICKDouble x_0_8_1 = Qtempy * x_0_2_1 + WQtempy * x_0_2_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_8_2 = Qtempy * x_0_2_2 + WQtempy * x_0_2_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_8_3 = Qtempy * x_0_2_3 + WQtempy * x_0_2_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_8_4 = Qtempy * x_0_2_4 + WQtempy * x_0_2_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_8_5 = Qtempy * x_0_2_5 + WQtempy * x_0_2_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_18_1 = Qtempy * x_0_8_1 + WQtempy * x_0_8_2 + 2.000000 * CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_18_2 = Qtempy * x_0_8_2 + WQtempy * x_0_8_3 + 2.000000 * CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_18_3 = Qtempy * x_0_8_3 + WQtempy * x_0_8_4 + 2.000000 * CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_18_4 = Qtempy * x_0_8_4 + WQtempy * x_0_8_5 + 2.000000 * CDtemp * (x_0_2_4 - ABcom * x_0_2_5);
    QUICKDouble x_0_33_1 = Qtempy * x_0_18_1 + WQtempy * x_0_18_2 + 3.000000 * CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_33_2 = Qtempy * x_0_18_2 + WQtempy * x_0_18_3 + 3.000000 * CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_0_33_3 = Qtempy * x_0_18_3 + WQtempy * x_0_18_4 + 3.000000 * CDtemp * (x_0_8_3 - ABcom * x_0_8_4);
    QUICKDouble x_0_54_1 = Qtempy * x_0_33_1 + WQtempy * x_0_33_2 + 4.000000 * CDtemp * (x_0_18_1 - ABcom * x_0_18_2);
    QUICKDouble x_0_54_2 = Qtempy * x_0_33_2 + WQtempy * x_0_33_3 + 4.000000 * CDtemp * (x_0_18_2 - ABcom * x_0_18_3);
    QUICKDouble x_3_67_0 = Ptempz * x_0_67_0 + WPtempz * x_0_67_1 + ABCDtemp * x_0_54_1;
    QUICKDouble x_3_67_1 = Ptempz * x_0_67_1 + WPtempz * x_0_67_2 + ABCDtemp * x_0_54_2;
    LOCSTORE(store, 6, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_67_0 + WPtempx * x_3_67_1;
    QUICKDouble x_0_68_0 = Qtempx * x_0_55_0 + WQtempx * x_0_55_1;
    QUICKDouble x_0_68_1 = Qtempx * x_0_55_1 + WQtempx * x_0_55_2;
    QUICKDouble x_0_68_2 = Qtempx * x_0_55_2 + WQtempx * x_0_55_3;
    QUICKDouble x_2_68_0 = Ptempy * x_0_68_0 + WPtempy * x_0_68_1;
    QUICKDouble x_2_68_1 = Ptempy * x_0_68_1 + WPtempy * x_0_68_2;
    LOCSTORE(store, 8, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_68_0 + WPtempy * x_2_68_1 + ABtemp * (x_0_68_0 - CDcom * x_0_68_1);
    QUICKDouble x_0_49_1 = Qtempx * x_0_34_1 + WQtempx * x_0_34_2;
    QUICKDouble x_0_49_2 = Qtempx * x_0_34_2 + WQtempx * x_0_34_3;
    QUICKDouble x_3_68_0 = Ptempz * x_0_68_0 + WPtempz * x_0_68_1 + 5.000000 * ABCDtemp * x_0_49_1;
    QUICKDouble x_3_68_1 = Ptempz * x_0_68_1 + WPtempz * x_0_68_2 + 5.000000 * ABCDtemp * x_0_49_2;
    LOCSTORE(store, 5, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_68_0 + WPtempy * x_3_68_1;
    QUICKDouble x_0_6_0 = Qtempx * x_0_3_0 + WQtempx * x_0_3_1;
    QUICKDouble x_0_6_1 = Qtempx * x_0_3_1 + WQtempx * x_0_3_2;
    QUICKDouble x_0_6_2 = Qtempx * x_0_3_2 + WQtempx * x_0_3_3;
    QUICKDouble x_0_6_3 = Qtempx * x_0_3_3 + WQtempx * x_0_3_4;
    QUICKDouble x_0_6_4 = Qtempx * x_0_3_4 + WQtempx * x_0_3_5;
    QUICKDouble x_0_6_5 = Qtempx * x_0_3_5 + WQtempx * x_0_3_6;
    QUICKDouble x_0_6_6 = Qtempx * x_0_3_6 + WQtempx * x_0_3_7;
    QUICKDouble x_0_13_0 = Qtempx * x_0_6_0 + WQtempx * x_0_6_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_13_1 = Qtempx * x_0_6_1 + WQtempx * x_0_6_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_13_2 = Qtempx * x_0_6_2 + WQtempx * x_0_6_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_13_3 = Qtempx * x_0_6_3 + WQtempx * x_0_6_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_13_4 = Qtempx * x_0_6_4 + WQtempx * x_0_6_5 + CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_13_5 = Qtempx * x_0_6_5 + WQtempx * x_0_6_6 + CDtemp * (x_0_3_5 - ABcom * x_0_3_6);
    QUICKDouble x_0_26_0 = Qtempx * x_0_13_0 + WQtempx * x_0_13_1 + 2.000000 * CDtemp * (x_0_6_0 - ABcom * x_0_6_1);
    QUICKDouble x_0_26_1 = Qtempx * x_0_13_1 + WQtempx * x_0_13_2 + 2.000000 * CDtemp * (x_0_6_1 - ABcom * x_0_6_2);
    QUICKDouble x_0_26_2 = Qtempx * x_0_13_2 + WQtempx * x_0_13_3 + 2.000000 * CDtemp * (x_0_6_2 - ABcom * x_0_6_3);
    QUICKDouble x_0_26_3 = Qtempx * x_0_13_3 + WQtempx * x_0_13_4 + 2.000000 * CDtemp * (x_0_6_3 - ABcom * x_0_6_4);
    QUICKDouble x_0_26_4 = Qtempx * x_0_13_4 + WQtempx * x_0_13_5 + 2.000000 * CDtemp * (x_0_6_4 - ABcom * x_0_6_5);
    QUICKDouble x_0_50_0 = Qtempx * x_0_26_0 + WQtempx * x_0_26_1 + 3.000000 * CDtemp * (x_0_13_0 - ABcom * x_0_13_1);
    QUICKDouble x_0_50_1 = Qtempx * x_0_26_1 + WQtempx * x_0_26_2 + 3.000000 * CDtemp * (x_0_13_1 - ABcom * x_0_13_2);
    QUICKDouble x_0_50_2 = Qtempx * x_0_26_2 + WQtempx * x_0_26_3 + 3.000000 * CDtemp * (x_0_13_2 - ABcom * x_0_13_3);
    QUICKDouble x_0_50_3 = Qtempx * x_0_26_3 + WQtempx * x_0_26_4 + 3.000000 * CDtemp * (x_0_13_3 - ABcom * x_0_13_4);
    QUICKDouble x_0_69_0 = Qtempx * x_0_50_0 + WQtempx * x_0_50_1 + 4.000000 * CDtemp * (x_0_26_0 - ABcom * x_0_26_1);
    QUICKDouble x_0_69_1 = Qtempx * x_0_50_1 + WQtempx * x_0_50_2 + 4.000000 * CDtemp * (x_0_26_1 - ABcom * x_0_26_2);
    QUICKDouble x_0_69_2 = Qtempx * x_0_50_2 + WQtempx * x_0_50_3 + 4.000000 * CDtemp * (x_0_26_2 - ABcom * x_0_26_3);
    QUICKDouble x_2_69_0 = Ptempy * x_0_69_0 + WPtempy * x_0_69_1;
    QUICKDouble x_2_69_1 = Ptempy * x_0_69_1 + WPtempy * x_0_69_2;
    LOCSTORE(store, 8, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_69_0 + WPtempy * x_2_69_1 + ABtemp * (x_0_69_0 - CDcom * x_0_69_1);
    QUICKDouble x_0_1_1 = Qtempx * VY_1 + WQtempx * VY_2;
    QUICKDouble x_0_1_2 = Qtempx * VY_2 + WQtempx * VY_3;
    QUICKDouble x_0_1_3 = Qtempx * VY_3 + WQtempx * VY_4;
    QUICKDouble x_0_1_4 = Qtempx * VY_4 + WQtempx * VY_5;
    QUICKDouble x_0_1_5 = Qtempx * VY_5 + WQtempx * VY_6;
    QUICKDouble x_0_1_6 = Qtempx * VY_6 + WQtempx * VY_7;
    QUICKDouble x_0_7_1 = Qtempx * x_0_1_1 + WQtempx * x_0_1_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_7_2 = Qtempx * x_0_1_2 + WQtempx * x_0_1_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_7_3 = Qtempx * x_0_1_3 + WQtempx * x_0_1_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_7_4 = Qtempx * x_0_1_4 + WQtempx * x_0_1_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_7_5 = Qtempx * x_0_1_5 + WQtempx * x_0_1_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_17_1 = Qtempx * x_0_7_1 + WQtempx * x_0_7_2 + 2.000000 * CDtemp * (x_0_1_1 - ABcom * x_0_1_2);
    QUICKDouble x_0_17_2 = Qtempx * x_0_7_2 + WQtempx * x_0_7_3 + 2.000000 * CDtemp * (x_0_1_2 - ABcom * x_0_1_3);
    QUICKDouble x_0_17_3 = Qtempx * x_0_7_3 + WQtempx * x_0_7_4 + 2.000000 * CDtemp * (x_0_1_3 - ABcom * x_0_1_4);
    QUICKDouble x_0_17_4 = Qtempx * x_0_7_4 + WQtempx * x_0_7_5 + 2.000000 * CDtemp * (x_0_1_4 - ABcom * x_0_1_5);
    QUICKDouble x_0_32_1 = Qtempx * x_0_17_1 + WQtempx * x_0_17_2 + 3.000000 * CDtemp * (x_0_7_1 - ABcom * x_0_7_2);
    QUICKDouble x_0_32_2 = Qtempx * x_0_17_2 + WQtempx * x_0_17_3 + 3.000000 * CDtemp * (x_0_7_2 - ABcom * x_0_7_3);
    QUICKDouble x_0_32_3 = Qtempx * x_0_17_3 + WQtempx * x_0_17_4 + 3.000000 * CDtemp * (x_0_7_3 - ABcom * x_0_7_4);
    QUICKDouble x_0_53_1 = Qtempx * x_0_32_1 + WQtempx * x_0_32_2 + 4.000000 * CDtemp * (x_0_17_1 - ABcom * x_0_17_2);
    QUICKDouble x_0_53_2 = Qtempx * x_0_32_2 + WQtempx * x_0_32_3 + 4.000000 * CDtemp * (x_0_17_2 - ABcom * x_0_17_3);
    QUICKDouble x_3_69_0 = Ptempz * x_0_69_0 + WPtempz * x_0_69_1 + ABCDtemp * x_0_53_1;
    QUICKDouble x_3_69_1 = Ptempz * x_0_69_1 + WPtempz * x_0_69_2 + ABCDtemp * x_0_53_2;
    LOCSTORE(store, 5, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_69_0 + WPtempy * x_3_69_1;
    QUICKDouble x_0_2_0 = Qtempy * VY_0 + WQtempy * VY_1;
    QUICKDouble x_0_2_7 = Qtempy * VY_7 + WQtempy * VY_8;
    QUICKDouble x_0_8_0 = Qtempy * x_0_2_0 + WQtempy * x_0_2_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_8_6 = Qtempy * x_0_2_6 + WQtempy * x_0_2_7 + CDtemp * (VY_6 - ABcom * VY_7);
    QUICKDouble x_0_18_0 = Qtempy * x_0_8_0 + WQtempy * x_0_8_1 + 2.000000 * CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_18_5 = Qtempy * x_0_8_5 + WQtempy * x_0_8_6 + 2.000000 * CDtemp * (x_0_2_5 - ABcom * x_0_2_6);
    QUICKDouble x_0_33_0 = Qtempy * x_0_18_0 + WQtempy * x_0_18_1 + 3.000000 * CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_33_4 = Qtempy * x_0_18_4 + WQtempy * x_0_18_5 + 3.000000 * CDtemp * (x_0_8_4 - ABcom * x_0_8_5);
    QUICKDouble x_0_54_0 = Qtempy * x_0_33_0 + WQtempy * x_0_33_1 + 4.000000 * CDtemp * (x_0_18_0 - ABcom * x_0_18_1);
    QUICKDouble x_0_54_3 = Qtempy * x_0_33_3 + WQtempy * x_0_33_4 + 4.000000 * CDtemp * (x_0_18_3 - ABcom * x_0_18_4);
    QUICKDouble x_0_70_0 = Qtempx * x_0_54_0 + WQtempx * x_0_54_1;
    QUICKDouble x_0_70_1 = Qtempx * x_0_54_1 + WQtempx * x_0_54_2;
    QUICKDouble x_0_70_2 = Qtempx * x_0_54_2 + WQtempx * x_0_54_3;
    QUICKDouble x_3_70_0 = Ptempz * x_0_70_0 + WPtempz * x_0_70_1;
    QUICKDouble x_3_70_1 = Ptempz * x_0_70_1 + WPtempz * x_0_70_2;
    LOCSTORE(store, 9, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_70_0 + WPtempz * x_3_70_1 + ABtemp * (x_0_70_0 - CDcom * x_0_70_1);
    QUICKDouble x_0_4_0 = Qtempx * x_0_2_0 + WQtempx * x_0_2_1;
    QUICKDouble x_0_4_1 = Qtempx * x_0_2_1 + WQtempx * x_0_2_2;
    QUICKDouble x_0_4_2 = Qtempx * x_0_2_2 + WQtempx * x_0_2_3;
    QUICKDouble x_0_4_3 = Qtempx * x_0_2_3 + WQtempx * x_0_2_4;
    QUICKDouble x_0_4_4 = Qtempx * x_0_2_4 + WQtempx * x_0_2_5;
    QUICKDouble x_0_4_5 = Qtempx * x_0_2_5 + WQtempx * x_0_2_6;
    QUICKDouble x_0_4_6 = Qtempx * x_0_2_6 + WQtempx * x_0_2_7;
    QUICKDouble x_0_11_0 = Qtempx * x_0_4_0 + WQtempx * x_0_4_1 + CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_11_1 = Qtempx * x_0_4_1 + WQtempx * x_0_4_2 + CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_11_2 = Qtempx * x_0_4_2 + WQtempx * x_0_4_3 + CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_11_3 = Qtempx * x_0_4_3 + WQtempx * x_0_4_4 + CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_11_4 = Qtempx * x_0_4_4 + WQtempx * x_0_4_5 + CDtemp * (x_0_2_4 - ABcom * x_0_2_5);
    QUICKDouble x_0_11_5 = Qtempx * x_0_4_5 + WQtempx * x_0_4_6 + CDtemp * (x_0_2_5 - ABcom * x_0_2_6);
    QUICKDouble x_0_28_0 = Qtempx * x_0_11_0 + WQtempx * x_0_11_1 + 2.000000 * CDtemp * (x_0_4_0 - ABcom * x_0_4_1);
    QUICKDouble x_0_28_1 = Qtempx * x_0_11_1 + WQtempx * x_0_11_2 + 2.000000 * CDtemp * (x_0_4_1 - ABcom * x_0_4_2);
    QUICKDouble x_0_28_2 = Qtempx * x_0_11_2 + WQtempx * x_0_11_3 + 2.000000 * CDtemp * (x_0_4_2 - ABcom * x_0_4_3);
    QUICKDouble x_0_28_3 = Qtempx * x_0_11_3 + WQtempx * x_0_11_4 + 2.000000 * CDtemp * (x_0_4_3 - ABcom * x_0_4_4);
    QUICKDouble x_0_28_4 = Qtempx * x_0_11_4 + WQtempx * x_0_11_5 + 2.000000 * CDtemp * (x_0_4_4 - ABcom * x_0_4_5);
    QUICKDouble x_0_52_0 = Qtempx * x_0_28_0 + WQtempx * x_0_28_1 + 3.000000 * CDtemp * (x_0_11_0 - ABcom * x_0_11_1);
    QUICKDouble x_0_52_1 = Qtempx * x_0_28_1 + WQtempx * x_0_28_2 + 3.000000 * CDtemp * (x_0_11_1 - ABcom * x_0_11_2);
    QUICKDouble x_0_52_2 = Qtempx * x_0_28_2 + WQtempx * x_0_28_3 + 3.000000 * CDtemp * (x_0_11_2 - ABcom * x_0_11_3);
    QUICKDouble x_0_52_3 = Qtempx * x_0_28_3 + WQtempx * x_0_28_4 + 3.000000 * CDtemp * (x_0_11_3 - ABcom * x_0_11_4);
    QUICKDouble x_0_71_0 = Qtempx * x_0_52_0 + WQtempx * x_0_52_1 + 4.000000 * CDtemp * (x_0_28_0 - ABcom * x_0_28_1);
    QUICKDouble x_0_71_1 = Qtempx * x_0_52_1 + WQtempx * x_0_52_2 + 4.000000 * CDtemp * (x_0_28_1 - ABcom * x_0_28_2);
    QUICKDouble x_0_71_2 = Qtempx * x_0_52_2 + WQtempx * x_0_52_3 + 4.000000 * CDtemp * (x_0_28_2 - ABcom * x_0_28_3);
    QUICKDouble x_3_71_0 = Ptempz * x_0_71_0 + WPtempz * x_0_71_1;
    QUICKDouble x_3_71_1 = Ptempz * x_0_71_1 + WPtempz * x_0_71_2;
    LOCSTORE(store, 9, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_71_0 + WPtempz * x_3_71_1 + ABtemp * (x_0_71_0 - CDcom * x_0_71_1);
    QUICKDouble x_0_47_0 = Qtempy * x_0_34_0 + WQtempy * x_0_34_1;
    QUICKDouble x_0_47_3 = Qtempy * x_0_34_3 + WQtempy * x_0_34_4;
    QUICKDouble x_0_72_0 = Qtempy * x_0_47_0 + WQtempy * x_0_47_1 + CDtemp * (x_0_34_0 - ABcom * x_0_34_1);
    QUICKDouble x_0_72_1 = Qtempy * x_0_47_1 + WQtempy * x_0_47_2 + CDtemp * (x_0_34_1 - ABcom * x_0_34_2);
    QUICKDouble x_0_72_2 = Qtempy * x_0_47_2 + WQtempy * x_0_47_3 + CDtemp * (x_0_34_2 - ABcom * x_0_34_3);
    QUICKDouble x_1_72_0 = Ptempx * x_0_72_0 + WPtempx * x_0_72_1;
    QUICKDouble x_1_72_1 = Ptempx * x_0_72_1 + WPtempx * x_0_72_2;
    LOCSTORE(store, 7, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_72_0 + WPtempx * x_1_72_1 + ABtemp * (x_0_72_0 - CDcom * x_0_72_1);
    QUICKDouble x_2_72_0 = Ptempy * x_0_72_0 + WPtempy * x_0_72_1 + 2.000000 * ABCDtemp * x_0_47_1;
    QUICKDouble x_2_72_1 = Ptempy * x_0_72_1 + WPtempy * x_0_72_2 + 2.000000 * ABCDtemp * x_0_47_2;
    LOCSTORE(store, 4, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_72_0 + WPtempx * x_2_72_1;
    QUICKDouble x_0_31_1 = Qtempy * x_0_19_1 + WQtempy * x_0_19_2;
    QUICKDouble x_0_31_2 = Qtempy * x_0_19_2 + WQtempy * x_0_19_3;
    QUICKDouble x_0_31_3 = Qtempy * x_0_19_3 + WQtempy * x_0_19_4;
    QUICKDouble x_0_41_1 = Qtempy * x_0_31_1 + WQtempy * x_0_31_2 + CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_41_2 = Qtempy * x_0_31_2 + WQtempy * x_0_31_3 + CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_3_72_0 = Ptempz * x_0_72_0 + WPtempz * x_0_72_1 + 4.000000 * ABCDtemp * x_0_41_1;
    QUICKDouble x_3_72_1 = Ptempz * x_0_72_1 + WPtempz * x_0_72_2 + 4.000000 * ABCDtemp * x_0_41_2;
    LOCSTORE(store, 6, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_72_0 + WPtempx * x_3_72_1;
    QUICKDouble x_0_16_0 = Qtempy * x_0_9_0 + WQtempy * x_0_9_1;
    QUICKDouble x_0_16_1 = Qtempy * x_0_9_1 + WQtempy * x_0_9_2;
    QUICKDouble x_0_16_2 = Qtempy * x_0_9_2 + WQtempy * x_0_9_3;
    QUICKDouble x_0_16_3 = Qtempy * x_0_9_3 + WQtempy * x_0_9_4;
    QUICKDouble x_0_16_4 = Qtempy * x_0_9_4 + WQtempy * x_0_9_5;
    QUICKDouble x_0_16_5 = Qtempy * x_0_9_5 + WQtempy * x_0_9_6;
    QUICKDouble x_0_22_0 = Qtempy * x_0_16_0 + WQtempy * x_0_16_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_22_1 = Qtempy * x_0_16_1 + WQtempy * x_0_16_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_22_2 = Qtempy * x_0_16_2 + WQtempy * x_0_16_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_0_22_3 = Qtempy * x_0_16_3 + WQtempy * x_0_16_4 + CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_22_4 = Qtempy * x_0_16_4 + WQtempy * x_0_16_5 + CDtemp * (x_0_9_4 - ABcom * x_0_9_5);
    QUICKDouble x_0_42_0 = Qtempy * x_0_22_0 + WQtempy * x_0_22_1 + 2.000000 * CDtemp * (x_0_16_0 - ABcom * x_0_16_1);
    QUICKDouble x_0_42_1 = Qtempy * x_0_22_1 + WQtempy * x_0_22_2 + 2.000000 * CDtemp * (x_0_16_1 - ABcom * x_0_16_2);
    QUICKDouble x_0_42_2 = Qtempy * x_0_22_2 + WQtempy * x_0_22_3 + 2.000000 * CDtemp * (x_0_16_2 - ABcom * x_0_16_3);
    QUICKDouble x_0_42_3 = Qtempy * x_0_22_3 + WQtempy * x_0_22_4 + 2.000000 * CDtemp * (x_0_16_3 - ABcom * x_0_16_4);
    QUICKDouble x_0_73_0 = Qtempy * x_0_42_0 + WQtempy * x_0_42_1 + 3.000000 * CDtemp * (x_0_22_0 - ABcom * x_0_22_1);
    QUICKDouble x_0_73_1 = Qtempy * x_0_42_1 + WQtempy * x_0_42_2 + 3.000000 * CDtemp * (x_0_22_1 - ABcom * x_0_22_2);
    QUICKDouble x_0_73_2 = Qtempy * x_0_42_2 + WQtempy * x_0_42_3 + 3.000000 * CDtemp * (x_0_22_2 - ABcom * x_0_22_3);
    QUICKDouble x_1_73_0 = Ptempx * x_0_73_0 + WPtempx * x_0_73_1;
    QUICKDouble x_1_73_1 = Ptempx * x_0_73_1 + WPtempx * x_0_73_2;
    LOCSTORE(store, 7, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_73_0 + WPtempx * x_1_73_1 + ABtemp * (x_0_73_0 - CDcom * x_0_73_1);
    QUICKDouble x_2_73_0 = Ptempy * x_0_73_0 + WPtempy * x_0_73_1 + 4.000000 * ABCDtemp * x_0_42_1;
    QUICKDouble x_2_73_1 = Ptempy * x_0_73_1 + WPtempy * x_0_73_2 + 4.000000 * ABCDtemp * x_0_42_2;
    LOCSTORE(store, 4, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_73_0 + WPtempx * x_2_73_1;
    QUICKDouble x_3_73_0 = Ptempz * x_0_73_0 + WPtempz * x_0_73_1 + 2.000000 * ABCDtemp * x_0_48_1;
    QUICKDouble x_3_73_1 = Ptempz * x_0_73_1 + WPtempz * x_0_73_2 + 2.000000 * ABCDtemp * x_0_48_2;
    LOCSTORE(store, 6, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_73_0 + WPtempx * x_3_73_1;
    QUICKDouble x_0_49_0 = Qtempx * x_0_34_0 + WQtempx * x_0_34_1;
    QUICKDouble x_0_49_3 = Qtempx * x_0_34_3 + WQtempx * x_0_34_4;
    QUICKDouble x_0_74_0 = Qtempx * x_0_49_0 + WQtempx * x_0_49_1 + CDtemp * (x_0_34_0 - ABcom * x_0_34_1);
    QUICKDouble x_0_74_1 = Qtempx * x_0_49_1 + WQtempx * x_0_49_2 + CDtemp * (x_0_34_1 - ABcom * x_0_34_2);
    QUICKDouble x_0_74_2 = Qtempx * x_0_49_2 + WQtempx * x_0_49_3 + CDtemp * (x_0_34_2 - ABcom * x_0_34_3);
    QUICKDouble x_2_74_0 = Ptempy * x_0_74_0 + WPtempy * x_0_74_1;
    QUICKDouble x_2_74_1 = Ptempy * x_0_74_1 + WPtempy * x_0_74_2;
    LOCSTORE(store, 8, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_74_0 + WPtempy * x_2_74_1 + ABtemp * (x_0_74_0 - CDcom * x_0_74_1);
    QUICKDouble x_0_27_1 = Qtempx * x_0_19_1 + WQtempx * x_0_19_2;
    QUICKDouble x_0_27_2 = Qtempx * x_0_19_2 + WQtempx * x_0_19_3;
    QUICKDouble x_0_27_3 = Qtempx * x_0_19_3 + WQtempx * x_0_19_4;
    QUICKDouble x_0_43_1 = Qtempx * x_0_27_1 + WQtempx * x_0_27_2 + CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_43_2 = Qtempx * x_0_27_2 + WQtempx * x_0_27_3 + CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_3_74_0 = Ptempz * x_0_74_0 + WPtempz * x_0_74_1 + 4.000000 * ABCDtemp * x_0_43_1;
    QUICKDouble x_3_74_1 = Ptempz * x_0_74_1 + WPtempz * x_0_74_2 + 4.000000 * ABCDtemp * x_0_43_2;
    LOCSTORE(store, 5, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_74_0 + WPtempy * x_3_74_1;
    QUICKDouble x_0_14_0 = Qtempx * x_0_9_0 + WQtempx * x_0_9_1;
    QUICKDouble x_0_14_1 = Qtempx * x_0_9_1 + WQtempx * x_0_9_2;
    QUICKDouble x_0_14_2 = Qtempx * x_0_9_2 + WQtempx * x_0_9_3;
    QUICKDouble x_0_14_3 = Qtempx * x_0_9_3 + WQtempx * x_0_9_4;
    QUICKDouble x_0_14_4 = Qtempx * x_0_9_4 + WQtempx * x_0_9_5;
    QUICKDouble x_0_14_5 = Qtempx * x_0_9_5 + WQtempx * x_0_9_6;
    QUICKDouble x_0_21_0 = Qtempx * x_0_14_0 + WQtempx * x_0_14_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_21_1 = Qtempx * x_0_14_1 + WQtempx * x_0_14_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_21_2 = Qtempx * x_0_14_2 + WQtempx * x_0_14_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_0_21_3 = Qtempx * x_0_14_3 + WQtempx * x_0_14_4 + CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_21_4 = Qtempx * x_0_14_4 + WQtempx * x_0_14_5 + CDtemp * (x_0_9_4 - ABcom * x_0_9_5);
    QUICKDouble x_0_44_0 = Qtempx * x_0_21_0 + WQtempx * x_0_21_1 + 2.000000 * CDtemp * (x_0_14_0 - ABcom * x_0_14_1);
    QUICKDouble x_0_44_1 = Qtempx * x_0_21_1 + WQtempx * x_0_21_2 + 2.000000 * CDtemp * (x_0_14_1 - ABcom * x_0_14_2);
    QUICKDouble x_0_44_2 = Qtempx * x_0_21_2 + WQtempx * x_0_21_3 + 2.000000 * CDtemp * (x_0_14_2 - ABcom * x_0_14_3);
    QUICKDouble x_0_44_3 = Qtempx * x_0_21_3 + WQtempx * x_0_21_4 + 2.000000 * CDtemp * (x_0_14_3 - ABcom * x_0_14_4);
    QUICKDouble x_0_75_0 = Qtempx * x_0_44_0 + WQtempx * x_0_44_1 + 3.000000 * CDtemp * (x_0_21_0 - ABcom * x_0_21_1);
    QUICKDouble x_0_75_1 = Qtempx * x_0_44_1 + WQtempx * x_0_44_2 + 3.000000 * CDtemp * (x_0_21_1 - ABcom * x_0_21_2);
    QUICKDouble x_0_75_2 = Qtempx * x_0_44_2 + WQtempx * x_0_44_3 + 3.000000 * CDtemp * (x_0_21_2 - ABcom * x_0_21_3);
    QUICKDouble x_2_75_0 = Ptempy * x_0_75_0 + WPtempy * x_0_75_1;
    QUICKDouble x_2_75_1 = Ptempy * x_0_75_1 + WPtempy * x_0_75_2;
    LOCSTORE(store, 8, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_75_0 + WPtempy * x_2_75_1 + ABtemp * (x_0_75_0 - CDcom * x_0_75_1);
    QUICKDouble x_3_75_0 = Ptempz * x_0_75_0 + WPtempz * x_0_75_1 + 2.000000 * ABCDtemp * x_0_50_1;
    QUICKDouble x_3_75_1 = Ptempz * x_0_75_1 + WPtempz * x_0_75_2 + 2.000000 * ABCDtemp * x_0_50_2;
    LOCSTORE(store, 5, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_75_0 + WPtempy * x_3_75_1;
    QUICKDouble x_0_51_0 = Qtempx * x_0_33_0 + WQtempx * x_0_33_1;
    QUICKDouble x_0_51_1 = Qtempx * x_0_33_1 + WQtempx * x_0_33_2;
    QUICKDouble x_0_51_2 = Qtempx * x_0_33_2 + WQtempx * x_0_33_3;
    QUICKDouble x_0_51_3 = Qtempx * x_0_33_3 + WQtempx * x_0_33_4;
    QUICKDouble x_0_76_0 = Qtempx * x_0_51_0 + WQtempx * x_0_51_1 + CDtemp * (x_0_33_0 - ABcom * x_0_33_1);
    QUICKDouble x_0_76_1 = Qtempx * x_0_51_1 + WQtempx * x_0_51_2 + CDtemp * (x_0_33_1 - ABcom * x_0_33_2);
    QUICKDouble x_0_76_2 = Qtempx * x_0_51_2 + WQtempx * x_0_51_3 + CDtemp * (x_0_33_2 - ABcom * x_0_33_3);
    QUICKDouble x_3_76_0 = Ptempz * x_0_76_0 + WPtempz * x_0_76_1;
    QUICKDouble x_3_76_1 = Ptempz * x_0_76_1 + WPtempz * x_0_76_2;
    LOCSTORE(store, 9, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_76_0 + WPtempz * x_3_76_1 + ABtemp * (x_0_76_0 - CDcom * x_0_76_1);
    QUICKDouble x_0_12_0 = Qtempx * x_0_8_0 + WQtempx * x_0_8_1;
    QUICKDouble x_0_12_1 = Qtempx * x_0_8_1 + WQtempx * x_0_8_2;
    QUICKDouble x_0_12_2 = Qtempx * x_0_8_2 + WQtempx * x_0_8_3;
    QUICKDouble x_0_12_3 = Qtempx * x_0_8_3 + WQtempx * x_0_8_4;
    QUICKDouble x_0_12_4 = Qtempx * x_0_8_4 + WQtempx * x_0_8_5;
    QUICKDouble x_0_12_5 = Qtempx * x_0_8_5 + WQtempx * x_0_8_6;
    QUICKDouble x_0_20_0 = Qtempx * x_0_12_0 + WQtempx * x_0_12_1 + CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_20_1 = Qtempx * x_0_12_1 + WQtempx * x_0_12_2 + CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_20_2 = Qtempx * x_0_12_2 + WQtempx * x_0_12_3 + CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_0_20_3 = Qtempx * x_0_12_3 + WQtempx * x_0_12_4 + CDtemp * (x_0_8_3 - ABcom * x_0_8_4);
    QUICKDouble x_0_20_4 = Qtempx * x_0_12_4 + WQtempx * x_0_12_5 + CDtemp * (x_0_8_4 - ABcom * x_0_8_5);
    QUICKDouble x_0_46_0 = Qtempx * x_0_20_0 + WQtempx * x_0_20_1 + 2.000000 * CDtemp * (x_0_12_0 - ABcom * x_0_12_1);
    QUICKDouble x_0_46_1 = Qtempx * x_0_20_1 + WQtempx * x_0_20_2 + 2.000000 * CDtemp * (x_0_12_1 - ABcom * x_0_12_2);
    QUICKDouble x_0_46_2 = Qtempx * x_0_20_2 + WQtempx * x_0_20_3 + 2.000000 * CDtemp * (x_0_12_2 - ABcom * x_0_12_3);
    QUICKDouble x_0_46_3 = Qtempx * x_0_20_3 + WQtempx * x_0_20_4 + 2.000000 * CDtemp * (x_0_12_3 - ABcom * x_0_12_4);
    QUICKDouble x_0_77_0 = Qtempx * x_0_46_0 + WQtempx * x_0_46_1 + 3.000000 * CDtemp * (x_0_20_0 - ABcom * x_0_20_1);
    QUICKDouble x_0_77_1 = Qtempx * x_0_46_1 + WQtempx * x_0_46_2 + 3.000000 * CDtemp * (x_0_20_1 - ABcom * x_0_20_2);
    QUICKDouble x_0_77_2 = Qtempx * x_0_46_2 + WQtempx * x_0_46_3 + 3.000000 * CDtemp * (x_0_20_2 - ABcom * x_0_20_3);
    QUICKDouble x_3_77_0 = Ptempz * x_0_77_0 + WPtempz * x_0_77_1;
    QUICKDouble x_3_77_1 = Ptempz * x_0_77_1 + WPtempz * x_0_77_2;
    LOCSTORE(store, 9, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_77_0 + WPtempz * x_3_77_1 + ABtemp * (x_0_77_0 - CDcom * x_0_77_1);
    QUICKDouble x_0_31_0 = Qtempy * x_0_19_0 + WQtempy * x_0_19_1;
    QUICKDouble x_0_31_4 = Qtempy * x_0_19_4 + WQtempy * x_0_19_5;
    QUICKDouble x_0_41_0 = Qtempy * x_0_31_0 + WQtempy * x_0_31_1 + CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_41_3 = Qtempy * x_0_31_3 + WQtempy * x_0_31_4 + CDtemp * (x_0_19_3 - ABcom * x_0_19_4);
    QUICKDouble x_0_78_0 = Qtempy * x_0_41_0 + WQtempy * x_0_41_1 + 2.000000 * CDtemp * (x_0_31_0 - ABcom * x_0_31_1);
    QUICKDouble x_0_78_1 = Qtempy * x_0_41_1 + WQtempy * x_0_41_2 + 2.000000 * CDtemp * (x_0_31_1 - ABcom * x_0_31_2);
    QUICKDouble x_0_78_2 = Qtempy * x_0_41_2 + WQtempy * x_0_41_3 + 2.000000 * CDtemp * (x_0_31_2 - ABcom * x_0_31_3);
    QUICKDouble x_1_78_0 = Ptempx * x_0_78_0 + WPtempx * x_0_78_1;
    QUICKDouble x_1_78_1 = Ptempx * x_0_78_1 + WPtempx * x_0_78_2;
    LOCSTORE(store, 7, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_78_0 + WPtempx * x_1_78_1 + ABtemp * (x_0_78_0 - CDcom * x_0_78_1);
    QUICKDouble x_2_78_0 = Ptempy * x_0_78_0 + WPtempy * x_0_78_1 + 3.000000 * ABCDtemp * x_0_41_1;
    QUICKDouble x_2_78_1 = Ptempy * x_0_78_1 + WPtempy * x_0_78_2 + 3.000000 * ABCDtemp * x_0_41_2;
    LOCSTORE(store, 4, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_78_0 + WPtempx * x_2_78_1;
    QUICKDouble x_3_78_0 = Ptempz * x_0_78_0 + WPtempz * x_0_78_1 + 3.000000 * ABCDtemp * x_0_42_1;
    QUICKDouble x_3_78_1 = Ptempz * x_0_78_1 + WPtempz * x_0_78_2 + 3.000000 * ABCDtemp * x_0_42_2;
    LOCSTORE(store, 6, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_78_0 + WPtempx * x_3_78_1;
    QUICKDouble x_0_27_0 = Qtempx * x_0_19_0 + WQtempx * x_0_19_1;
    QUICKDouble x_0_27_4 = Qtempx * x_0_19_4 + WQtempx * x_0_19_5;
    QUICKDouble x_0_43_0 = Qtempx * x_0_27_0 + WQtempx * x_0_27_1 + CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_43_3 = Qtempx * x_0_27_3 + WQtempx * x_0_27_4 + CDtemp * (x_0_19_3 - ABcom * x_0_19_4);
    QUICKDouble x_0_79_0 = Qtempx * x_0_43_0 + WQtempx * x_0_43_1 + 2.000000 * CDtemp * (x_0_27_0 - ABcom * x_0_27_1);
    QUICKDouble x_0_79_1 = Qtempx * x_0_43_1 + WQtempx * x_0_43_2 + 2.000000 * CDtemp * (x_0_27_1 - ABcom * x_0_27_2);
    QUICKDouble x_0_79_2 = Qtempx * x_0_43_2 + WQtempx * x_0_43_3 + 2.000000 * CDtemp * (x_0_27_2 - ABcom * x_0_27_3);
    QUICKDouble x_2_79_0 = Ptempy * x_0_79_0 + WPtempy * x_0_79_1;
    QUICKDouble x_2_79_1 = Ptempy * x_0_79_1 + WPtempy * x_0_79_2;
    LOCSTORE(store, 8, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_79_0 + WPtempy * x_2_79_1 + ABtemp * (x_0_79_0 - CDcom * x_0_79_1);
    QUICKDouble x_3_79_0 = Ptempz * x_0_79_0 + WPtempz * x_0_79_1 + 3.000000 * ABCDtemp * x_0_44_1;
    QUICKDouble x_3_79_1 = Ptempz * x_0_79_1 + WPtempz * x_0_79_2 + 3.000000 * ABCDtemp * x_0_44_2;
    LOCSTORE(store, 5, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_79_0 + WPtempy * x_3_79_1;
    QUICKDouble x_0_29_0 = Qtempx * x_0_18_0 + WQtempx * x_0_18_1;
    QUICKDouble x_0_29_1 = Qtempx * x_0_18_1 + WQtempx * x_0_18_2;
    QUICKDouble x_0_29_2 = Qtempx * x_0_18_2 + WQtempx * x_0_18_3;
    QUICKDouble x_0_29_3 = Qtempx * x_0_18_3 + WQtempx * x_0_18_4;
    QUICKDouble x_0_29_4 = Qtempx * x_0_18_4 + WQtempx * x_0_18_5;
    QUICKDouble x_0_45_0 = Qtempx * x_0_29_0 + WQtempx * x_0_29_1 + CDtemp * (x_0_18_0 - ABcom * x_0_18_1);
    QUICKDouble x_0_45_1 = Qtempx * x_0_29_1 + WQtempx * x_0_29_2 + CDtemp * (x_0_18_1 - ABcom * x_0_18_2);
    QUICKDouble x_0_45_2 = Qtempx * x_0_29_2 + WQtempx * x_0_29_3 + CDtemp * (x_0_18_2 - ABcom * x_0_18_3);
    QUICKDouble x_0_45_3 = Qtempx * x_0_29_3 + WQtempx * x_0_29_4 + CDtemp * (x_0_18_3 - ABcom * x_0_18_4);
    QUICKDouble x_0_80_0 = Qtempx * x_0_45_0 + WQtempx * x_0_45_1 + 2.000000 * CDtemp * (x_0_29_0 - ABcom * x_0_29_1);
    QUICKDouble x_0_80_1 = Qtempx * x_0_45_1 + WQtempx * x_0_45_2 + 2.000000 * CDtemp * (x_0_29_1 - ABcom * x_0_29_2);
    QUICKDouble x_0_80_2 = Qtempx * x_0_45_2 + WQtempx * x_0_45_3 + 2.000000 * CDtemp * (x_0_29_2 - ABcom * x_0_29_3);
    QUICKDouble x_3_80_0 = Ptempz * x_0_80_0 + WPtempz * x_0_80_1;
    QUICKDouble x_3_80_1 = Ptempz * x_0_80_1 + WPtempz * x_0_80_2;
    LOCSTORE(store, 9, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_80_0 + WPtempz * x_3_80_1 + ABtemp * (x_0_80_0 - CDcom * x_0_80_1);
    QUICKDouble x_0_1_0 = Qtempx * VY_0 + WQtempx * VY_1;
    QUICKDouble x_0_1_7 = Qtempx * VY_7 + WQtempx * VY_8;
    QUICKDouble x_0_7_0 = Qtempx * x_0_1_0 + WQtempx * x_0_1_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_7_6 = Qtempx * x_0_1_6 + WQtempx * x_0_1_7 + CDtemp * (VY_6 - ABcom * VY_7);
    QUICKDouble x_0_17_0 = Qtempx * x_0_7_0 + WQtempx * x_0_7_1 + 2.000000 * CDtemp * (x_0_1_0 - ABcom * x_0_1_1);
    QUICKDouble x_0_17_5 = Qtempx * x_0_7_5 + WQtempx * x_0_7_6 + 2.000000 * CDtemp * (x_0_1_5 - ABcom * x_0_1_6);
    QUICKDouble x_0_32_0 = Qtempx * x_0_17_0 + WQtempx * x_0_17_1 + 3.000000 * CDtemp * (x_0_7_0 - ABcom * x_0_7_1);
    QUICKDouble x_0_32_4 = Qtempx * x_0_17_4 + WQtempx * x_0_17_5 + 3.000000 * CDtemp * (x_0_7_4 - ABcom * x_0_7_5);
    QUICKDouble x_0_53_0 = Qtempx * x_0_32_0 + WQtempx * x_0_32_1 + 4.000000 * CDtemp * (x_0_17_0 - ABcom * x_0_17_1);
    QUICKDouble x_0_53_3 = Qtempx * x_0_32_3 + WQtempx * x_0_32_4 + 4.000000 * CDtemp * (x_0_17_3 - ABcom * x_0_17_4);
    QUICKDouble x_0_81_0 = Qtempx * x_0_53_0 + WQtempx * x_0_53_1 + 5.000000 * CDtemp * (x_0_32_0 - ABcom * x_0_32_1);
    QUICKDouble x_0_81_1 = Qtempx * x_0_53_1 + WQtempx * x_0_53_2 + 5.000000 * CDtemp * (x_0_32_1 - ABcom * x_0_32_2);
    QUICKDouble x_0_81_2 = Qtempx * x_0_53_2 + WQtempx * x_0_53_3 + 5.000000 * CDtemp * (x_0_32_2 - ABcom * x_0_32_3);
    QUICKDouble x_2_81_0 = Ptempy * x_0_81_0 + WPtempy * x_0_81_1;
    QUICKDouble x_2_81_1 = Ptempy * x_0_81_1 + WPtempy * x_0_81_2;
    LOCSTORE(store, 8, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_81_0 + WPtempy * x_2_81_1 + ABtemp * (x_0_81_0 - CDcom * x_0_81_1);
    QUICKDouble x_3_81_0 = Ptempz * x_0_81_0 + WPtempz * x_0_81_1;
    QUICKDouble x_3_81_1 = Ptempz * x_0_81_1 + WPtempz * x_0_81_2;
    LOCSTORE(store, 9, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_81_0 + WPtempz * x_3_81_1 + ABtemp * (x_0_81_0 - CDcom * x_0_81_1);
    LOCSTORE(store, 5, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_81_0 + WPtempy * x_3_81_1;
    QUICKDouble x_0_82_0 = Qtempy * x_0_54_0 + WQtempy * x_0_54_1 + 5.000000 * CDtemp * (x_0_33_0 - ABcom * x_0_33_1);
    QUICKDouble x_0_82_1 = Qtempy * x_0_54_1 + WQtempy * x_0_54_2 + 5.000000 * CDtemp * (x_0_33_1 - ABcom * x_0_33_2);
    QUICKDouble x_0_82_2 = Qtempy * x_0_54_2 + WQtempy * x_0_54_3 + 5.000000 * CDtemp * (x_0_33_2 - ABcom * x_0_33_3);
    QUICKDouble x_1_82_0 = Ptempx * x_0_82_0 + WPtempx * x_0_82_1;
    QUICKDouble x_1_82_1 = Ptempx * x_0_82_1 + WPtempx * x_0_82_2;
    LOCSTORE(store, 7, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_82_0 + WPtempx * x_1_82_1 + ABtemp * (x_0_82_0 - CDcom * x_0_82_1);
    QUICKDouble x_2_82_0 = Ptempy * x_0_82_0 + WPtempy * x_0_82_1 + 6.000000 * ABCDtemp * x_0_54_1;
    QUICKDouble x_2_82_1 = Ptempy * x_0_82_1 + WPtempy * x_0_82_2 + 6.000000 * ABCDtemp * x_0_54_2;
    LOCSTORE(store, 4, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_82_0 + WPtempx * x_2_82_1;
    QUICKDouble x_3_82_0 = Ptempz * x_0_82_0 + WPtempz * x_0_82_1;
    QUICKDouble x_3_82_1 = Ptempz * x_0_82_1 + WPtempz * x_0_82_2;
    LOCSTORE(store, 9, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_82_0 + WPtempz * x_3_82_1 + ABtemp * (x_0_82_0 - CDcom * x_0_82_1);
    LOCSTORE(store, 6, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_82_0 + WPtempx * x_3_82_1;
    QUICKDouble x_0_83_0 = Qtempz * x_0_55_0 + WQtempz * x_0_55_1 + 5.000000 * CDtemp * (x_0_34_0 - ABcom * x_0_34_1);
    QUICKDouble x_0_83_1 = Qtempz * x_0_55_1 + WQtempz * x_0_55_2 + 5.000000 * CDtemp * (x_0_34_1 - ABcom * x_0_34_2);
    QUICKDouble x_0_83_2 = Qtempz * x_0_55_2 + WQtempz * x_0_55_3 + 5.000000 * CDtemp * (x_0_34_2 - ABcom * x_0_34_3);
    QUICKDouble x_1_83_0 = Ptempx * x_0_83_0 + WPtempx * x_0_83_1;
    QUICKDouble x_1_83_1 = Ptempx * x_0_83_1 + WPtempx * x_0_83_2;
    LOCSTORE(store, 7, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_83_0 + WPtempx * x_1_83_1 + ABtemp * (x_0_83_0 - CDcom * x_0_83_1);
    QUICKDouble x_2_83_0 = Ptempy * x_0_83_0 + WPtempy * x_0_83_1;
    QUICKDouble x_2_83_1 = Ptempy * x_0_83_1 + WPtempy * x_0_83_2;
    LOCSTORE(store, 8, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_83_0 + WPtempy * x_2_83_1 + ABtemp * (x_0_83_0 - CDcom * x_0_83_1);
    LOCSTORE(store, 4, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_83_0 + WPtempx * x_2_83_1;
    QUICKDouble x_3_83_0 = Ptempz * x_0_83_0 + WPtempz * x_0_83_1 + 6.000000 * ABCDtemp * x_0_55_1;
    QUICKDouble x_3_83_1 = Ptempz * x_0_83_1 + WPtempz * x_0_83_2 + 6.000000 * ABCDtemp * x_0_55_2;
    LOCSTORE(store, 6, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_83_0 + WPtempx * x_3_83_1;
    LOCSTORE(store, 5, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_83_0 + WPtempy * x_3_83_1;
    QUICKDouble x_0_35_0 = Qtempx * x_0_22_0 + WQtempx * x_0_22_1;
    QUICKDouble x_0_35_1 = Qtempx * x_0_22_1 + WQtempx * x_0_22_2;
    QUICKDouble x_0_35_2 = Qtempx * x_0_22_2 + WQtempx * x_0_22_3;
    QUICKDouble x_0_35_3 = Qtempx * x_0_22_3 + WQtempx * x_0_22_4;
    QUICKDouble x_0_65_0 = Qtempx * x_0_35_0 + WQtempx * x_0_35_1 + CDtemp * (x_0_22_0 - ABcom * x_0_22_1);
    QUICKDouble x_0_65_1 = Qtempx * x_0_35_1 + WQtempx * x_0_35_2 + CDtemp * (x_0_22_1 - ABcom * x_0_22_2);
    QUICKDouble x_0_65_2 = Qtempx * x_0_35_2 + WQtempx * x_0_35_3 + CDtemp * (x_0_22_2 - ABcom * x_0_22_3);
    QUICKDouble x_1_65_0 = Ptempx * x_0_65_0 + WPtempx * x_0_65_1 + 2.000000 * ABCDtemp * x_0_35_1;
    QUICKDouble x_1_65_1 = Ptempx * x_0_65_1 + WPtempx * x_0_65_2 + 2.000000 * ABCDtemp * x_0_35_2;
    QUICKDouble x_1_35_1 = Ptempx * x_0_35_1 + WPtempx * x_0_35_2 + ABCDtemp * x_0_22_2;
    LOCSTORE(store, 7, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_65_0 + WPtempx * x_1_65_1 + ABtemp * (x_0_65_0 - CDcom * x_0_65_1) + 2.000000 * ABCDtemp * x_1_35_1;
    QUICKDouble x_0_25_1 = Qtempx * x_0_16_1 + WQtempx * x_0_16_2;
    QUICKDouble x_0_25_2 = Qtempx * x_0_16_2 + WQtempx * x_0_16_3;
    QUICKDouble x_0_25_3 = Qtempx * x_0_16_3 + WQtempx * x_0_16_4;
    QUICKDouble x_0_36_1 = Qtempx * x_0_25_1 + WQtempx * x_0_25_2 + CDtemp * (x_0_16_1 - ABcom * x_0_16_2);
    QUICKDouble x_0_36_2 = Qtempx * x_0_25_2 + WQtempx * x_0_25_3 + CDtemp * (x_0_16_2 - ABcom * x_0_16_3);
    QUICKDouble x_2_65_0 = Ptempy * x_0_65_0 + WPtempy * x_0_65_1 + 2.000000 * ABCDtemp * x_0_36_1;
    QUICKDouble x_2_65_1 = Ptempy * x_0_65_1 + WPtempy * x_0_65_2 + 2.000000 * ABCDtemp * x_0_36_2;
    QUICKDouble x_2_35_1 = Ptempy * x_0_35_1 + WPtempy * x_0_35_2 + 2.000000 * ABCDtemp * x_0_25_2;
    LOCSTORE(store, 4, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_65_0 + WPtempx * x_2_65_1 + 2.000000 * ABCDtemp * x_2_35_1;
    QUICKDouble x_0_60_0 = Qtempx * x_0_42_0 + WQtempx * x_0_42_1;
    QUICKDouble x_0_60_1 = Qtempx * x_0_42_1 + WQtempx * x_0_42_2;
    QUICKDouble x_0_60_2 = Qtempx * x_0_42_2 + WQtempx * x_0_42_3;
    QUICKDouble x_2_60_0 = Ptempy * x_0_60_0 + WPtempy * x_0_60_1 + 3.000000 * ABCDtemp * x_0_35_1;
    QUICKDouble x_2_60_1 = Ptempy * x_0_60_1 + WPtempy * x_0_60_2 + 3.000000 * ABCDtemp * x_0_35_2;
    LOCSTORE(store, 8, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_60_0 + WPtempy * x_2_60_1 + ABtemp * (x_0_60_0 - CDcom * x_0_60_1) + 3.000000 * ABCDtemp * x_2_35_1;
    QUICKDouble x_0_24_1 = Qtempx * x_0_15_1 + WQtempx * x_0_15_2;
    QUICKDouble x_0_24_2 = Qtempx * x_0_15_2 + WQtempx * x_0_15_3;
    QUICKDouble x_0_24_3 = Qtempx * x_0_15_3 + WQtempx * x_0_15_4;
    QUICKDouble x_0_37_1 = Qtempx * x_0_24_1 + WQtempx * x_0_24_2 + CDtemp * (x_0_15_1 - ABcom * x_0_15_2);
    QUICKDouble x_0_37_2 = Qtempx * x_0_24_2 + WQtempx * x_0_24_3 + CDtemp * (x_0_15_2 - ABcom * x_0_15_3);
    QUICKDouble x_3_65_0 = Ptempz * x_0_65_0 + WPtempz * x_0_65_1 + 2.000000 * ABCDtemp * x_0_37_1;
    QUICKDouble x_3_65_1 = Ptempz * x_0_65_1 + WPtempz * x_0_65_2 + 2.000000 * ABCDtemp * x_0_37_2;
    QUICKDouble x_3_35_1 = Ptempz * x_0_35_1 + WPtempz * x_0_35_2 + 2.000000 * ABCDtemp * x_0_24_2;
    LOCSTORE(store, 6, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_65_0 + WPtempx * x_3_65_1 + 2.000000 * ABCDtemp * x_3_35_1;
    QUICKDouble x_0_39_1 = Qtempx * x_0_30_1 + WQtempx * x_0_30_2;
    QUICKDouble x_0_39_2 = Qtempx * x_0_30_2 + WQtempx * x_0_30_3;
    QUICKDouble x_3_60_0 = Ptempz * x_0_60_0 + WPtempz * x_0_60_1 + 2.000000 * ABCDtemp * x_0_39_1;
    QUICKDouble x_3_60_1 = Ptempz * x_0_60_1 + WPtempz * x_0_60_2 + 2.000000 * ABCDtemp * x_0_39_2;
    LOCSTORE(store, 5, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_60_0 + WPtempy * x_3_60_1 + 3.000000 * ABCDtemp * x_3_35_1;
    QUICKDouble x_0_59_0 = Qtempx * x_0_41_0 + WQtempx * x_0_41_1;
    QUICKDouble x_0_59_1 = Qtempx * x_0_41_1 + WQtempx * x_0_41_2;
    QUICKDouble x_0_59_2 = Qtempx * x_0_41_2 + WQtempx * x_0_41_3;
    QUICKDouble x_3_59_0 = Ptempz * x_0_59_0 + WPtempz * x_0_59_1 + 3.000000 * ABCDtemp * x_0_35_1;
    QUICKDouble x_3_59_1 = Ptempz * x_0_59_1 + WPtempz * x_0_59_2 + 3.000000 * ABCDtemp * x_0_35_2;
    LOCSTORE(store, 9, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_59_0 + WPtempz * x_3_59_1 + ABtemp * (x_0_59_0 - CDcom * x_0_59_1) + 3.000000 * ABCDtemp * x_3_35_1;
    QUICKDouble x_0_25_0 = Qtempx * x_0_16_0 + WQtempx * x_0_16_1;
    QUICKDouble x_0_25_4 = Qtempx * x_0_16_4 + WQtempx * x_0_16_5;
    QUICKDouble x_0_36_0 = Qtempx * x_0_25_0 + WQtempx * x_0_25_1 + CDtemp * (x_0_16_0 - ABcom * x_0_16_1);
    QUICKDouble x_0_36_3 = Qtempx * x_0_25_3 + WQtempx * x_0_25_4 + CDtemp * (x_0_16_3 - ABcom * x_0_16_4);
    QUICKDouble x_0_62_0 = Qtempx * x_0_36_0 + WQtempx * x_0_36_1 + 2.000000 * CDtemp * (x_0_25_0 - ABcom * x_0_25_1);
    QUICKDouble x_0_62_1 = Qtempx * x_0_36_1 + WQtempx * x_0_36_2 + 2.000000 * CDtemp * (x_0_25_1 - ABcom * x_0_25_2);
    QUICKDouble x_0_62_2 = Qtempx * x_0_36_2 + WQtempx * x_0_36_3 + 2.000000 * CDtemp * (x_0_25_2 - ABcom * x_0_25_3);
    QUICKDouble x_1_62_0 = Ptempx * x_0_62_0 + WPtempx * x_0_62_1 + 3.000000 * ABCDtemp * x_0_36_1;
    QUICKDouble x_1_62_1 = Ptempx * x_0_62_1 + WPtempx * x_0_62_2 + 3.000000 * ABCDtemp * x_0_36_2;
    QUICKDouble x_1_36_1 = Ptempx * x_0_36_1 + WPtempx * x_0_36_2 + 2.000000 * ABCDtemp * x_0_25_2;
    LOCSTORE(store, 7, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_62_0 + WPtempx * x_1_62_1 + ABtemp * (x_0_62_0 - CDcom * x_0_62_1) + 3.000000 * ABCDtemp * x_1_36_1;
    QUICKDouble x_2_36_1 = Ptempy * x_0_36_1 + WPtempy * x_0_36_2 + ABCDtemp * x_0_21_2;
    LOCSTORE(store, 8, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_65_0 + WPtempy * x_2_65_1 + ABtemp * (x_0_65_0 - CDcom * x_0_65_1) + 2.000000 * ABCDtemp * x_2_36_1;
    QUICKDouble x_2_62_0 = Ptempy * x_0_62_0 + WPtempy * x_0_62_1 + ABCDtemp * x_0_44_1;
    QUICKDouble x_2_62_1 = Ptempy * x_0_62_1 + WPtempy * x_0_62_2 + ABCDtemp * x_0_44_2;
    LOCSTORE(store, 4, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_62_0 + WPtempx * x_2_62_1 + 3.000000 * ABCDtemp * x_2_36_1;
    QUICKDouble x_0_10_2 = Qtempx * x_0_5_2 + WQtempx * x_0_5_3;
    QUICKDouble x_0_10_3 = Qtempx * x_0_5_3 + WQtempx * x_0_5_4;
    QUICKDouble x_0_23_2 = Qtempx * x_0_10_2 + WQtempx * x_0_10_3 + CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_3_36_1 = Ptempz * x_0_36_1 + WPtempz * x_0_36_2 + 2.000000 * ABCDtemp * x_0_23_2;
    LOCSTORE(store, 5, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_65_0 + WPtempy * x_3_65_1 + 2.000000 * ABCDtemp * x_3_36_1;
    QUICKDouble x_0_10_1 = Qtempx * x_0_5_1 + WQtempx * x_0_5_2;
    QUICKDouble x_0_10_4 = Qtempx * x_0_5_4 + WQtempx * x_0_5_5;
    QUICKDouble x_0_23_1 = Qtempx * x_0_10_1 + WQtempx * x_0_10_2 + CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_23_3 = Qtempx * x_0_10_3 + WQtempx * x_0_10_4 + CDtemp * (x_0_5_3 - ABcom * x_0_5_4);
    QUICKDouble x_0_38_1 = Qtempx * x_0_23_1 + WQtempx * x_0_23_2 + 2.000000 * CDtemp * (x_0_10_1 - ABcom * x_0_10_2);
    QUICKDouble x_0_38_2 = Qtempx * x_0_23_2 + WQtempx * x_0_23_3 + 2.000000 * CDtemp * (x_0_10_2 - ABcom * x_0_10_3);
    QUICKDouble x_3_62_0 = Ptempz * x_0_62_0 + WPtempz * x_0_62_1 + 2.000000 * ABCDtemp * x_0_38_1;
    QUICKDouble x_3_62_1 = Ptempz * x_0_62_1 + WPtempz * x_0_62_2 + 2.000000 * ABCDtemp * x_0_38_2;
    LOCSTORE(store, 6, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_62_0 + WPtempx * x_3_62_1 + 3.000000 * ABCDtemp * x_3_36_1;
    QUICKDouble x_0_40_0 = Qtempx * x_0_31_0 + WQtempx * x_0_31_1;
    QUICKDouble x_0_40_1 = Qtempx * x_0_31_1 + WQtempx * x_0_31_2;
    QUICKDouble x_0_40_2 = Qtempx * x_0_31_2 + WQtempx * x_0_31_3;
    QUICKDouble x_0_40_3 = Qtempx * x_0_31_3 + WQtempx * x_0_31_4;
    QUICKDouble x_0_61_0 = Qtempx * x_0_40_0 + WQtempx * x_0_40_1 + CDtemp * (x_0_31_0 - ABcom * x_0_31_1);
    QUICKDouble x_0_61_1 = Qtempx * x_0_40_1 + WQtempx * x_0_40_2 + CDtemp * (x_0_31_1 - ABcom * x_0_31_2);
    QUICKDouble x_0_61_2 = Qtempx * x_0_40_2 + WQtempx * x_0_40_3 + CDtemp * (x_0_31_2 - ABcom * x_0_31_3);
    QUICKDouble x_3_61_0 = Ptempz * x_0_61_0 + WPtempz * x_0_61_1 + 3.000000 * ABCDtemp * x_0_36_1;
    QUICKDouble x_3_61_1 = Ptempz * x_0_61_1 + WPtempz * x_0_61_2 + 3.000000 * ABCDtemp * x_0_36_2;
    LOCSTORE(store, 9, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_61_0 + WPtempz * x_3_61_1 + ABtemp * (x_0_61_0 - CDcom * x_0_61_1) + 3.000000 * ABCDtemp * x_3_36_1;
    QUICKDouble x_0_24_0 = Qtempx * x_0_15_0 + WQtempx * x_0_15_1;
    QUICKDouble x_0_24_4 = Qtempx * x_0_15_4 + WQtempx * x_0_15_5;
    QUICKDouble x_0_37_0 = Qtempx * x_0_24_0 + WQtempx * x_0_24_1 + CDtemp * (x_0_15_0 - ABcom * x_0_15_1);
    QUICKDouble x_0_37_3 = Qtempx * x_0_24_3 + WQtempx * x_0_24_4 + CDtemp * (x_0_15_3 - ABcom * x_0_15_4);
    QUICKDouble x_0_64_0 = Qtempx * x_0_37_0 + WQtempx * x_0_37_1 + 2.000000 * CDtemp * (x_0_24_0 - ABcom * x_0_24_1);
    QUICKDouble x_0_64_1 = Qtempx * x_0_37_1 + WQtempx * x_0_37_2 + 2.000000 * CDtemp * (x_0_24_1 - ABcom * x_0_24_2);
    QUICKDouble x_0_64_2 = Qtempx * x_0_37_2 + WQtempx * x_0_37_3 + 2.000000 * CDtemp * (x_0_24_2 - ABcom * x_0_24_3);
    QUICKDouble x_1_64_0 = Ptempx * x_0_64_0 + WPtempx * x_0_64_1 + 3.000000 * ABCDtemp * x_0_37_1;
    QUICKDouble x_1_64_1 = Ptempx * x_0_64_1 + WPtempx * x_0_64_2 + 3.000000 * ABCDtemp * x_0_37_2;
    QUICKDouble x_1_37_1 = Ptempx * x_0_37_1 + WPtempx * x_0_37_2 + 2.000000 * ABCDtemp * x_0_24_2;
    LOCSTORE(store, 7, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_64_0 + WPtempx * x_1_64_1 + ABtemp * (x_0_64_0 - CDcom * x_0_64_1) + 3.000000 * ABCDtemp * x_1_37_1;
    QUICKDouble x_2_64_0 = Ptempy * x_0_64_0 + WPtempy * x_0_64_1 + 2.000000 * ABCDtemp * x_0_38_1;
    QUICKDouble x_2_64_1 = Ptempy * x_0_64_1 + WPtempy * x_0_64_2 + 2.000000 * ABCDtemp * x_0_38_2;
    QUICKDouble x_2_37_1 = Ptempy * x_0_37_1 + WPtempy * x_0_37_2 + 2.000000 * ABCDtemp * x_0_23_2;
    LOCSTORE(store, 4, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_64_0 + WPtempx * x_2_64_1 + 3.000000 * ABCDtemp * x_2_37_1;
    QUICKDouble x_0_39_0 = Qtempx * x_0_30_0 + WQtempx * x_0_30_1;
    QUICKDouble x_0_39_3 = Qtempx * x_0_30_3 + WQtempx * x_0_30_4;
    QUICKDouble x_0_63_0 = Qtempx * x_0_39_0 + WQtempx * x_0_39_1 + CDtemp * (x_0_30_0 - ABcom * x_0_30_1);
    QUICKDouble x_0_63_1 = Qtempx * x_0_39_1 + WQtempx * x_0_39_2 + CDtemp * (x_0_30_1 - ABcom * x_0_30_2);
    QUICKDouble x_0_63_2 = Qtempx * x_0_39_2 + WQtempx * x_0_39_3 + CDtemp * (x_0_30_2 - ABcom * x_0_30_3);
    QUICKDouble x_2_63_0 = Ptempy * x_0_63_0 + WPtempy * x_0_63_1 + 3.000000 * ABCDtemp * x_0_37_1;
    QUICKDouble x_2_63_1 = Ptempy * x_0_63_1 + WPtempy * x_0_63_2 + 3.000000 * ABCDtemp * x_0_37_2;
    LOCSTORE(store, 8, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_63_0 + WPtempy * x_2_63_1 + ABtemp * (x_0_63_0 - CDcom * x_0_63_1) + 3.000000 * ABCDtemp * x_2_37_1;
    QUICKDouble x_3_37_1 = Ptempz * x_0_37_1 + WPtempz * x_0_37_2 + ABCDtemp * x_0_20_2;
    LOCSTORE(store, 9, 65, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_65_0 + WPtempz * x_3_65_1 + ABtemp * (x_0_65_0 - CDcom * x_0_65_1) + 2.000000 * ABCDtemp * x_3_37_1;
    QUICKDouble x_3_64_0 = Ptempz * x_0_64_0 + WPtempz * x_0_64_1 + ABCDtemp * x_0_46_1;
    QUICKDouble x_3_64_1 = Ptempz * x_0_64_1 + WPtempz * x_0_64_2 + ABCDtemp * x_0_46_2;
    LOCSTORE(store, 6, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_64_0 + WPtempx * x_3_64_1 + 3.000000 * ABCDtemp * x_3_37_1;
    QUICKDouble x_3_63_0 = Ptempz * x_0_63_0 + WPtempz * x_0_63_1 + ABCDtemp * x_0_45_1;
    QUICKDouble x_3_63_1 = Ptempz * x_0_63_1 + WPtempz * x_0_63_2 + ABCDtemp * x_0_45_2;
    LOCSTORE(store, 5, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_63_0 + WPtempy * x_3_63_1 + 3.000000 * ABCDtemp * x_3_37_1;
    QUICKDouble x_0_10_0 = Qtempx * x_0_5_0 + WQtempx * x_0_5_1;
    QUICKDouble x_0_10_5 = Qtempx * x_0_5_5 + WQtempx * x_0_5_6;
    QUICKDouble x_0_23_0 = Qtempx * x_0_10_0 + WQtempx * x_0_10_1 + CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_23_4 = Qtempx * x_0_10_4 + WQtempx * x_0_10_5 + CDtemp * (x_0_5_4 - ABcom * x_0_5_5);
    QUICKDouble x_0_38_0 = Qtempx * x_0_23_0 + WQtempx * x_0_23_1 + 2.000000 * CDtemp * (x_0_10_0 - ABcom * x_0_10_1);
    QUICKDouble x_0_38_3 = Qtempx * x_0_23_3 + WQtempx * x_0_23_4 + 2.000000 * CDtemp * (x_0_10_3 - ABcom * x_0_10_4);
    QUICKDouble x_0_56_0 = Qtempx * x_0_38_0 + WQtempx * x_0_38_1 + 3.000000 * CDtemp * (x_0_23_0 - ABcom * x_0_23_1);
    QUICKDouble x_0_56_1 = Qtempx * x_0_38_1 + WQtempx * x_0_38_2 + 3.000000 * CDtemp * (x_0_23_1 - ABcom * x_0_23_2);
    QUICKDouble x_0_56_2 = Qtempx * x_0_38_2 + WQtempx * x_0_38_3 + 3.000000 * CDtemp * (x_0_23_2 - ABcom * x_0_23_3);
    QUICKDouble x_1_56_0 = Ptempx * x_0_56_0 + WPtempx * x_0_56_1 + 4.000000 * ABCDtemp * x_0_38_1;
    QUICKDouble x_1_56_1 = Ptempx * x_0_56_1 + WPtempx * x_0_56_2 + 4.000000 * ABCDtemp * x_0_38_2;
    QUICKDouble x_1_38_1 = Ptempx * x_0_38_1 + WPtempx * x_0_38_2 + 3.000000 * ABCDtemp * x_0_23_2;
    LOCSTORE(store, 7, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_56_0 + WPtempx * x_1_56_1 + ABtemp * (x_0_56_0 - CDcom * x_0_56_1) + 4.000000 * ABCDtemp * x_1_38_1;
    QUICKDouble x_2_38_1 = Ptempy * x_0_38_1 + WPtempy * x_0_38_2 + ABCDtemp * x_0_26_2;
    LOCSTORE(store, 8, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_64_0 + WPtempy * x_2_64_1 + ABtemp * (x_0_64_0 - CDcom * x_0_64_1) + 2.000000 * ABCDtemp * x_2_38_1;
    QUICKDouble x_2_56_0 = Ptempy * x_0_56_0 + WPtempy * x_0_56_1 + ABCDtemp * x_0_50_1;
    QUICKDouble x_2_56_1 = Ptempy * x_0_56_1 + WPtempy * x_0_56_2 + ABCDtemp * x_0_50_2;
    LOCSTORE(store, 4, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_56_0 + WPtempx * x_2_56_1 + 4.000000 * ABCDtemp * x_2_38_1;
    QUICKDouble x_3_38_1 = Ptempz * x_0_38_1 + WPtempz * x_0_38_2 + ABCDtemp * x_0_28_2;
    LOCSTORE(store, 5, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_64_0 + WPtempy * x_3_64_1 + 2.000000 * ABCDtemp * x_3_38_1;
    LOCSTORE(store, 9, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_62_0 + WPtempz * x_3_62_1 + ABtemp * (x_0_62_0 - CDcom * x_0_62_1) + 2.000000 * ABCDtemp * x_3_38_1;
    QUICKDouble x_3_56_0 = Ptempz * x_0_56_0 + WPtempz * x_0_56_1 + ABCDtemp * x_0_52_1;
    QUICKDouble x_3_56_1 = Ptempz * x_0_56_1 + WPtempz * x_0_56_2 + ABCDtemp * x_0_52_2;
    LOCSTORE(store, 6, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_56_0 + WPtempx * x_3_56_1 + 4.000000 * ABCDtemp * x_3_38_1;
    QUICKDouble x_1_63_0 = Ptempx * x_0_63_0 + WPtempx * x_0_63_1 + 2.000000 * ABCDtemp * x_0_39_1;
    QUICKDouble x_1_63_1 = Ptempx * x_0_63_1 + WPtempx * x_0_63_2 + 2.000000 * ABCDtemp * x_0_39_2;
    QUICKDouble x_1_39_1 = Ptempx * x_0_39_1 + WPtempx * x_0_39_2 + ABCDtemp * x_0_30_2;
    LOCSTORE(store, 7, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_63_0 + WPtempx * x_1_63_1 + ABtemp * (x_0_63_0 - CDcom * x_0_63_1) + 2.000000 * ABCDtemp * x_1_39_1;
    QUICKDouble x_2_39_1 = Ptempy * x_0_39_1 + WPtempy * x_0_39_2 + 3.000000 * ABCDtemp * x_0_24_2;
    LOCSTORE(store, 4, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_63_0 + WPtempx * x_2_63_1 + 2.000000 * ABCDtemp * x_2_39_1;
    QUICKDouble x_0_57_0 = Qtempx * x_0_48_0 + WQtempx * x_0_48_1;
    QUICKDouble x_0_57_1 = Qtempx * x_0_48_1 + WQtempx * x_0_48_2;
    QUICKDouble x_0_57_2 = Qtempx * x_0_48_2 + WQtempx * x_0_48_3;
    QUICKDouble x_2_57_0 = Ptempy * x_0_57_0 + WPtempy * x_0_57_1 + 4.000000 * ABCDtemp * x_0_39_1;
    QUICKDouble x_2_57_1 = Ptempy * x_0_57_1 + WPtempy * x_0_57_2 + 4.000000 * ABCDtemp * x_0_39_2;
    LOCSTORE(store, 8, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_57_0 + WPtempy * x_2_57_1 + ABtemp * (x_0_57_0 - CDcom * x_0_57_1) + 4.000000 * ABCDtemp * x_2_39_1;
    QUICKDouble x_3_39_1 = Ptempz * x_0_39_1 + WPtempz * x_0_39_2 + ABCDtemp * x_0_29_2;
    LOCSTORE(store, 6, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_63_0 + WPtempx * x_3_63_1 + 2.000000 * ABCDtemp * x_3_39_1;
    LOCSTORE(store, 9, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_60_0 + WPtempz * x_3_60_1 + ABtemp * (x_0_60_0 - CDcom * x_0_60_1) + 2.000000 * ABCDtemp * x_3_39_1;
    QUICKDouble x_3_57_0 = Ptempz * x_0_57_0 + WPtempz * x_0_57_1 + ABCDtemp * x_0_51_1;
    QUICKDouble x_3_57_1 = Ptempz * x_0_57_1 + WPtempz * x_0_57_2 + ABCDtemp * x_0_51_2;
    LOCSTORE(store, 5, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_57_0 + WPtempy * x_3_57_1 + 4.000000 * ABCDtemp * x_3_39_1;
    QUICKDouble x_1_61_0 = Ptempx * x_0_61_0 + WPtempx * x_0_61_1 + 2.000000 * ABCDtemp * x_0_40_1;
    QUICKDouble x_1_61_1 = Ptempx * x_0_61_1 + WPtempx * x_0_61_2 + 2.000000 * ABCDtemp * x_0_40_2;
    QUICKDouble x_1_40_1 = Ptempx * x_0_40_1 + WPtempx * x_0_40_2 + ABCDtemp * x_0_31_2;
    LOCSTORE(store, 7, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_61_0 + WPtempx * x_1_61_1 + ABtemp * (x_0_61_0 - CDcom * x_0_61_1) + 2.000000 * ABCDtemp * x_1_40_1;
    QUICKDouble x_2_61_0 = Ptempy * x_0_61_0 + WPtempy * x_0_61_1 + ABCDtemp * x_0_43_1;
    QUICKDouble x_2_61_1 = Ptempy * x_0_61_1 + WPtempy * x_0_61_2 + ABCDtemp * x_0_43_2;
    QUICKDouble x_2_40_1 = Ptempy * x_0_40_1 + WPtempy * x_0_40_2 + ABCDtemp * x_0_27_2;
    LOCSTORE(store, 4, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_61_0 + WPtempx * x_2_61_1 + 2.000000 * ABCDtemp * x_2_40_1;
    QUICKDouble x_2_59_0 = Ptempy * x_0_59_0 + WPtempy * x_0_59_1 + 2.000000 * ABCDtemp * x_0_40_1;
    QUICKDouble x_2_59_1 = Ptempy * x_0_59_1 + WPtempy * x_0_59_2 + 2.000000 * ABCDtemp * x_0_40_2;
    LOCSTORE(store, 8, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_59_0 + WPtempy * x_2_59_1 + ABtemp * (x_0_59_0 - CDcom * x_0_59_1) + 2.000000 * ABCDtemp * x_2_40_1;
    QUICKDouble x_3_40_1 = Ptempz * x_0_40_1 + WPtempz * x_0_40_2 + 3.000000 * ABCDtemp * x_0_25_2;
    LOCSTORE(store, 6, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_61_0 + WPtempx * x_3_61_1 + 2.000000 * ABCDtemp * x_3_40_1;
    LOCSTORE(store, 5, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_59_0 + WPtempy * x_3_59_1 + 2.000000 * ABCDtemp * x_3_40_1;
    QUICKDouble x_0_58_0 = Qtempx * x_0_47_0 + WQtempx * x_0_47_1;
    QUICKDouble x_0_58_1 = Qtempx * x_0_47_1 + WQtempx * x_0_47_2;
    QUICKDouble x_0_58_2 = Qtempx * x_0_47_2 + WQtempx * x_0_47_3;
    QUICKDouble x_3_58_0 = Ptempz * x_0_58_0 + WPtempz * x_0_58_1 + 4.000000 * ABCDtemp * x_0_40_1;
    QUICKDouble x_3_58_1 = Ptempz * x_0_58_1 + WPtempz * x_0_58_2 + 4.000000 * ABCDtemp * x_0_40_2;
    LOCSTORE(store, 9, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_58_0 + WPtempz * x_3_58_1 + ABtemp * (x_0_58_0 - CDcom * x_0_58_1) + 4.000000 * ABCDtemp * x_3_40_1;
    QUICKDouble x_1_59_0 = Ptempx * x_0_59_0 + WPtempx * x_0_59_1 + ABCDtemp * x_0_41_1;
    QUICKDouble x_1_59_1 = Ptempx * x_0_59_1 + WPtempx * x_0_59_2 + ABCDtemp * x_0_41_2;
    QUICKDouble x_1_41_1 = Ptempx * x_0_41_1 + WPtempx * x_0_41_2;
    LOCSTORE(store, 7, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_59_0 + WPtempx * x_1_59_1 + ABtemp * (x_0_59_0 - CDcom * x_0_59_1) + ABCDtemp * x_1_41_1;
    QUICKDouble x_2_41_1 = Ptempy * x_0_41_1 + WPtempy * x_0_41_2 + 2.000000 * ABCDtemp * x_0_31_2;
    LOCSTORE(store, 8, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_78_0 + WPtempy * x_2_78_1 + ABtemp * (x_0_78_0 - CDcom * x_0_78_1) + 3.000000 * ABCDtemp * x_2_41_1;
    LOCSTORE(store, 4, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_59_0 + WPtempx * x_2_59_1 + ABCDtemp * x_2_41_1;
    QUICKDouble x_3_41_1 = Ptempz * x_0_41_1 + WPtempz * x_0_41_2 + 3.000000 * ABCDtemp * x_0_22_2;
    LOCSTORE(store, 5, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_78_0 + WPtempy * x_3_78_1 + 3.000000 * ABCDtemp * x_3_41_1;
    LOCSTORE(store, 9, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_72_0 + WPtempz * x_3_72_1 + ABtemp * (x_0_72_0 - CDcom * x_0_72_1) + 4.000000 * ABCDtemp * x_3_41_1;
    LOCSTORE(store, 6, 59, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_59_0 + WPtempx * x_3_59_1 + ABCDtemp * x_3_41_1;
    QUICKDouble x_1_60_0 = Ptempx * x_0_60_0 + WPtempx * x_0_60_1 + ABCDtemp * x_0_42_1;
    QUICKDouble x_1_60_1 = Ptempx * x_0_60_1 + WPtempx * x_0_60_2 + ABCDtemp * x_0_42_2;
    QUICKDouble x_1_42_1 = Ptempx * x_0_42_1 + WPtempx * x_0_42_2;
    LOCSTORE(store, 7, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_60_0 + WPtempx * x_1_60_1 + ABtemp * (x_0_60_0 - CDcom * x_0_60_1) + ABCDtemp * x_1_42_1;
    QUICKDouble x_2_42_1 = Ptempy * x_0_42_1 + WPtempy * x_0_42_2 + 3.000000 * ABCDtemp * x_0_22_2;
    LOCSTORE(store, 8, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_73_0 + WPtempy * x_2_73_1 + ABtemp * (x_0_73_0 - CDcom * x_0_73_1) + 4.000000 * ABCDtemp * x_2_42_1;
    LOCSTORE(store, 4, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_60_0 + WPtempx * x_2_60_1 + ABCDtemp * x_2_42_1;
    QUICKDouble x_3_42_1 = Ptempz * x_0_42_1 + WPtempz * x_0_42_2 + 2.000000 * ABCDtemp * x_0_30_2;
    LOCSTORE(store, 9, 78, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_78_0 + WPtempz * x_3_78_1 + ABtemp * (x_0_78_0 - CDcom * x_0_78_1) + 3.000000 * ABCDtemp * x_3_42_1;
    LOCSTORE(store, 5, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_73_0 + WPtempy * x_3_73_1 + 4.000000 * ABCDtemp * x_3_42_1;
    LOCSTORE(store, 6, 60, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_60_0 + WPtempx * x_3_60_1 + ABCDtemp * x_3_42_1;
    QUICKDouble x_1_79_0 = Ptempx * x_0_79_0 + WPtempx * x_0_79_1 + 3.000000 * ABCDtemp * x_0_43_1;
    QUICKDouble x_1_79_1 = Ptempx * x_0_79_1 + WPtempx * x_0_79_2 + 3.000000 * ABCDtemp * x_0_43_2;
    QUICKDouble x_1_43_1 = Ptempx * x_0_43_1 + WPtempx * x_0_43_2 + 2.000000 * ABCDtemp * x_0_27_2;
    LOCSTORE(store, 7, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_79_0 + WPtempx * x_1_79_1 + ABtemp * (x_0_79_0 - CDcom * x_0_79_1) + 3.000000 * ABCDtemp * x_1_43_1;
    QUICKDouble x_2_43_1 = Ptempy * x_0_43_1 + WPtempy * x_0_43_2;
    LOCSTORE(store, 4, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_79_0 + WPtempx * x_2_79_1 + 3.000000 * ABCDtemp * x_2_43_1;
    LOCSTORE(store, 8, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_61_0 + WPtempy * x_2_61_1 + ABtemp * (x_0_61_0 - CDcom * x_0_61_1) + ABCDtemp * x_2_43_1;
    QUICKDouble x_3_43_1 = Ptempz * x_0_43_1 + WPtempz * x_0_43_2 + 3.000000 * ABCDtemp * x_0_21_2;
    LOCSTORE(store, 6, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_79_0 + WPtempx * x_3_79_1 + 3.000000 * ABCDtemp * x_3_43_1;
    LOCSTORE(store, 9, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_74_0 + WPtempz * x_3_74_1 + ABtemp * (x_0_74_0 - CDcom * x_0_74_1) + 4.000000 * ABCDtemp * x_3_43_1;
    LOCSTORE(store, 5, 61, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_61_0 + WPtempy * x_3_61_1 + ABCDtemp * x_3_43_1;
    QUICKDouble x_1_75_0 = Ptempx * x_0_75_0 + WPtempx * x_0_75_1 + 4.000000 * ABCDtemp * x_0_44_1;
    QUICKDouble x_1_75_1 = Ptempx * x_0_75_1 + WPtempx * x_0_75_2 + 4.000000 * ABCDtemp * x_0_44_2;
    QUICKDouble x_1_44_1 = Ptempx * x_0_44_1 + WPtempx * x_0_44_2 + 3.000000 * ABCDtemp * x_0_21_2;
    LOCSTORE(store, 7, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_75_0 + WPtempx * x_1_75_1 + ABtemp * (x_0_75_0 - CDcom * x_0_75_1) + 4.000000 * ABCDtemp * x_1_44_1;
    QUICKDouble x_2_44_1 = Ptempy * x_0_44_1 + WPtempy * x_0_44_2;
    LOCSTORE(store, 4, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_75_0 + WPtempx * x_2_75_1 + 4.000000 * ABCDtemp * x_2_44_1;
    LOCSTORE(store, 8, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_62_0 + WPtempy * x_2_62_1 + ABtemp * (x_0_62_0 - CDcom * x_0_62_1) + ABCDtemp * x_2_44_1;
    QUICKDouble x_3_44_1 = Ptempz * x_0_44_1 + WPtempz * x_0_44_2 + 2.000000 * ABCDtemp * x_0_26_2;
    LOCSTORE(store, 9, 79, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_79_0 + WPtempz * x_3_79_1 + ABtemp * (x_0_79_0 - CDcom * x_0_79_1) + 3.000000 * ABCDtemp * x_3_44_1;
    LOCSTORE(store, 6, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_75_0 + WPtempx * x_3_75_1 + 4.000000 * ABCDtemp * x_3_44_1;
    LOCSTORE(store, 5, 62, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_62_0 + WPtempy * x_3_62_1 + ABCDtemp * x_3_44_1;
    QUICKDouble x_1_80_0 = Ptempx * x_0_80_0 + WPtempx * x_0_80_1 + 3.000000 * ABCDtemp * x_0_45_1;
    QUICKDouble x_1_80_1 = Ptempx * x_0_80_1 + WPtempx * x_0_80_2 + 3.000000 * ABCDtemp * x_0_45_2;
    QUICKDouble x_1_45_1 = Ptempx * x_0_45_1 + WPtempx * x_0_45_2 + 2.000000 * ABCDtemp * x_0_29_2;
    LOCSTORE(store, 7, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_80_0 + WPtempx * x_1_80_1 + ABtemp * (x_0_80_0 - CDcom * x_0_80_1) + 3.000000 * ABCDtemp * x_1_45_1;
    QUICKDouble x_2_80_0 = Ptempy * x_0_80_0 + WPtempy * x_0_80_1 + 3.000000 * ABCDtemp * x_0_46_1;
    QUICKDouble x_2_80_1 = Ptempy * x_0_80_1 + WPtempy * x_0_80_2 + 3.000000 * ABCDtemp * x_0_46_2;
    QUICKDouble x_2_45_1 = Ptempy * x_0_45_1 + WPtempy * x_0_45_2 + 3.000000 * ABCDtemp * x_0_20_2;
    LOCSTORE(store, 4, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_80_0 + WPtempx * x_2_80_1 + 3.000000 * ABCDtemp * x_2_45_1;
    QUICKDouble x_2_76_0 = Ptempy * x_0_76_0 + WPtempy * x_0_76_1 + 4.000000 * ABCDtemp * x_0_45_1;
    QUICKDouble x_2_76_1 = Ptempy * x_0_76_1 + WPtempy * x_0_76_2 + 4.000000 * ABCDtemp * x_0_45_2;
    LOCSTORE(store, 8, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_76_0 + WPtempy * x_2_76_1 + ABtemp * (x_0_76_0 - CDcom * x_0_76_1) + 4.000000 * ABCDtemp * x_2_45_1;
    QUICKDouble x_3_45_1 = Ptempz * x_0_45_1 + WPtempz * x_0_45_2;
    LOCSTORE(store, 6, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_80_0 + WPtempx * x_3_80_1 + 3.000000 * ABCDtemp * x_3_45_1;
    LOCSTORE(store, 5, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_76_0 + WPtempy * x_3_76_1 + 4.000000 * ABCDtemp * x_3_45_1;
    LOCSTORE(store, 9, 63, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_63_0 + WPtempz * x_3_63_1 + ABtemp * (x_0_63_0 - CDcom * x_0_63_1) + ABCDtemp * x_3_45_1;
    QUICKDouble x_1_77_0 = Ptempx * x_0_77_0 + WPtempx * x_0_77_1 + 4.000000 * ABCDtemp * x_0_46_1;
    QUICKDouble x_1_77_1 = Ptempx * x_0_77_1 + WPtempx * x_0_77_2 + 4.000000 * ABCDtemp * x_0_46_2;
    QUICKDouble x_1_46_1 = Ptempx * x_0_46_1 + WPtempx * x_0_46_2 + 3.000000 * ABCDtemp * x_0_20_2;
    LOCSTORE(store, 7, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_77_0 + WPtempx * x_1_77_1 + ABtemp * (x_0_77_0 - CDcom * x_0_77_1) + 4.000000 * ABCDtemp * x_1_46_1;
    QUICKDouble x_2_46_1 = Ptempy * x_0_46_1 + WPtempy * x_0_46_2 + 2.000000 * ABCDtemp * x_0_28_2;
    LOCSTORE(store, 8, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_80_0 + WPtempy * x_2_80_1 + ABtemp * (x_0_80_0 - CDcom * x_0_80_1) + 3.000000 * ABCDtemp * x_2_46_1;
    QUICKDouble x_2_77_0 = Ptempy * x_0_77_0 + WPtempy * x_0_77_1 + 2.000000 * ABCDtemp * x_0_52_1;
    QUICKDouble x_2_77_1 = Ptempy * x_0_77_1 + WPtempy * x_0_77_2 + 2.000000 * ABCDtemp * x_0_52_2;
    LOCSTORE(store, 4, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_77_0 + WPtempx * x_2_77_1 + 4.000000 * ABCDtemp * x_2_46_1;
    QUICKDouble x_3_46_1 = Ptempz * x_0_46_1 + WPtempz * x_0_46_2;
    LOCSTORE(store, 5, 80, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_80_0 + WPtempy * x_3_80_1 + 3.000000 * ABCDtemp * x_3_46_1;
    LOCSTORE(store, 6, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_77_0 + WPtempx * x_3_77_1 + 4.000000 * ABCDtemp * x_3_46_1;
    LOCSTORE(store, 9, 64, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_64_0 + WPtempz * x_3_64_1 + ABtemp * (x_0_64_0 - CDcom * x_0_64_1) + ABCDtemp * x_3_46_1;
    QUICKDouble x_1_58_0 = Ptempx * x_0_58_0 + WPtempx * x_0_58_1 + ABCDtemp * x_0_47_1;
    QUICKDouble x_1_58_1 = Ptempx * x_0_58_1 + WPtempx * x_0_58_2 + ABCDtemp * x_0_47_2;
    QUICKDouble x_1_47_1 = Ptempx * x_0_47_1 + WPtempx * x_0_47_2;
    LOCSTORE(store, 7, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_58_0 + WPtempx * x_1_58_1 + ABtemp * (x_0_58_0 - CDcom * x_0_58_1) + ABCDtemp * x_1_47_1;
    QUICKDouble x_2_47_1 = Ptempy * x_0_47_1 + WPtempy * x_0_47_2 + ABCDtemp * x_0_34_2;
    LOCSTORE(store, 8, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_72_0 + WPtempy * x_2_72_1 + ABtemp * (x_0_72_0 - CDcom * x_0_72_1) + 2.000000 * ABCDtemp * x_2_47_1;
    QUICKDouble x_2_58_0 = Ptempy * x_0_58_0 + WPtempy * x_0_58_1 + ABCDtemp * x_0_49_1;
    QUICKDouble x_2_58_1 = Ptempy * x_0_58_1 + WPtempy * x_0_58_2 + ABCDtemp * x_0_49_2;
    LOCSTORE(store, 4, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_58_0 + WPtempx * x_2_58_1 + ABCDtemp * x_2_47_1;
    QUICKDouble x_3_47_1 = Ptempz * x_0_47_1 + WPtempz * x_0_47_2 + 4.000000 * ABCDtemp * x_0_31_2;
    LOCSTORE(store, 5, 72, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_72_0 + WPtempy * x_3_72_1 + 2.000000 * ABCDtemp * x_3_47_1;
    LOCSTORE(store, 9, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_66_0 + WPtempz * x_3_66_1 + ABtemp * (x_0_66_0 - CDcom * x_0_66_1) + 5.000000 * ABCDtemp * x_3_47_1;
    LOCSTORE(store, 6, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_58_0 + WPtempx * x_3_58_1 + ABCDtemp * x_3_47_1;
    QUICKDouble x_1_57_0 = Ptempx * x_0_57_0 + WPtempx * x_0_57_1 + ABCDtemp * x_0_48_1;
    QUICKDouble x_1_57_1 = Ptempx * x_0_57_1 + WPtempx * x_0_57_2 + ABCDtemp * x_0_48_2;
    QUICKDouble x_1_48_1 = Ptempx * x_0_48_1 + WPtempx * x_0_48_2;
    LOCSTORE(store, 7, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_57_0 + WPtempx * x_1_57_1 + ABtemp * (x_0_57_0 - CDcom * x_0_57_1) + ABCDtemp * x_1_48_1;
    QUICKDouble x_2_48_1 = Ptempy * x_0_48_1 + WPtempy * x_0_48_2 + 4.000000 * ABCDtemp * x_0_30_2;
    LOCSTORE(store, 8, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_67_0 + WPtempy * x_2_67_1 + ABtemp * (x_0_67_0 - CDcom * x_0_67_1) + 5.000000 * ABCDtemp * x_2_48_1;
    LOCSTORE(store, 4, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_57_0 + WPtempx * x_2_57_1 + ABCDtemp * x_2_48_1;
    QUICKDouble x_3_48_1 = Ptempz * x_0_48_1 + WPtempz * x_0_48_2 + ABCDtemp * x_0_33_2;
    LOCSTORE(store, 9, 73, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_73_0 + WPtempz * x_3_73_1 + ABtemp * (x_0_73_0 - CDcom * x_0_73_1) + 2.000000 * ABCDtemp * x_3_48_1;
    LOCSTORE(store, 5, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_67_0 + WPtempy * x_3_67_1 + 5.000000 * ABCDtemp * x_3_48_1;
    LOCSTORE(store, 6, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_57_0 + WPtempx * x_3_57_1 + ABCDtemp * x_3_48_1;
    QUICKDouble x_1_74_0 = Ptempx * x_0_74_0 + WPtempx * x_0_74_1 + 2.000000 * ABCDtemp * x_0_49_1;
    QUICKDouble x_1_74_1 = Ptempx * x_0_74_1 + WPtempx * x_0_74_2 + 2.000000 * ABCDtemp * x_0_49_2;
    QUICKDouble x_1_49_1 = Ptempx * x_0_49_1 + WPtempx * x_0_49_2 + ABCDtemp * x_0_34_2;
    LOCSTORE(store, 7, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_74_0 + WPtempx * x_1_74_1 + ABtemp * (x_0_74_0 - CDcom * x_0_74_1) + 2.000000 * ABCDtemp * x_1_49_1;
    QUICKDouble x_2_49_1 = Ptempy * x_0_49_1 + WPtempy * x_0_49_2;
    LOCSTORE(store, 4, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_74_0 + WPtempx * x_2_74_1 + 2.000000 * ABCDtemp * x_2_49_1;
    LOCSTORE(store, 8, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_58_0 + WPtempy * x_2_58_1 + ABtemp * (x_0_58_0 - CDcom * x_0_58_1) + ABCDtemp * x_2_49_1;
    QUICKDouble x_3_49_1 = Ptempz * x_0_49_1 + WPtempz * x_0_49_2 + 4.000000 * ABCDtemp * x_0_27_2;
    LOCSTORE(store, 6, 74, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_74_0 + WPtempx * x_3_74_1 + 2.000000 * ABCDtemp * x_3_49_1;
    LOCSTORE(store, 9, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_68_0 + WPtempz * x_3_68_1 + ABtemp * (x_0_68_0 - CDcom * x_0_68_1) + 5.000000 * ABCDtemp * x_3_49_1;
    LOCSTORE(store, 5, 58, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_58_0 + WPtempy * x_3_58_1 + ABCDtemp * x_3_49_1;
    QUICKDouble x_1_69_0 = Ptempx * x_0_69_0 + WPtempx * x_0_69_1 + 5.000000 * ABCDtemp * x_0_50_1;
    QUICKDouble x_1_69_1 = Ptempx * x_0_69_1 + WPtempx * x_0_69_2 + 5.000000 * ABCDtemp * x_0_50_2;
    QUICKDouble x_1_50_1 = Ptempx * x_0_50_1 + WPtempx * x_0_50_2 + 4.000000 * ABCDtemp * x_0_26_2;
    LOCSTORE(store, 7, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_69_0 + WPtempx * x_1_69_1 + ABtemp * (x_0_69_0 - CDcom * x_0_69_1) + 5.000000 * ABCDtemp * x_1_50_1;
    QUICKDouble x_2_50_1 = Ptempy * x_0_50_1 + WPtempy * x_0_50_2;
    LOCSTORE(store, 4, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_69_0 + WPtempx * x_2_69_1 + 5.000000 * ABCDtemp * x_2_50_1;
    LOCSTORE(store, 8, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_56_0 + WPtempy * x_2_56_1 + ABtemp * (x_0_56_0 - CDcom * x_0_56_1) + ABCDtemp * x_2_50_1;
    QUICKDouble x_3_50_1 = Ptempz * x_0_50_1 + WPtempz * x_0_50_2 + ABCDtemp * x_0_32_2;
    LOCSTORE(store, 9, 75, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_75_0 + WPtempz * x_3_75_1 + ABtemp * (x_0_75_0 - CDcom * x_0_75_1) + 2.000000 * ABCDtemp * x_3_50_1;
    LOCSTORE(store, 6, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_69_0 + WPtempx * x_3_69_1 + 5.000000 * ABCDtemp * x_3_50_1;
    LOCSTORE(store, 5, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_56_0 + WPtempy * x_3_56_1 + ABCDtemp * x_3_50_1;
    QUICKDouble x_1_76_0 = Ptempx * x_0_76_0 + WPtempx * x_0_76_1 + 2.000000 * ABCDtemp * x_0_51_1;
    QUICKDouble x_1_76_1 = Ptempx * x_0_76_1 + WPtempx * x_0_76_2 + 2.000000 * ABCDtemp * x_0_51_2;
    QUICKDouble x_1_51_1 = Ptempx * x_0_51_1 + WPtempx * x_0_51_2 + ABCDtemp * x_0_33_2;
    LOCSTORE(store, 7, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_76_0 + WPtempx * x_1_76_1 + ABtemp * (x_0_76_0 - CDcom * x_0_76_1) + 2.000000 * ABCDtemp * x_1_51_1;
    QUICKDouble x_2_51_1 = Ptempy * x_0_51_1 + WPtempy * x_0_51_2 + 4.000000 * ABCDtemp * x_0_29_2;
    LOCSTORE(store, 4, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_76_0 + WPtempx * x_2_76_1 + 2.000000 * ABCDtemp * x_2_51_1;
    QUICKDouble x_2_70_0 = Ptempy * x_0_70_0 + WPtempy * x_0_70_1 + 5.000000 * ABCDtemp * x_0_51_1;
    QUICKDouble x_2_70_1 = Ptempy * x_0_70_1 + WPtempy * x_0_70_2 + 5.000000 * ABCDtemp * x_0_51_2;
    LOCSTORE(store, 8, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_70_0 + WPtempy * x_2_70_1 + ABtemp * (x_0_70_0 - CDcom * x_0_70_1) + 5.000000 * ABCDtemp * x_2_51_1;
    QUICKDouble x_3_51_1 = Ptempz * x_0_51_1 + WPtempz * x_0_51_2;
    LOCSTORE(store, 6, 76, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_76_0 + WPtempx * x_3_76_1 + 2.000000 * ABCDtemp * x_3_51_1;
    LOCSTORE(store, 5, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_70_0 + WPtempy * x_3_70_1 + 5.000000 * ABCDtemp * x_3_51_1;
    LOCSTORE(store, 9, 57, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_57_0 + WPtempz * x_3_57_1 + ABtemp * (x_0_57_0 - CDcom * x_0_57_1) + ABCDtemp * x_3_51_1;
    QUICKDouble x_1_71_0 = Ptempx * x_0_71_0 + WPtempx * x_0_71_1 + 5.000000 * ABCDtemp * x_0_52_1;
    QUICKDouble x_1_71_1 = Ptempx * x_0_71_1 + WPtempx * x_0_71_2 + 5.000000 * ABCDtemp * x_0_52_2;
    QUICKDouble x_1_52_1 = Ptempx * x_0_52_1 + WPtempx * x_0_52_2 + 4.000000 * ABCDtemp * x_0_28_2;
    LOCSTORE(store, 7, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_71_0 + WPtempx * x_1_71_1 + ABtemp * (x_0_71_0 - CDcom * x_0_71_1) + 5.000000 * ABCDtemp * x_1_52_1;
    QUICKDouble x_2_52_1 = Ptempy * x_0_52_1 + WPtempy * x_0_52_2 + ABCDtemp * x_0_32_2;
    LOCSTORE(store, 8, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_77_0 + WPtempy * x_2_77_1 + ABtemp * (x_0_77_0 - CDcom * x_0_77_1) + 2.000000 * ABCDtemp * x_2_52_1;
    QUICKDouble x_2_71_0 = Ptempy * x_0_71_0 + WPtempy * x_0_71_1 + ABCDtemp * x_0_53_1;
    QUICKDouble x_2_71_1 = Ptempy * x_0_71_1 + WPtempy * x_0_71_2 + ABCDtemp * x_0_53_2;
    LOCSTORE(store, 4, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_71_0 + WPtempx * x_2_71_1 + 5.000000 * ABCDtemp * x_2_52_1;
    QUICKDouble x_3_52_1 = Ptempz * x_0_52_1 + WPtempz * x_0_52_2;
    LOCSTORE(store, 5, 77, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_77_0 + WPtempy * x_3_77_1 + 2.000000 * ABCDtemp * x_3_52_1;
    LOCSTORE(store, 6, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_71_0 + WPtempx * x_3_71_1 + 5.000000 * ABCDtemp * x_3_52_1;
    LOCSTORE(store, 9, 56, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_56_0 + WPtempz * x_3_56_1 + ABtemp * (x_0_56_0 - CDcom * x_0_56_1) + ABCDtemp * x_3_52_1;
    QUICKDouble x_1_81_0 = Ptempx * x_0_81_0 + WPtempx * x_0_81_1 + 6.000000 * ABCDtemp * x_0_53_1;
    QUICKDouble x_1_81_1 = Ptempx * x_0_81_1 + WPtempx * x_0_81_2 + 6.000000 * ABCDtemp * x_0_53_2;
    QUICKDouble x_1_53_1 = Ptempx * x_0_53_1 + WPtempx * x_0_53_2 + 5.000000 * ABCDtemp * x_0_32_2;
    LOCSTORE(store, 7, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_81_0 + WPtempx * x_1_81_1 + ABtemp * (x_0_81_0 - CDcom * x_0_81_1) + 6.000000 * ABCDtemp * x_1_53_1;
    QUICKDouble x_2_53_1 = Ptempy * x_0_53_1 + WPtempy * x_0_53_2;
    LOCSTORE(store, 4, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_81_0 + WPtempx * x_2_81_1 + 6.000000 * ABCDtemp * x_2_53_1;
    LOCSTORE(store, 8, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_71_0 + WPtempy * x_2_71_1 + ABtemp * (x_0_71_0 - CDcom * x_0_71_1) + ABCDtemp * x_2_53_1;
    QUICKDouble x_3_53_1 = Ptempz * x_0_53_1 + WPtempz * x_0_53_2;
    LOCSTORE(store, 6, 81, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_81_0 + WPtempx * x_3_81_1 + 6.000000 * ABCDtemp * x_3_53_1;
    LOCSTORE(store, 5, 71, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_71_0 + WPtempy * x_3_71_1 + ABCDtemp * x_3_53_1;
    LOCSTORE(store, 9, 69, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_69_0 + WPtempz * x_3_69_1 + ABtemp * (x_0_69_0 - CDcom * x_0_69_1) + ABCDtemp * x_3_53_1;
    QUICKDouble x_1_70_0 = Ptempx * x_0_70_0 + WPtempx * x_0_70_1 + ABCDtemp * x_0_54_1;
    QUICKDouble x_1_70_1 = Ptempx * x_0_70_1 + WPtempx * x_0_70_2 + ABCDtemp * x_0_54_2;
    QUICKDouble x_1_54_1 = Ptempx * x_0_54_1 + WPtempx * x_0_54_2;
    LOCSTORE(store, 7, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_70_0 + WPtempx * x_1_70_1 + ABtemp * (x_0_70_0 - CDcom * x_0_70_1) + ABCDtemp * x_1_54_1;
    QUICKDouble x_2_54_1 = Ptempy * x_0_54_1 + WPtempy * x_0_54_2 + 5.000000 * ABCDtemp * x_0_33_2;
    LOCSTORE(store, 8, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_82_0 + WPtempy * x_2_82_1 + ABtemp * (x_0_82_0 - CDcom * x_0_82_1) + 6.000000 * ABCDtemp * x_2_54_1;
    LOCSTORE(store, 4, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_70_0 + WPtempx * x_2_70_1 + ABCDtemp * x_2_54_1;
    QUICKDouble x_3_54_1 = Ptempz * x_0_54_1 + WPtempz * x_0_54_2;
    LOCSTORE(store, 5, 82, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_82_0 + WPtempy * x_3_82_1 + 6.000000 * ABCDtemp * x_3_54_1;
    LOCSTORE(store, 6, 70, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_70_0 + WPtempx * x_3_70_1 + ABCDtemp * x_3_54_1;
    LOCSTORE(store, 9, 67, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_67_0 + WPtempz * x_3_67_1 + ABtemp * (x_0_67_0 - CDcom * x_0_67_1) + ABCDtemp * x_3_54_1;
    QUICKDouble x_1_68_0 = Ptempx * x_0_68_0 + WPtempx * x_0_68_1 + ABCDtemp * x_0_55_1;
    QUICKDouble x_1_68_1 = Ptempx * x_0_68_1 + WPtempx * x_0_68_2 + ABCDtemp * x_0_55_2;
    QUICKDouble x_1_55_1 = Ptempx * x_0_55_1 + WPtempx * x_0_55_2;
    LOCSTORE(store, 7, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_68_0 + WPtempx * x_1_68_1 + ABtemp * (x_0_68_0 - CDcom * x_0_68_1) + ABCDtemp * x_1_55_1;
    QUICKDouble x_2_55_1 = Ptempy * x_0_55_1 + WPtempy * x_0_55_2;
    LOCSTORE(store, 4, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_68_0 + WPtempx * x_2_68_1 + ABCDtemp * x_2_55_1;
    LOCSTORE(store, 8, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_66_0 + WPtempy * x_2_66_1 + ABtemp * (x_0_66_0 - CDcom * x_0_66_1) + ABCDtemp * x_2_55_1;
    QUICKDouble x_3_55_1 = Ptempz * x_0_55_1 + WPtempz * x_0_55_2 + 5.000000 * ABCDtemp * x_0_34_2;
    LOCSTORE(store, 9, 83, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_83_0 + WPtempz * x_3_83_1 + ABtemp * (x_0_83_0 - CDcom * x_0_83_1) + 6.000000 * ABCDtemp * x_3_55_1;
    LOCSTORE(store, 6, 68, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_68_0 + WPtempx * x_3_68_1 + ABCDtemp * x_3_55_1;
    LOCSTORE(store, 5, 66, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_66_0 + WPtempy * x_3_66_1 + ABCDtemp * x_3_55_1;
    // [DS|IS] integral - End 

}

