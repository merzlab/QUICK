/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [KS|PS] integral - Start
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble x_3_0_1 = Ptempz * VY_1 + WPtempz * VY_2;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_3_0_2 = Ptempz * VY_2 + WPtempz * VY_3;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_3_0_3 = Ptempz * VY_3 + WPtempz * VY_4;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_3_0_4 = Ptempz * VY_4 + WPtempz * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_3_0_5 = Ptempz * VY_5 + WPtempz * VY_6;
    QUICKDouble VY_7 = VY(0, 0, 7);
    QUICKDouble x_3_0_6 = Ptempz * VY_6 + WPtempz * VY_7;
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble x_3_0_0 = Ptempz * VY_0 + WPtempz * VY_1;
    QUICKDouble VY_8 = VY(0, 0, 8);
    QUICKDouble x_3_0_7 = Ptempz * VY_7 + WPtempz * VY_8;
    QUICKDouble x_2_0_1 = Ptempy * VY_1 + WPtempy * VY_2;
    QUICKDouble x_2_0_2 = Ptempy * VY_2 + WPtempy * VY_3;
    QUICKDouble x_2_0_3 = Ptempy * VY_3 + WPtempy * VY_4;
    QUICKDouble x_2_0_4 = Ptempy * VY_4 + WPtempy * VY_5;
    QUICKDouble x_2_0_5 = Ptempy * VY_5 + WPtempy * VY_6;
    QUICKDouble x_2_0_6 = Ptempy * VY_6 + WPtempy * VY_7;
    QUICKDouble x_5_0_1 = Ptempy * x_3_0_1 + WPtempy * x_3_0_2;
    QUICKDouble x_5_0_2 = Ptempy * x_3_0_2 + WPtempy * x_3_0_3;
    QUICKDouble x_5_0_3 = Ptempy * x_3_0_3 + WPtempy * x_3_0_4;
    QUICKDouble x_5_0_4 = Ptempy * x_3_0_4 + WPtempy * x_3_0_5;
    QUICKDouble x_5_0_5 = Ptempy * x_3_0_5 + WPtempy * x_3_0_6;
    QUICKDouble x_5_0_0 = Ptempy * x_3_0_0 + WPtempy * x_3_0_1;
    QUICKDouble x_5_0_6 = Ptempy * x_3_0_6 + WPtempy * x_3_0_7;
    QUICKDouble x_4_0_1 = Ptempx * x_2_0_1 + WPtempx * x_2_0_2;
    QUICKDouble x_4_0_2 = Ptempx * x_2_0_2 + WPtempx * x_2_0_3;
    QUICKDouble x_4_0_3 = Ptempx * x_2_0_3 + WPtempx * x_2_0_4;
    QUICKDouble x_4_0_4 = Ptempx * x_2_0_4 + WPtempx * x_2_0_5;
    QUICKDouble x_4_0_5 = Ptempx * x_2_0_5 + WPtempx * x_2_0_6;
    QUICKDouble x_10_0_1 = Ptempx * x_5_0_1 + WPtempx * x_5_0_2;
    QUICKDouble x_10_0_2 = Ptempx * x_5_0_2 + WPtempx * x_5_0_3;
    QUICKDouble x_10_0_3 = Ptempx * x_5_0_3 + WPtempx * x_5_0_4;
    QUICKDouble x_10_0_4 = Ptempx * x_5_0_4 + WPtempx * x_5_0_5;
    QUICKDouble x_10_0_0 = Ptempx * x_5_0_0 + WPtempx * x_5_0_1;
    QUICKDouble x_10_0_5 = Ptempx * x_5_0_5 + WPtempx * x_5_0_6;
    QUICKDouble x_11_0_1 = Ptempx * x_4_0_1 + WPtempx * x_4_0_2 + ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_11_0_2 = Ptempx * x_4_0_2 + WPtempx * x_4_0_3 + ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_11_0_3 = Ptempx * x_4_0_3 + WPtempx * x_4_0_4 + ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_11_0_4 = Ptempx * x_4_0_4 + WPtempx * x_4_0_5 + ABtemp * (x_2_0_4 - CDcom * x_2_0_5);
    QUICKDouble x_23_0_1 = Ptempx * x_10_0_1 + WPtempx * x_10_0_2 + ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_23_0_2 = Ptempx * x_10_0_2 + WPtempx * x_10_0_3 + ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_23_0_3 = Ptempx * x_10_0_3 + WPtempx * x_10_0_4 + ABtemp * (x_5_0_3 - CDcom * x_5_0_4);
    QUICKDouble x_23_0_0 = Ptempx * x_10_0_0 + WPtempx * x_10_0_1 + ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_23_0_4 = Ptempx * x_10_0_4 + WPtempx * x_10_0_5 + ABtemp * (x_5_0_4 - CDcom * x_5_0_5);
    QUICKDouble x_28_0_1 = Ptempx * x_11_0_1 + WPtempx * x_11_0_2 + 2.000000 * ABtemp * (x_4_0_1 - CDcom * x_4_0_2);
    QUICKDouble x_28_0_2 = Ptempx * x_11_0_2 + WPtempx * x_11_0_3 + 2.000000 * ABtemp * (x_4_0_2 - CDcom * x_4_0_3);
    QUICKDouble x_28_0_3 = Ptempx * x_11_0_3 + WPtempx * x_11_0_4 + 2.000000 * ABtemp * (x_4_0_3 - CDcom * x_4_0_4);
    QUICKDouble x_38_0_1 = Ptempx * x_23_0_1 + WPtempx * x_23_0_2 + 2.000000 * ABtemp * (x_10_0_1 - CDcom * x_10_0_2);
    QUICKDouble x_38_0_2 = Ptempx * x_23_0_2 + WPtempx * x_23_0_3 + 2.000000 * ABtemp * (x_10_0_2 - CDcom * x_10_0_3);
    QUICKDouble x_38_0_0 = Ptempx * x_23_0_0 + WPtempx * x_23_0_1 + 2.000000 * ABtemp * (x_10_0_0 - CDcom * x_10_0_1);
    QUICKDouble x_38_0_3 = Ptempx * x_23_0_3 + WPtempx * x_23_0_4 + 2.000000 * ABtemp * (x_10_0_3 - CDcom * x_10_0_4);
    QUICKDouble x_52_0_1 = Ptempx * x_28_0_1 + WPtempx * x_28_0_2 + 3.000000 * ABtemp * (x_11_0_1 - CDcom * x_11_0_2);
    QUICKDouble x_52_0_2 = Ptempx * x_28_0_2 + WPtempx * x_28_0_3 + 3.000000 * ABtemp * (x_11_0_2 - CDcom * x_11_0_3);
    QUICKDouble x_56_0_1 = Ptempx * x_38_0_1 + WPtempx * x_38_0_2 + 3.000000 * ABtemp * (x_23_0_1 - CDcom * x_23_0_2);
    QUICKDouble x_56_0_0 = Ptempx * x_38_0_0 + WPtempx * x_38_0_1 + 3.000000 * ABtemp * (x_23_0_0 - CDcom * x_23_0_1);
    QUICKDouble x_56_0_2 = Ptempx * x_38_0_2 + WPtempx * x_38_0_3 + 3.000000 * ABtemp * (x_23_0_2 - CDcom * x_23_0_3);
    QUICKDouble x_71_0_1 = Ptempx * x_52_0_1 + WPtempx * x_52_0_2 + 4.000000 * ABtemp * (x_28_0_1 - CDcom * x_28_0_2);
    QUICKDouble x_84_0_0 = Ptempx * x_56_0_0 + WPtempx * x_56_0_1 + 4.000000 * ABtemp * (x_38_0_0 - CDcom * x_38_0_1);
    QUICKDouble x_84_0_1 = Ptempx * x_56_0_1 + WPtempx * x_56_0_2 + 4.000000 * ABtemp * (x_38_0_1 - CDcom * x_38_0_2);
    LOCSTORE(store, 84, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_84_0_0 + WQtempz * x_84_0_1 + ABCDtemp * x_71_0_1;
    QUICKDouble x_6_0_1 = Ptempx * x_3_0_1 + WPtempx * x_3_0_2;
    QUICKDouble x_6_0_2 = Ptempx * x_3_0_2 + WPtempx * x_3_0_3;
    QUICKDouble x_6_0_3 = Ptempx * x_3_0_3 + WPtempx * x_3_0_4;
    QUICKDouble x_6_0_4 = Ptempx * x_3_0_4 + WPtempx * x_3_0_5;
    QUICKDouble x_6_0_5 = Ptempx * x_3_0_5 + WPtempx * x_3_0_6;
    QUICKDouble x_13_0_1 = Ptempx * x_6_0_1 + WPtempx * x_6_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_13_0_2 = Ptempx * x_6_0_2 + WPtempx * x_6_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_13_0_3 = Ptempx * x_6_0_3 + WPtempx * x_6_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_13_0_4 = Ptempx * x_6_0_4 + WPtempx * x_6_0_5 + ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble x_26_0_1 = Ptempx * x_13_0_1 + WPtempx * x_13_0_2 + 2.000000 * ABtemp * (x_6_0_1 - CDcom * x_6_0_2);
    QUICKDouble x_26_0_2 = Ptempx * x_13_0_2 + WPtempx * x_13_0_3 + 2.000000 * ABtemp * (x_6_0_2 - CDcom * x_6_0_3);
    QUICKDouble x_26_0_3 = Ptempx * x_13_0_3 + WPtempx * x_13_0_4 + 2.000000 * ABtemp * (x_6_0_3 - CDcom * x_6_0_4);
    QUICKDouble x_50_0_1 = Ptempx * x_26_0_1 + WPtempx * x_26_0_2 + 3.000000 * ABtemp * (x_13_0_1 - CDcom * x_13_0_2);
    QUICKDouble x_50_0_2 = Ptempx * x_26_0_2 + WPtempx * x_26_0_3 + 3.000000 * ABtemp * (x_13_0_2 - CDcom * x_13_0_3);
    QUICKDouble x_69_0_1 = Ptempx * x_50_0_1 + WPtempx * x_50_0_2 + 4.000000 * ABtemp * (x_26_0_1 - CDcom * x_26_0_2);
    LOCSTORE(store, 84, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_84_0_0 + WQtempy * x_84_0_1 + ABCDtemp * x_69_0_1;
    LOCSTORE(store, 84, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_84_0_0 + WQtempx * x_84_0_1 + 5.000000 * ABCDtemp * x_56_0_1;
    QUICKDouble x_8_0_1 = Ptempy * x_2_0_1 + WPtempy * x_2_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_8_0_2 = Ptempy * x_2_0_2 + WPtempy * x_2_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_8_0_3 = Ptempy * x_2_0_3 + WPtempy * x_2_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_8_0_4 = Ptempy * x_2_0_4 + WPtempy * x_2_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_8_0_5 = Ptempy * x_2_0_5 + WPtempy * x_2_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble x_15_0_1 = Ptempy * x_5_0_1 + WPtempy * x_5_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_15_0_2 = Ptempy * x_5_0_2 + WPtempy * x_5_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_15_0_3 = Ptempy * x_5_0_3 + WPtempy * x_5_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_15_0_4 = Ptempy * x_5_0_4 + WPtempy * x_5_0_5 + ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble x_15_0_0 = Ptempy * x_5_0_0 + WPtempy * x_5_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_15_0_5 = Ptempy * x_5_0_5 + WPtempy * x_5_0_6 + ABtemp * (x_3_0_5 - CDcom * x_3_0_6);
    QUICKDouble x_18_0_1 = Ptempy * x_8_0_1 + WPtempy * x_8_0_2 + 2.000000 * ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_18_0_2 = Ptempy * x_8_0_2 + WPtempy * x_8_0_3 + 2.000000 * ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_18_0_3 = Ptempy * x_8_0_3 + WPtempy * x_8_0_4 + 2.000000 * ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_18_0_4 = Ptempy * x_8_0_4 + WPtempy * x_8_0_5 + 2.000000 * ABtemp * (x_2_0_4 - CDcom * x_2_0_5);
    QUICKDouble x_30_0_1 = Ptempy * x_15_0_1 + WPtempy * x_15_0_2 + 2.000000 * ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_30_0_2 = Ptempy * x_15_0_2 + WPtempy * x_15_0_3 + 2.000000 * ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_30_0_3 = Ptempy * x_15_0_3 + WPtempy * x_15_0_4 + 2.000000 * ABtemp * (x_5_0_3 - CDcom * x_5_0_4);
    QUICKDouble x_30_0_0 = Ptempy * x_15_0_0 + WPtempy * x_15_0_1 + 2.000000 * ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_30_0_4 = Ptempy * x_15_0_4 + WPtempy * x_15_0_5 + 2.000000 * ABtemp * (x_5_0_4 - CDcom * x_5_0_5);
    QUICKDouble x_33_0_1 = Ptempy * x_18_0_1 + WPtempy * x_18_0_2 + 3.000000 * ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_33_0_2 = Ptempy * x_18_0_2 + WPtempy * x_18_0_3 + 3.000000 * ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_33_0_3 = Ptempy * x_18_0_3 + WPtempy * x_18_0_4 + 3.000000 * ABtemp * (x_8_0_3 - CDcom * x_8_0_4);
    QUICKDouble x_48_0_1 = Ptempy * x_30_0_1 + WPtempy * x_30_0_2 + 3.000000 * ABtemp * (x_15_0_1 - CDcom * x_15_0_2);
    QUICKDouble x_48_0_2 = Ptempy * x_30_0_2 + WPtempy * x_30_0_3 + 3.000000 * ABtemp * (x_15_0_2 - CDcom * x_15_0_3);
    QUICKDouble x_48_0_0 = Ptempy * x_30_0_0 + WPtempy * x_30_0_1 + 3.000000 * ABtemp * (x_15_0_0 - CDcom * x_15_0_1);
    QUICKDouble x_48_0_3 = Ptempy * x_30_0_3 + WPtempy * x_30_0_4 + 3.000000 * ABtemp * (x_15_0_3 - CDcom * x_15_0_4);
    QUICKDouble x_54_0_1 = Ptempy * x_33_0_1 + WPtempy * x_33_0_2 + 4.000000 * ABtemp * (x_18_0_1 - CDcom * x_18_0_2);
    QUICKDouble x_54_0_2 = Ptempy * x_33_0_2 + WPtempy * x_33_0_3 + 4.000000 * ABtemp * (x_18_0_2 - CDcom * x_18_0_3);
    QUICKDouble x_67_0_1 = Ptempy * x_48_0_1 + WPtempy * x_48_0_2 + 4.000000 * ABtemp * (x_30_0_1 - CDcom * x_30_0_2);
    QUICKDouble x_67_0_0 = Ptempy * x_48_0_0 + WPtempy * x_48_0_1 + 4.000000 * ABtemp * (x_30_0_0 - CDcom * x_30_0_1);
    QUICKDouble x_67_0_2 = Ptempy * x_48_0_2 + WPtempy * x_48_0_3 + 4.000000 * ABtemp * (x_30_0_2 - CDcom * x_30_0_3);
    QUICKDouble x_70_0_1 = Ptempx * x_54_0_1 + WPtempx * x_54_0_2;
    QUICKDouble x_85_0_0 = Ptempx * x_67_0_0 + WPtempx * x_67_0_1;
    QUICKDouble x_85_0_1 = Ptempx * x_67_0_1 + WPtempx * x_67_0_2;
    LOCSTORE(store, 85, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_85_0_0 + WQtempz * x_85_0_1 + ABCDtemp * x_70_0_1;
    QUICKDouble x_57_0_1 = Ptempx * x_48_0_1 + WPtempx * x_48_0_2;
    LOCSTORE(store, 85, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_85_0_0 + WQtempy * x_85_0_1 + 5.000000 * ABCDtemp * x_57_0_1;
    LOCSTORE(store, 85, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_85_0_0 + WQtempx * x_85_0_1 + ABCDtemp * x_67_0_1;
    QUICKDouble x_9_0_1 = Ptempz * x_3_0_1 + WPtempz * x_3_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_9_0_2 = Ptempz * x_3_0_2 + WPtempz * x_3_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_9_0_3 = Ptempz * x_3_0_3 + WPtempz * x_3_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_9_0_4 = Ptempz * x_3_0_4 + WPtempz * x_3_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_9_0_5 = Ptempz * x_3_0_5 + WPtempz * x_3_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble x_9_0_0 = Ptempz * x_3_0_0 + WPtempz * x_3_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_9_0_6 = Ptempz * x_3_0_6 + WPtempz * x_3_0_7 + ABtemp * (VY_6 - CDcom * VY_7);
    QUICKDouble x_19_0_1 = Ptempz * x_9_0_1 + WPtempz * x_9_0_2 + 2.000000 * ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_19_0_2 = Ptempz * x_9_0_2 + WPtempz * x_9_0_3 + 2.000000 * ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_19_0_3 = Ptempz * x_9_0_3 + WPtempz * x_9_0_4 + 2.000000 * ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_19_0_4 = Ptempz * x_9_0_4 + WPtempz * x_9_0_5 + 2.000000 * ABtemp * (x_3_0_4 - CDcom * x_3_0_5);
    QUICKDouble x_19_0_0 = Ptempz * x_9_0_0 + WPtempz * x_9_0_1 + 2.000000 * ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_19_0_5 = Ptempz * x_9_0_5 + WPtempz * x_9_0_6 + 2.000000 * ABtemp * (x_3_0_5 - CDcom * x_3_0_6);
    QUICKDouble x_34_0_1 = Ptempz * x_19_0_1 + WPtempz * x_19_0_2 + 3.000000 * ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_34_0_2 = Ptempz * x_19_0_2 + WPtempz * x_19_0_3 + 3.000000 * ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_34_0_3 = Ptempz * x_19_0_3 + WPtempz * x_19_0_4 + 3.000000 * ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_34_0_0 = Ptempz * x_19_0_0 + WPtempz * x_19_0_1 + 3.000000 * ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_34_0_4 = Ptempz * x_19_0_4 + WPtempz * x_19_0_5 + 3.000000 * ABtemp * (x_9_0_4 - CDcom * x_9_0_5);
    QUICKDouble x_55_0_1 = Ptempz * x_34_0_1 + WPtempz * x_34_0_2 + 4.000000 * ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_55_0_2 = Ptempz * x_34_0_2 + WPtempz * x_34_0_3 + 4.000000 * ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_55_0_0 = Ptempz * x_34_0_0 + WPtempz * x_34_0_1 + 4.000000 * ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_55_0_3 = Ptempz * x_34_0_3 + WPtempz * x_34_0_4 + 4.000000 * ABtemp * (x_19_0_3 - CDcom * x_19_0_4);
    QUICKDouble x_47_0_1 = Ptempy * x_34_0_1 + WPtempy * x_34_0_2;
    QUICKDouble x_47_0_2 = Ptempy * x_34_0_2 + WPtempy * x_34_0_3;
    QUICKDouble x_66_0_1 = Ptempy * x_55_0_1 + WPtempy * x_55_0_2;
    QUICKDouble x_66_0_0 = Ptempy * x_55_0_0 + WPtempy * x_55_0_1;
    QUICKDouble x_66_0_2 = Ptempy * x_55_0_2 + WPtempy * x_55_0_3;
    QUICKDouble x_58_0_1 = Ptempx * x_47_0_1 + WPtempx * x_47_0_2;
    QUICKDouble x_86_0_0 = Ptempx * x_66_0_0 + WPtempx * x_66_0_1;
    QUICKDouble x_86_0_1 = Ptempx * x_66_0_1 + WPtempx * x_66_0_2;
    LOCSTORE(store, 86, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_86_0_0 + WQtempz * x_86_0_1 + 5.000000 * ABCDtemp * x_58_0_1;
    QUICKDouble x_68_0_1 = Ptempx * x_55_0_1 + WPtempx * x_55_0_2;
    LOCSTORE(store, 86, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_86_0_0 + WQtempy * x_86_0_1 + ABCDtemp * x_68_0_1;
    LOCSTORE(store, 86, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_86_0_0 + WQtempx * x_86_0_1 + ABCDtemp * x_66_0_1;
    QUICKDouble x_31_0_1 = Ptempy * x_19_0_1 + WPtempy * x_19_0_2;
    QUICKDouble x_31_0_2 = Ptempy * x_19_0_2 + WPtempy * x_19_0_3;
    QUICKDouble x_31_0_3 = Ptempy * x_19_0_3 + WPtempy * x_19_0_4;
    QUICKDouble x_47_0_0 = Ptempy * x_34_0_0 + WPtempy * x_34_0_1;
    QUICKDouble x_47_0_3 = Ptempy * x_34_0_3 + WPtempy * x_34_0_4;
    QUICKDouble x_41_0_1 = Ptempy * x_31_0_1 + WPtempy * x_31_0_2 + ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_41_0_2 = Ptempy * x_31_0_2 + WPtempy * x_31_0_3 + ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_72_0_1 = Ptempy * x_47_0_1 + WPtempy * x_47_0_2 + ABtemp * (x_34_0_1 - CDcom * x_34_0_2);
    QUICKDouble x_72_0_0 = Ptempy * x_47_0_0 + WPtempy * x_47_0_1 + ABtemp * (x_34_0_0 - CDcom * x_34_0_1);
    QUICKDouble x_72_0_2 = Ptempy * x_47_0_2 + WPtempy * x_47_0_3 + ABtemp * (x_34_0_2 - CDcom * x_34_0_3);
    QUICKDouble x_59_0_1 = Ptempx * x_41_0_1 + WPtempx * x_41_0_2;
    QUICKDouble x_87_0_0 = Ptempx * x_72_0_0 + WPtempx * x_72_0_1;
    QUICKDouble x_87_0_1 = Ptempx * x_72_0_1 + WPtempx * x_72_0_2;
    LOCSTORE(store, 87, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_87_0_0 + WQtempz * x_87_0_1 + 4.000000 * ABCDtemp * x_59_0_1;
    LOCSTORE(store, 87, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_87_0_0 + WQtempy * x_87_0_1 + 2.000000 * ABCDtemp * x_58_0_1;
    LOCSTORE(store, 87, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_87_0_0 + WQtempx * x_87_0_1 + ABCDtemp * x_72_0_1;
    QUICKDouble x_16_0_1 = Ptempy * x_9_0_1 + WPtempy * x_9_0_2;
    QUICKDouble x_16_0_2 = Ptempy * x_9_0_2 + WPtempy * x_9_0_3;
    QUICKDouble x_16_0_3 = Ptempy * x_9_0_3 + WPtempy * x_9_0_4;
    QUICKDouble x_16_0_4 = Ptempy * x_9_0_4 + WPtempy * x_9_0_5;
    QUICKDouble x_16_0_0 = Ptempy * x_9_0_0 + WPtempy * x_9_0_1;
    QUICKDouble x_16_0_5 = Ptempy * x_9_0_5 + WPtempy * x_9_0_6;
    QUICKDouble x_22_0_1 = Ptempy * x_16_0_1 + WPtempy * x_16_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_22_0_2 = Ptempy * x_16_0_2 + WPtempy * x_16_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_22_0_3 = Ptempy * x_16_0_3 + WPtempy * x_16_0_4 + ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_22_0_0 = Ptempy * x_16_0_0 + WPtempy * x_16_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_22_0_4 = Ptempy * x_16_0_4 + WPtempy * x_16_0_5 + ABtemp * (x_9_0_4 - CDcom * x_9_0_5);
    QUICKDouble x_42_0_1 = Ptempy * x_22_0_1 + WPtempy * x_22_0_2 + 2.000000 * ABtemp * (x_16_0_1 - CDcom * x_16_0_2);
    QUICKDouble x_42_0_2 = Ptempy * x_22_0_2 + WPtempy * x_22_0_3 + 2.000000 * ABtemp * (x_16_0_2 - CDcom * x_16_0_3);
    QUICKDouble x_42_0_0 = Ptempy * x_22_0_0 + WPtempy * x_22_0_1 + 2.000000 * ABtemp * (x_16_0_0 - CDcom * x_16_0_1);
    QUICKDouble x_42_0_3 = Ptempy * x_22_0_3 + WPtempy * x_22_0_4 + 2.000000 * ABtemp * (x_16_0_3 - CDcom * x_16_0_4);
    QUICKDouble x_73_0_1 = Ptempy * x_42_0_1 + WPtempy * x_42_0_2 + 3.000000 * ABtemp * (x_22_0_1 - CDcom * x_22_0_2);
    QUICKDouble x_73_0_0 = Ptempy * x_42_0_0 + WPtempy * x_42_0_1 + 3.000000 * ABtemp * (x_22_0_0 - CDcom * x_22_0_1);
    QUICKDouble x_73_0_2 = Ptempy * x_42_0_2 + WPtempy * x_42_0_3 + 3.000000 * ABtemp * (x_22_0_2 - CDcom * x_22_0_3);
    QUICKDouble x_88_0_0 = Ptempx * x_73_0_0 + WPtempx * x_73_0_1;
    QUICKDouble x_88_0_1 = Ptempx * x_73_0_1 + WPtempx * x_73_0_2;
    LOCSTORE(store, 88, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_88_0_0 + WQtempz * x_88_0_1 + 2.000000 * ABCDtemp * x_57_0_1;
    QUICKDouble x_60_0_1 = Ptempx * x_42_0_1 + WPtempx * x_42_0_2;
    LOCSTORE(store, 88, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_88_0_0 + WQtempy * x_88_0_1 + 4.000000 * ABCDtemp * x_60_0_1;
    LOCSTORE(store, 88, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_88_0_0 + WQtempx * x_88_0_1 + ABCDtemp * x_73_0_1;
    QUICKDouble x_40_0_1 = Ptempx * x_31_0_1 + WPtempx * x_31_0_2;
    QUICKDouble x_40_0_2 = Ptempx * x_31_0_2 + WPtempx * x_31_0_3;
    QUICKDouble x_58_0_0 = Ptempx * x_47_0_0 + WPtempx * x_47_0_1;
    QUICKDouble x_58_0_2 = Ptempx * x_47_0_2 + WPtempx * x_47_0_3;
    QUICKDouble x_61_0_1 = Ptempx * x_40_0_1 + WPtempx * x_40_0_2 + ABtemp * (x_31_0_1 - CDcom * x_31_0_2);
    QUICKDouble x_89_0_0 = Ptempx * x_58_0_0 + WPtempx * x_58_0_1 + ABtemp * (x_47_0_0 - CDcom * x_47_0_1);
    QUICKDouble x_89_0_1 = Ptempx * x_58_0_1 + WPtempx * x_58_0_2 + ABtemp * (x_47_0_1 - CDcom * x_47_0_2);
    LOCSTORE(store, 89, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_89_0_0 + WQtempz * x_89_0_1 + 4.000000 * ABCDtemp * x_61_0_1;
    QUICKDouble x_49_0_1 = Ptempx * x_34_0_1 + WPtempx * x_34_0_2;
    QUICKDouble x_49_0_2 = Ptempx * x_34_0_2 + WPtempx * x_34_0_3;
    QUICKDouble x_74_0_1 = Ptempx * x_49_0_1 + WPtempx * x_49_0_2 + ABtemp * (x_34_0_1 - CDcom * x_34_0_2);
    LOCSTORE(store, 89, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_89_0_0 + WQtempy * x_89_0_1 + ABCDtemp * x_74_0_1;
    LOCSTORE(store, 89, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_89_0_0 + WQtempx * x_89_0_1 + 2.000000 * ABCDtemp * x_58_0_1;
    QUICKDouble x_25_0_1 = Ptempx * x_16_0_1 + WPtempx * x_16_0_2;
    QUICKDouble x_25_0_2 = Ptempx * x_16_0_2 + WPtempx * x_16_0_3;
    QUICKDouble x_25_0_3 = Ptempx * x_16_0_3 + WPtempx * x_16_0_4;
    QUICKDouble x_25_0_0 = Ptempx * x_16_0_0 + WPtempx * x_16_0_1;
    QUICKDouble x_25_0_4 = Ptempx * x_16_0_4 + WPtempx * x_16_0_5;
    QUICKDouble x_36_0_1 = Ptempx * x_25_0_1 + WPtempx * x_25_0_2 + ABtemp * (x_16_0_1 - CDcom * x_16_0_2);
    QUICKDouble x_36_0_2 = Ptempx * x_25_0_2 + WPtempx * x_25_0_3 + ABtemp * (x_16_0_2 - CDcom * x_16_0_3);
    QUICKDouble x_36_0_0 = Ptempx * x_25_0_0 + WPtempx * x_25_0_1 + ABtemp * (x_16_0_0 - CDcom * x_16_0_1);
    QUICKDouble x_36_0_3 = Ptempx * x_25_0_3 + WPtempx * x_25_0_4 + ABtemp * (x_16_0_3 - CDcom * x_16_0_4);
    QUICKDouble x_62_0_1 = Ptempx * x_36_0_1 + WPtempx * x_36_0_2 + 2.000000 * ABtemp * (x_25_0_1 - CDcom * x_25_0_2);
    QUICKDouble x_62_0_0 = Ptempx * x_36_0_0 + WPtempx * x_36_0_1 + 2.000000 * ABtemp * (x_25_0_0 - CDcom * x_25_0_1);
    QUICKDouble x_62_0_2 = Ptempx * x_36_0_2 + WPtempx * x_36_0_3 + 2.000000 * ABtemp * (x_25_0_2 - CDcom * x_25_0_3);
    QUICKDouble x_90_0_0 = Ptempx * x_62_0_0 + WPtempx * x_62_0_1 + 3.000000 * ABtemp * (x_36_0_0 - CDcom * x_36_0_1);
    QUICKDouble x_90_0_1 = Ptempx * x_62_0_1 + WPtempx * x_62_0_2 + 3.000000 * ABtemp * (x_36_0_1 - CDcom * x_36_0_2);
    LOCSTORE(store, 90, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_90_0_0 + WQtempz * x_90_0_1 + 2.000000 * ABCDtemp * x_56_0_1;
    QUICKDouble x_14_0_1 = Ptempx * x_9_0_1 + WPtempx * x_9_0_2;
    QUICKDouble x_14_0_2 = Ptempx * x_9_0_2 + WPtempx * x_9_0_3;
    QUICKDouble x_14_0_3 = Ptempx * x_9_0_3 + WPtempx * x_9_0_4;
    QUICKDouble x_14_0_4 = Ptempx * x_9_0_4 + WPtempx * x_9_0_5;
    QUICKDouble x_21_0_1 = Ptempx * x_14_0_1 + WPtempx * x_14_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_21_0_2 = Ptempx * x_14_0_2 + WPtempx * x_14_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_21_0_3 = Ptempx * x_14_0_3 + WPtempx * x_14_0_4 + ABtemp * (x_9_0_3 - CDcom * x_9_0_4);
    QUICKDouble x_44_0_1 = Ptempx * x_21_0_1 + WPtempx * x_21_0_2 + 2.000000 * ABtemp * (x_14_0_1 - CDcom * x_14_0_2);
    QUICKDouble x_44_0_2 = Ptempx * x_21_0_2 + WPtempx * x_21_0_3 + 2.000000 * ABtemp * (x_14_0_2 - CDcom * x_14_0_3);
    QUICKDouble x_75_0_1 = Ptempx * x_44_0_1 + WPtempx * x_44_0_2 + 3.000000 * ABtemp * (x_21_0_1 - CDcom * x_21_0_2);
    LOCSTORE(store, 90, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_90_0_0 + WQtempy * x_90_0_1 + ABCDtemp * x_75_0_1;
    LOCSTORE(store, 90, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_90_0_0 + WQtempx * x_90_0_1 + 4.000000 * ABCDtemp * x_62_0_1;
    QUICKDouble x_51_0_1 = Ptempx * x_33_0_1 + WPtempx * x_33_0_2;
    QUICKDouble x_51_0_2 = Ptempx * x_33_0_2 + WPtempx * x_33_0_3;
    QUICKDouble x_57_0_0 = Ptempx * x_48_0_0 + WPtempx * x_48_0_1;
    QUICKDouble x_57_0_2 = Ptempx * x_48_0_2 + WPtempx * x_48_0_3;
    QUICKDouble x_76_0_1 = Ptempx * x_51_0_1 + WPtempx * x_51_0_2 + ABtemp * (x_33_0_1 - CDcom * x_33_0_2);
    QUICKDouble x_91_0_0 = Ptempx * x_57_0_0 + WPtempx * x_57_0_1 + ABtemp * (x_48_0_0 - CDcom * x_48_0_1);
    QUICKDouble x_91_0_1 = Ptempx * x_57_0_1 + WPtempx * x_57_0_2 + ABtemp * (x_48_0_1 - CDcom * x_48_0_2);
    LOCSTORE(store, 91, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_91_0_0 + WQtempz * x_91_0_1 + ABCDtemp * x_76_0_1;
    QUICKDouble x_39_0_1 = Ptempx * x_30_0_1 + WPtempx * x_30_0_2;
    QUICKDouble x_39_0_2 = Ptempx * x_30_0_2 + WPtempx * x_30_0_3;
    QUICKDouble x_63_0_1 = Ptempx * x_39_0_1 + WPtempx * x_39_0_2 + ABtemp * (x_30_0_1 - CDcom * x_30_0_2);
    LOCSTORE(store, 91, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_91_0_0 + WQtempy * x_91_0_1 + 4.000000 * ABCDtemp * x_63_0_1;
    LOCSTORE(store, 91, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_91_0_0 + WQtempx * x_91_0_1 + 2.000000 * ABCDtemp * x_57_0_1;
    QUICKDouble x_12_0_1 = Ptempx * x_8_0_1 + WPtempx * x_8_0_2;
    QUICKDouble x_12_0_2 = Ptempx * x_8_0_2 + WPtempx * x_8_0_3;
    QUICKDouble x_12_0_3 = Ptempx * x_8_0_3 + WPtempx * x_8_0_4;
    QUICKDouble x_12_0_4 = Ptempx * x_8_0_4 + WPtempx * x_8_0_5;
    QUICKDouble x_24_0_1 = Ptempx * x_15_0_1 + WPtempx * x_15_0_2;
    QUICKDouble x_24_0_2 = Ptempx * x_15_0_2 + WPtempx * x_15_0_3;
    QUICKDouble x_24_0_3 = Ptempx * x_15_0_3 + WPtempx * x_15_0_4;
    QUICKDouble x_24_0_0 = Ptempx * x_15_0_0 + WPtempx * x_15_0_1;
    QUICKDouble x_24_0_4 = Ptempx * x_15_0_4 + WPtempx * x_15_0_5;
    QUICKDouble x_20_0_1 = Ptempx * x_12_0_1 + WPtempx * x_12_0_2 + ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_20_0_2 = Ptempx * x_12_0_2 + WPtempx * x_12_0_3 + ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_20_0_3 = Ptempx * x_12_0_3 + WPtempx * x_12_0_4 + ABtemp * (x_8_0_3 - CDcom * x_8_0_4);
    QUICKDouble x_37_0_1 = Ptempx * x_24_0_1 + WPtempx * x_24_0_2 + ABtemp * (x_15_0_1 - CDcom * x_15_0_2);
    QUICKDouble x_37_0_2 = Ptempx * x_24_0_2 + WPtempx * x_24_0_3 + ABtemp * (x_15_0_2 - CDcom * x_15_0_3);
    QUICKDouble x_37_0_0 = Ptempx * x_24_0_0 + WPtempx * x_24_0_1 + ABtemp * (x_15_0_0 - CDcom * x_15_0_1);
    QUICKDouble x_37_0_3 = Ptempx * x_24_0_3 + WPtempx * x_24_0_4 + ABtemp * (x_15_0_3 - CDcom * x_15_0_4);
    QUICKDouble x_46_0_1 = Ptempx * x_20_0_1 + WPtempx * x_20_0_2 + 2.000000 * ABtemp * (x_12_0_1 - CDcom * x_12_0_2);
    QUICKDouble x_46_0_2 = Ptempx * x_20_0_2 + WPtempx * x_20_0_3 + 2.000000 * ABtemp * (x_12_0_2 - CDcom * x_12_0_3);
    QUICKDouble x_64_0_1 = Ptempx * x_37_0_1 + WPtempx * x_37_0_2 + 2.000000 * ABtemp * (x_24_0_1 - CDcom * x_24_0_2);
    QUICKDouble x_64_0_0 = Ptempx * x_37_0_0 + WPtempx * x_37_0_1 + 2.000000 * ABtemp * (x_24_0_0 - CDcom * x_24_0_1);
    QUICKDouble x_64_0_2 = Ptempx * x_37_0_2 + WPtempx * x_37_0_3 + 2.000000 * ABtemp * (x_24_0_2 - CDcom * x_24_0_3);
    QUICKDouble x_77_0_1 = Ptempx * x_46_0_1 + WPtempx * x_46_0_2 + 3.000000 * ABtemp * (x_20_0_1 - CDcom * x_20_0_2);
    QUICKDouble x_92_0_0 = Ptempx * x_64_0_0 + WPtempx * x_64_0_1 + 3.000000 * ABtemp * (x_37_0_0 - CDcom * x_37_0_1);
    QUICKDouble x_92_0_1 = Ptempx * x_64_0_1 + WPtempx * x_64_0_2 + 3.000000 * ABtemp * (x_37_0_1 - CDcom * x_37_0_2);
    LOCSTORE(store, 92, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_92_0_0 + WQtempz * x_92_0_1 + ABCDtemp * x_77_0_1;
    LOCSTORE(store, 92, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_92_0_0 + WQtempy * x_92_0_1 + 2.000000 * ABCDtemp * x_56_0_1;
    LOCSTORE(store, 92, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_92_0_0 + WQtempx * x_92_0_1 + 4.000000 * ABCDtemp * x_64_0_1;
    QUICKDouble x_31_0_0 = Ptempy * x_19_0_0 + WPtempy * x_19_0_1;
    QUICKDouble x_31_0_4 = Ptempy * x_19_0_4 + WPtempy * x_19_0_5;
    QUICKDouble x_41_0_0 = Ptempy * x_31_0_0 + WPtempy * x_31_0_1 + ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_41_0_3 = Ptempy * x_31_0_3 + WPtempy * x_31_0_4 + ABtemp * (x_19_0_3 - CDcom * x_19_0_4);
    QUICKDouble x_78_0_1 = Ptempy * x_41_0_1 + WPtempy * x_41_0_2 + 2.000000 * ABtemp * (x_31_0_1 - CDcom * x_31_0_2);
    QUICKDouble x_78_0_0 = Ptempy * x_41_0_0 + WPtempy * x_41_0_1 + 2.000000 * ABtemp * (x_31_0_0 - CDcom * x_31_0_1);
    QUICKDouble x_78_0_2 = Ptempy * x_41_0_2 + WPtempy * x_41_0_3 + 2.000000 * ABtemp * (x_31_0_2 - CDcom * x_31_0_3);
    QUICKDouble x_93_0_0 = Ptempx * x_78_0_0 + WPtempx * x_78_0_1;
    QUICKDouble x_93_0_1 = Ptempx * x_78_0_1 + WPtempx * x_78_0_2;
    LOCSTORE(store, 93, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_93_0_0 + WQtempz * x_93_0_1 + 3.000000 * ABCDtemp * x_60_0_1;
    LOCSTORE(store, 93, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_93_0_0 + WQtempy * x_93_0_1 + 3.000000 * ABCDtemp * x_59_0_1;
    LOCSTORE(store, 93, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_93_0_0 + WQtempx * x_93_0_1 + ABCDtemp * x_78_0_1;
    QUICKDouble x_40_0_0 = Ptempx * x_31_0_0 + WPtempx * x_31_0_1;
    QUICKDouble x_40_0_3 = Ptempx * x_31_0_3 + WPtempx * x_31_0_4;
    QUICKDouble x_61_0_0 = Ptempx * x_40_0_0 + WPtempx * x_40_0_1 + ABtemp * (x_31_0_0 - CDcom * x_31_0_1);
    QUICKDouble x_61_0_2 = Ptempx * x_40_0_2 + WPtempx * x_40_0_3 + ABtemp * (x_31_0_2 - CDcom * x_31_0_3);
    QUICKDouble x_94_0_0 = Ptempx * x_61_0_0 + WPtempx * x_61_0_1 + 2.000000 * ABtemp * (x_40_0_0 - CDcom * x_40_0_1);
    QUICKDouble x_94_0_1 = Ptempx * x_61_0_1 + WPtempx * x_61_0_2 + 2.000000 * ABtemp * (x_40_0_1 - CDcom * x_40_0_2);
    LOCSTORE(store, 94, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_94_0_0 + WQtempz * x_94_0_1 + 3.000000 * ABCDtemp * x_62_0_1;
    QUICKDouble x_27_0_1 = Ptempx * x_19_0_1 + WPtempx * x_19_0_2;
    QUICKDouble x_27_0_2 = Ptempx * x_19_0_2 + WPtempx * x_19_0_3;
    QUICKDouble x_27_0_3 = Ptempx * x_19_0_3 + WPtempx * x_19_0_4;
    QUICKDouble x_43_0_1 = Ptempx * x_27_0_1 + WPtempx * x_27_0_2 + ABtemp * (x_19_0_1 - CDcom * x_19_0_2);
    QUICKDouble x_43_0_2 = Ptempx * x_27_0_2 + WPtempx * x_27_0_3 + ABtemp * (x_19_0_2 - CDcom * x_19_0_3);
    QUICKDouble x_79_0_1 = Ptempx * x_43_0_1 + WPtempx * x_43_0_2 + 2.000000 * ABtemp * (x_27_0_1 - CDcom * x_27_0_2);
    LOCSTORE(store, 94, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_94_0_0 + WQtempy * x_94_0_1 + ABCDtemp * x_79_0_1;
    LOCSTORE(store, 94, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_94_0_0 + WQtempx * x_94_0_1 + 3.000000 * ABCDtemp * x_61_0_1;
    QUICKDouble x_29_0_1 = Ptempx * x_18_0_1 + WPtempx * x_18_0_2;
    QUICKDouble x_29_0_2 = Ptempx * x_18_0_2 + WPtempx * x_18_0_3;
    QUICKDouble x_29_0_3 = Ptempx * x_18_0_3 + WPtempx * x_18_0_4;
    QUICKDouble x_39_0_0 = Ptempx * x_30_0_0 + WPtempx * x_30_0_1;
    QUICKDouble x_39_0_3 = Ptempx * x_30_0_3 + WPtempx * x_30_0_4;
    QUICKDouble x_45_0_1 = Ptempx * x_29_0_1 + WPtempx * x_29_0_2 + ABtemp * (x_18_0_1 - CDcom * x_18_0_2);
    QUICKDouble x_45_0_2 = Ptempx * x_29_0_2 + WPtempx * x_29_0_3 + ABtemp * (x_18_0_2 - CDcom * x_18_0_3);
    QUICKDouble x_63_0_0 = Ptempx * x_39_0_0 + WPtempx * x_39_0_1 + ABtemp * (x_30_0_0 - CDcom * x_30_0_1);
    QUICKDouble x_63_0_2 = Ptempx * x_39_0_2 + WPtempx * x_39_0_3 + ABtemp * (x_30_0_2 - CDcom * x_30_0_3);
    QUICKDouble x_80_0_1 = Ptempx * x_45_0_1 + WPtempx * x_45_0_2 + 2.000000 * ABtemp * (x_29_0_1 - CDcom * x_29_0_2);
    QUICKDouble x_95_0_0 = Ptempx * x_63_0_0 + WPtempx * x_63_0_1 + 2.000000 * ABtemp * (x_39_0_0 - CDcom * x_39_0_1);
    QUICKDouble x_95_0_1 = Ptempx * x_63_0_1 + WPtempx * x_63_0_2 + 2.000000 * ABtemp * (x_39_0_1 - CDcom * x_39_0_2);
    LOCSTORE(store, 95, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_95_0_0 + WQtempz * x_95_0_1 + ABCDtemp * x_80_0_1;
    LOCSTORE(store, 95, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_95_0_0 + WQtempy * x_95_0_1 + 3.000000 * ABCDtemp * x_64_0_1;
    LOCSTORE(store, 95, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_95_0_0 + WQtempx * x_95_0_1 + 3.000000 * ABCDtemp * x_63_0_1;
    QUICKDouble x_35_0_1 = Ptempx * x_22_0_1 + WPtempx * x_22_0_2;
    QUICKDouble x_35_0_2 = Ptempx * x_22_0_2 + WPtempx * x_22_0_3;
    QUICKDouble x_35_0_0 = Ptempx * x_22_0_0 + WPtempx * x_22_0_1;
    QUICKDouble x_35_0_3 = Ptempx * x_22_0_3 + WPtempx * x_22_0_4;
    QUICKDouble x_65_0_1 = Ptempx * x_35_0_1 + WPtempx * x_35_0_2 + ABtemp * (x_22_0_1 - CDcom * x_22_0_2);
    QUICKDouble x_65_0_0 = Ptempx * x_35_0_0 + WPtempx * x_35_0_1 + ABtemp * (x_22_0_0 - CDcom * x_22_0_1);
    QUICKDouble x_65_0_2 = Ptempx * x_35_0_2 + WPtempx * x_35_0_3 + ABtemp * (x_22_0_2 - CDcom * x_22_0_3);
    QUICKDouble x_96_0_0 = Ptempx * x_65_0_0 + WPtempx * x_65_0_1 + 2.000000 * ABtemp * (x_35_0_0 - CDcom * x_35_0_1);
    QUICKDouble x_96_0_1 = Ptempx * x_65_0_1 + WPtempx * x_65_0_2 + 2.000000 * ABtemp * (x_35_0_1 - CDcom * x_35_0_2);
    LOCSTORE(store, 96, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_96_0_0 + WQtempz * x_96_0_1 + 2.000000 * ABCDtemp * x_64_0_1;
    LOCSTORE(store, 96, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_96_0_0 + WQtempy * x_96_0_1 + 2.000000 * ABCDtemp * x_62_0_1;
    LOCSTORE(store, 96, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_96_0_0 + WQtempx * x_96_0_1 + 3.000000 * ABCDtemp * x_65_0_1;
    QUICKDouble x_60_0_0 = Ptempx * x_42_0_0 + WPtempx * x_42_0_1;
    QUICKDouble x_60_0_2 = Ptempx * x_42_0_2 + WPtempx * x_42_0_3;
    QUICKDouble x_97_0_0 = Ptempx * x_60_0_0 + WPtempx * x_60_0_1 + ABtemp * (x_42_0_0 - CDcom * x_42_0_1);
    QUICKDouble x_97_0_1 = Ptempx * x_60_0_1 + WPtempx * x_60_0_2 + ABtemp * (x_42_0_1 - CDcom * x_42_0_2);
    LOCSTORE(store, 97, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_97_0_0 + WQtempz * x_97_0_1 + 2.000000 * ABCDtemp * x_63_0_1;
    LOCSTORE(store, 97, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_97_0_0 + WQtempy * x_97_0_1 + 3.000000 * ABCDtemp * x_65_0_1;
    LOCSTORE(store, 97, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_97_0_0 + WQtempx * x_97_0_1 + 2.000000 * ABCDtemp * x_60_0_1;
    QUICKDouble x_59_0_0 = Ptempx * x_41_0_0 + WPtempx * x_41_0_1;
    QUICKDouble x_59_0_2 = Ptempx * x_41_0_2 + WPtempx * x_41_0_3;
    QUICKDouble x_98_0_0 = Ptempx * x_59_0_0 + WPtempx * x_59_0_1 + ABtemp * (x_41_0_0 - CDcom * x_41_0_1);
    QUICKDouble x_98_0_1 = Ptempx * x_59_0_1 + WPtempx * x_59_0_2 + ABtemp * (x_41_0_1 - CDcom * x_41_0_2);
    LOCSTORE(store, 98, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_98_0_0 + WQtempz * x_98_0_1 + 3.000000 * ABCDtemp * x_65_0_1;
    LOCSTORE(store, 98, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_98_0_0 + WQtempy * x_98_0_1 + 2.000000 * ABCDtemp * x_61_0_1;
    LOCSTORE(store, 98, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_98_0_0 + WQtempx * x_98_0_1 + 2.000000 * ABCDtemp * x_59_0_1;
    QUICKDouble x_83_0_1 = Ptempz * x_55_0_1 + WPtempz * x_55_0_2 + 5.000000 * ABtemp * (x_34_0_1 - CDcom * x_34_0_2);
    QUICKDouble x_83_0_0 = Ptempz * x_55_0_0 + WPtempz * x_55_0_1 + 5.000000 * ABtemp * (x_34_0_0 - CDcom * x_34_0_1);
    QUICKDouble x_83_0_2 = Ptempz * x_55_0_2 + WPtempz * x_55_0_3 + 5.000000 * ABtemp * (x_34_0_2 - CDcom * x_34_0_3);
    QUICKDouble x_99_0_0 = Ptempy * x_83_0_0 + WPtempy * x_83_0_1;
    QUICKDouble x_99_0_1 = Ptempy * x_83_0_1 + WPtempy * x_83_0_2;
    LOCSTORE(store, 99, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_99_0_0 + WQtempz * x_99_0_1 + 6.000000 * ABCDtemp * x_66_0_1;
    LOCSTORE(store, 99, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_99_0_0 + WQtempy * x_99_0_1 + ABCDtemp * x_83_0_1;
    LOCSTORE(store, 99, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_99_0_0 + WQtempx * x_99_0_1;
    QUICKDouble x_82_0_1 = Ptempy * x_54_0_1 + WPtempy * x_54_0_2 + 5.000000 * ABtemp * (x_33_0_1 - CDcom * x_33_0_2);
    QUICKDouble x_100_0_0 = Ptempy * x_67_0_0 + WPtempy * x_67_0_1 + 5.000000 * ABtemp * (x_48_0_0 - CDcom * x_48_0_1);
    QUICKDouble x_100_0_1 = Ptempy * x_67_0_1 + WPtempy * x_67_0_2 + 5.000000 * ABtemp * (x_48_0_1 - CDcom * x_48_0_2);
    LOCSTORE(store, 100, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_100_0_0 + WQtempz * x_100_0_1 + ABCDtemp * x_82_0_1;
    LOCSTORE(store, 100, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_100_0_0 + WQtempy * x_100_0_1 + 6.000000 * ABCDtemp * x_67_0_1;
    LOCSTORE(store, 100, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_100_0_0 + WQtempx * x_100_0_1;
    QUICKDouble x_101_0_0 = Ptempx * x_83_0_0 + WPtempx * x_83_0_1;
    QUICKDouble x_101_0_1 = Ptempx * x_83_0_1 + WPtempx * x_83_0_2;
    LOCSTORE(store, 101, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_101_0_0 + WQtempz * x_101_0_1 + 6.000000 * ABCDtemp * x_68_0_1;
    LOCSTORE(store, 101, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_101_0_0 + WQtempy * x_101_0_1;
    LOCSTORE(store, 101, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_101_0_0 + WQtempx * x_101_0_1 + ABCDtemp * x_83_0_1;
    QUICKDouble x_1_0_1 = Ptempx * VY_1 + WPtempx * VY_2;
    QUICKDouble x_1_0_2 = Ptempx * VY_2 + WPtempx * VY_3;
    QUICKDouble x_1_0_3 = Ptempx * VY_3 + WPtempx * VY_4;
    QUICKDouble x_1_0_4 = Ptempx * VY_4 + WPtempx * VY_5;
    QUICKDouble x_1_0_5 = Ptempx * VY_5 + WPtempx * VY_6;
    QUICKDouble x_1_0_6 = Ptempx * VY_6 + WPtempx * VY_7;
    QUICKDouble x_6_0_0 = Ptempx * x_3_0_0 + WPtempx * x_3_0_1;
    QUICKDouble x_6_0_6 = Ptempx * x_3_0_6 + WPtempx * x_3_0_7;
    QUICKDouble x_7_0_1 = Ptempx * x_1_0_1 + WPtempx * x_1_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_7_0_2 = Ptempx * x_1_0_2 + WPtempx * x_1_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_7_0_3 = Ptempx * x_1_0_3 + WPtempx * x_1_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_7_0_4 = Ptempx * x_1_0_4 + WPtempx * x_1_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_7_0_5 = Ptempx * x_1_0_5 + WPtempx * x_1_0_6 + ABtemp * (VY_5 - CDcom * VY_6);
    QUICKDouble x_13_0_0 = Ptempx * x_6_0_0 + WPtempx * x_6_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_13_0_5 = Ptempx * x_6_0_5 + WPtempx * x_6_0_6 + ABtemp * (x_3_0_5 - CDcom * x_3_0_6);
    QUICKDouble x_17_0_1 = Ptempx * x_7_0_1 + WPtempx * x_7_0_2 + 2.000000 * ABtemp * (x_1_0_1 - CDcom * x_1_0_2);
    QUICKDouble x_17_0_2 = Ptempx * x_7_0_2 + WPtempx * x_7_0_3 + 2.000000 * ABtemp * (x_1_0_2 - CDcom * x_1_0_3);
    QUICKDouble x_17_0_3 = Ptempx * x_7_0_3 + WPtempx * x_7_0_4 + 2.000000 * ABtemp * (x_1_0_3 - CDcom * x_1_0_4);
    QUICKDouble x_17_0_4 = Ptempx * x_7_0_4 + WPtempx * x_7_0_5 + 2.000000 * ABtemp * (x_1_0_4 - CDcom * x_1_0_5);
    QUICKDouble x_26_0_0 = Ptempx * x_13_0_0 + WPtempx * x_13_0_1 + 2.000000 * ABtemp * (x_6_0_0 - CDcom * x_6_0_1);
    QUICKDouble x_26_0_4 = Ptempx * x_13_0_4 + WPtempx * x_13_0_5 + 2.000000 * ABtemp * (x_6_0_4 - CDcom * x_6_0_5);
    QUICKDouble x_32_0_1 = Ptempx * x_17_0_1 + WPtempx * x_17_0_2 + 3.000000 * ABtemp * (x_7_0_1 - CDcom * x_7_0_2);
    QUICKDouble x_32_0_2 = Ptempx * x_17_0_2 + WPtempx * x_17_0_3 + 3.000000 * ABtemp * (x_7_0_2 - CDcom * x_7_0_3);
    QUICKDouble x_32_0_3 = Ptempx * x_17_0_3 + WPtempx * x_17_0_4 + 3.000000 * ABtemp * (x_7_0_3 - CDcom * x_7_0_4);
    QUICKDouble x_50_0_0 = Ptempx * x_26_0_0 + WPtempx * x_26_0_1 + 3.000000 * ABtemp * (x_13_0_0 - CDcom * x_13_0_1);
    QUICKDouble x_50_0_3 = Ptempx * x_26_0_3 + WPtempx * x_26_0_4 + 3.000000 * ABtemp * (x_13_0_3 - CDcom * x_13_0_4);
    QUICKDouble x_53_0_1 = Ptempx * x_32_0_1 + WPtempx * x_32_0_2 + 4.000000 * ABtemp * (x_17_0_1 - CDcom * x_17_0_2);
    QUICKDouble x_53_0_2 = Ptempx * x_32_0_2 + WPtempx * x_32_0_3 + 4.000000 * ABtemp * (x_17_0_2 - CDcom * x_17_0_3);
    QUICKDouble x_69_0_0 = Ptempx * x_50_0_0 + WPtempx * x_50_0_1 + 4.000000 * ABtemp * (x_26_0_0 - CDcom * x_26_0_1);
    QUICKDouble x_69_0_2 = Ptempx * x_50_0_2 + WPtempx * x_50_0_3 + 4.000000 * ABtemp * (x_26_0_2 - CDcom * x_26_0_3);
    QUICKDouble x_81_0_1 = Ptempx * x_53_0_1 + WPtempx * x_53_0_2 + 5.000000 * ABtemp * (x_32_0_1 - CDcom * x_32_0_2);
    QUICKDouble x_102_0_0 = Ptempx * x_69_0_0 + WPtempx * x_69_0_1 + 5.000000 * ABtemp * (x_50_0_0 - CDcom * x_50_0_1);
    QUICKDouble x_102_0_1 = Ptempx * x_69_0_1 + WPtempx * x_69_0_2 + 5.000000 * ABtemp * (x_50_0_1 - CDcom * x_50_0_2);
    LOCSTORE(store, 102, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_102_0_0 + WQtempz * x_102_0_1 + ABCDtemp * x_81_0_1;
    LOCSTORE(store, 102, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_102_0_0 + WQtempy * x_102_0_1;
    LOCSTORE(store, 102, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_102_0_0 + WQtempx * x_102_0_1 + 6.000000 * ABCDtemp * x_69_0_1;
    QUICKDouble x_2_0_0 = Ptempy * VY_0 + WPtempy * VY_1;
    QUICKDouble x_2_0_7 = Ptempy * VY_7 + WPtempy * VY_8;
    QUICKDouble x_8_0_0 = Ptempy * x_2_0_0 + WPtempy * x_2_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_8_0_6 = Ptempy * x_2_0_6 + WPtempy * x_2_0_7 + ABtemp * (VY_6 - CDcom * VY_7);
    QUICKDouble x_18_0_0 = Ptempy * x_8_0_0 + WPtempy * x_8_0_1 + 2.000000 * ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_18_0_5 = Ptempy * x_8_0_5 + WPtempy * x_8_0_6 + 2.000000 * ABtemp * (x_2_0_5 - CDcom * x_2_0_6);
    QUICKDouble x_33_0_0 = Ptempy * x_18_0_0 + WPtempy * x_18_0_1 + 3.000000 * ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_33_0_4 = Ptempy * x_18_0_4 + WPtempy * x_18_0_5 + 3.000000 * ABtemp * (x_8_0_4 - CDcom * x_8_0_5);
    QUICKDouble x_54_0_0 = Ptempy * x_33_0_0 + WPtempy * x_33_0_1 + 4.000000 * ABtemp * (x_18_0_0 - CDcom * x_18_0_1);
    QUICKDouble x_54_0_3 = Ptempy * x_33_0_3 + WPtempy * x_33_0_4 + 4.000000 * ABtemp * (x_18_0_3 - CDcom * x_18_0_4);
    QUICKDouble x_82_0_0 = Ptempy * x_54_0_0 + WPtempy * x_54_0_1 + 5.000000 * ABtemp * (x_33_0_0 - CDcom * x_33_0_1);
    QUICKDouble x_82_0_2 = Ptempy * x_54_0_2 + WPtempy * x_54_0_3 + 5.000000 * ABtemp * (x_33_0_2 - CDcom * x_33_0_3);
    QUICKDouble x_103_0_0 = Ptempx * x_82_0_0 + WPtempx * x_82_0_1;
    QUICKDouble x_103_0_1 = Ptempx * x_82_0_1 + WPtempx * x_82_0_2;
    LOCSTORE(store, 103, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_103_0_0 + WQtempz * x_103_0_1;
    LOCSTORE(store, 103, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_103_0_0 + WQtempy * x_103_0_1 + 6.000000 * ABCDtemp * x_70_0_1;
    LOCSTORE(store, 103, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_103_0_0 + WQtempx * x_103_0_1 + ABCDtemp * x_82_0_1;
    QUICKDouble x_4_0_0 = Ptempx * x_2_0_0 + WPtempx * x_2_0_1;
    QUICKDouble x_4_0_6 = Ptempx * x_2_0_6 + WPtempx * x_2_0_7;
    QUICKDouble x_11_0_0 = Ptempx * x_4_0_0 + WPtempx * x_4_0_1 + ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_11_0_5 = Ptempx * x_4_0_5 + WPtempx * x_4_0_6 + ABtemp * (x_2_0_5 - CDcom * x_2_0_6);
    QUICKDouble x_28_0_0 = Ptempx * x_11_0_0 + WPtempx * x_11_0_1 + 2.000000 * ABtemp * (x_4_0_0 - CDcom * x_4_0_1);
    QUICKDouble x_28_0_4 = Ptempx * x_11_0_4 + WPtempx * x_11_0_5 + 2.000000 * ABtemp * (x_4_0_4 - CDcom * x_4_0_5);
    QUICKDouble x_52_0_0 = Ptempx * x_28_0_0 + WPtempx * x_28_0_1 + 3.000000 * ABtemp * (x_11_0_0 - CDcom * x_11_0_1);
    QUICKDouble x_52_0_3 = Ptempx * x_28_0_3 + WPtempx * x_28_0_4 + 3.000000 * ABtemp * (x_11_0_3 - CDcom * x_11_0_4);
    QUICKDouble x_71_0_0 = Ptempx * x_52_0_0 + WPtempx * x_52_0_1 + 4.000000 * ABtemp * (x_28_0_0 - CDcom * x_28_0_1);
    QUICKDouble x_71_0_2 = Ptempx * x_52_0_2 + WPtempx * x_52_0_3 + 4.000000 * ABtemp * (x_28_0_2 - CDcom * x_28_0_3);
    QUICKDouble x_104_0_0 = Ptempx * x_71_0_0 + WPtempx * x_71_0_1 + 5.000000 * ABtemp * (x_52_0_0 - CDcom * x_52_0_1);
    QUICKDouble x_104_0_1 = Ptempx * x_71_0_1 + WPtempx * x_71_0_2 + 5.000000 * ABtemp * (x_52_0_1 - CDcom * x_52_0_2);
    LOCSTORE(store, 104, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_104_0_0 + WQtempz * x_104_0_1;
    LOCSTORE(store, 104, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_104_0_0 + WQtempy * x_104_0_1 + ABCDtemp * x_81_0_1;
    LOCSTORE(store, 104, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_104_0_0 + WQtempx * x_104_0_1 + 6.000000 * ABCDtemp * x_71_0_1;
    QUICKDouble x_105_0_0 = Ptempy * x_66_0_0 + WPtempy * x_66_0_1 + ABtemp * (x_55_0_0 - CDcom * x_55_0_1);
    QUICKDouble x_105_0_1 = Ptempy * x_66_0_1 + WPtempy * x_66_0_2 + ABtemp * (x_55_0_1 - CDcom * x_55_0_2);
    LOCSTORE(store, 105, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_105_0_0 + WQtempz * x_105_0_1 + 5.000000 * ABCDtemp * x_72_0_1;
    LOCSTORE(store, 105, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_105_0_0 + WQtempy * x_105_0_1 + 2.000000 * ABCDtemp * x_66_0_1;
    LOCSTORE(store, 105, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_105_0_0 + WQtempx * x_105_0_1;
    QUICKDouble x_106_0_0 = Ptempy * x_73_0_0 + WPtempy * x_73_0_1 + 4.000000 * ABtemp * (x_42_0_0 - CDcom * x_42_0_1);
    QUICKDouble x_106_0_1 = Ptempy * x_73_0_1 + WPtempy * x_73_0_2 + 4.000000 * ABtemp * (x_42_0_1 - CDcom * x_42_0_2);
    LOCSTORE(store, 106, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_106_0_0 + WQtempz * x_106_0_1 + 2.000000 * ABCDtemp * x_67_0_1;
    LOCSTORE(store, 106, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_106_0_0 + WQtempy * x_106_0_1 + 5.000000 * ABCDtemp * x_73_0_1;
    LOCSTORE(store, 106, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_106_0_0 + WQtempx * x_106_0_1;
    QUICKDouble x_68_0_0 = Ptempx * x_55_0_0 + WPtempx * x_55_0_1;
    QUICKDouble x_68_0_2 = Ptempx * x_55_0_2 + WPtempx * x_55_0_3;
    QUICKDouble x_107_0_0 = Ptempx * x_68_0_0 + WPtempx * x_68_0_1 + ABtemp * (x_55_0_0 - CDcom * x_55_0_1);
    QUICKDouble x_107_0_1 = Ptempx * x_68_0_1 + WPtempx * x_68_0_2 + ABtemp * (x_55_0_1 - CDcom * x_55_0_2);
    LOCSTORE(store, 107, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_107_0_0 + WQtempz * x_107_0_1 + 5.000000 * ABCDtemp * x_74_0_1;
    LOCSTORE(store, 107, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_107_0_0 + WQtempy * x_107_0_1;
    LOCSTORE(store, 107, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_107_0_0 + WQtempx * x_107_0_1 + 2.000000 * ABCDtemp * x_68_0_1;
    QUICKDouble x_14_0_0 = Ptempx * x_9_0_0 + WPtempx * x_9_0_1;
    QUICKDouble x_14_0_5 = Ptempx * x_9_0_5 + WPtempx * x_9_0_6;
    QUICKDouble x_21_0_0 = Ptempx * x_14_0_0 + WPtempx * x_14_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_21_0_4 = Ptempx * x_14_0_4 + WPtempx * x_14_0_5 + ABtemp * (x_9_0_4 - CDcom * x_9_0_5);
    QUICKDouble x_44_0_0 = Ptempx * x_21_0_0 + WPtempx * x_21_0_1 + 2.000000 * ABtemp * (x_14_0_0 - CDcom * x_14_0_1);
    QUICKDouble x_44_0_3 = Ptempx * x_21_0_3 + WPtempx * x_21_0_4 + 2.000000 * ABtemp * (x_14_0_3 - CDcom * x_14_0_4);
    QUICKDouble x_75_0_0 = Ptempx * x_44_0_0 + WPtempx * x_44_0_1 + 3.000000 * ABtemp * (x_21_0_0 - CDcom * x_21_0_1);
    QUICKDouble x_75_0_2 = Ptempx * x_44_0_2 + WPtempx * x_44_0_3 + 3.000000 * ABtemp * (x_21_0_2 - CDcom * x_21_0_3);
    QUICKDouble x_108_0_0 = Ptempx * x_75_0_0 + WPtempx * x_75_0_1 + 4.000000 * ABtemp * (x_44_0_0 - CDcom * x_44_0_1);
    QUICKDouble x_108_0_1 = Ptempx * x_75_0_1 + WPtempx * x_75_0_2 + 4.000000 * ABtemp * (x_44_0_1 - CDcom * x_44_0_2);
    LOCSTORE(store, 108, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_108_0_0 + WQtempz * x_108_0_1 + 2.000000 * ABCDtemp * x_69_0_1;
    LOCSTORE(store, 108, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_108_0_0 + WQtempy * x_108_0_1;
    LOCSTORE(store, 108, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_108_0_0 + WQtempx * x_108_0_1 + 5.000000 * ABCDtemp * x_75_0_1;
    QUICKDouble x_70_0_0 = Ptempx * x_54_0_0 + WPtempx * x_54_0_1;
    QUICKDouble x_70_0_2 = Ptempx * x_54_0_2 + WPtempx * x_54_0_3;
    QUICKDouble x_109_0_0 = Ptempx * x_70_0_0 + WPtempx * x_70_0_1 + ABtemp * (x_54_0_0 - CDcom * x_54_0_1);
    QUICKDouble x_109_0_1 = Ptempx * x_70_0_1 + WPtempx * x_70_0_2 + ABtemp * (x_54_0_1 - CDcom * x_54_0_2);
    LOCSTORE(store, 109, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_109_0_0 + WQtempz * x_109_0_1;
    LOCSTORE(store, 109, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_109_0_0 + WQtempy * x_109_0_1 + 5.000000 * ABCDtemp * x_76_0_1;
    LOCSTORE(store, 109, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_109_0_0 + WQtempx * x_109_0_1 + 2.000000 * ABCDtemp * x_70_0_1;
    QUICKDouble x_12_0_0 = Ptempx * x_8_0_0 + WPtempx * x_8_0_1;
    QUICKDouble x_12_0_5 = Ptempx * x_8_0_5 + WPtempx * x_8_0_6;
    QUICKDouble x_20_0_0 = Ptempx * x_12_0_0 + WPtempx * x_12_0_1 + ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_20_0_4 = Ptempx * x_12_0_4 + WPtempx * x_12_0_5 + ABtemp * (x_8_0_4 - CDcom * x_8_0_5);
    QUICKDouble x_46_0_0 = Ptempx * x_20_0_0 + WPtempx * x_20_0_1 + 2.000000 * ABtemp * (x_12_0_0 - CDcom * x_12_0_1);
    QUICKDouble x_46_0_3 = Ptempx * x_20_0_3 + WPtempx * x_20_0_4 + 2.000000 * ABtemp * (x_12_0_3 - CDcom * x_12_0_4);
    QUICKDouble x_77_0_0 = Ptempx * x_46_0_0 + WPtempx * x_46_0_1 + 3.000000 * ABtemp * (x_20_0_0 - CDcom * x_20_0_1);
    QUICKDouble x_77_0_2 = Ptempx * x_46_0_2 + WPtempx * x_46_0_3 + 3.000000 * ABtemp * (x_20_0_2 - CDcom * x_20_0_3);
    QUICKDouble x_110_0_0 = Ptempx * x_77_0_0 + WPtempx * x_77_0_1 + 4.000000 * ABtemp * (x_46_0_0 - CDcom * x_46_0_1);
    QUICKDouble x_110_0_1 = Ptempx * x_77_0_1 + WPtempx * x_77_0_2 + 4.000000 * ABtemp * (x_46_0_1 - CDcom * x_46_0_2);
    LOCSTORE(store, 110, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_110_0_0 + WQtempz * x_110_0_1;
    LOCSTORE(store, 110, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_110_0_0 + WQtempy * x_110_0_1 + 2.000000 * ABCDtemp * x_71_0_1;
    LOCSTORE(store, 110, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_110_0_0 + WQtempx * x_110_0_1 + 5.000000 * ABCDtemp * x_77_0_1;
    QUICKDouble x_111_0_0 = Ptempy * x_72_0_0 + WPtempy * x_72_0_1 + 2.000000 * ABtemp * (x_47_0_0 - CDcom * x_47_0_1);
    QUICKDouble x_111_0_1 = Ptempy * x_72_0_1 + WPtempy * x_72_0_2 + 2.000000 * ABtemp * (x_47_0_1 - CDcom * x_47_0_2);
    LOCSTORE(store, 111, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_111_0_0 + WQtempz * x_111_0_1 + 4.000000 * ABCDtemp * x_78_0_1;
    LOCSTORE(store, 111, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_111_0_0 + WQtempy * x_111_0_1 + 3.000000 * ABCDtemp * x_72_0_1;
    LOCSTORE(store, 111, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_111_0_0 + WQtempx * x_111_0_1;
    QUICKDouble x_112_0_0 = Ptempy * x_78_0_0 + WPtempy * x_78_0_1 + 3.000000 * ABtemp * (x_41_0_0 - CDcom * x_41_0_1);
    QUICKDouble x_112_0_1 = Ptempy * x_78_0_1 + WPtempy * x_78_0_2 + 3.000000 * ABtemp * (x_41_0_1 - CDcom * x_41_0_2);
    LOCSTORE(store, 112, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_112_0_0 + WQtempz * x_112_0_1 + 3.000000 * ABCDtemp * x_73_0_1;
    LOCSTORE(store, 112, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_112_0_0 + WQtempy * x_112_0_1 + 4.000000 * ABCDtemp * x_78_0_1;
    LOCSTORE(store, 112, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_112_0_0 + WQtempx * x_112_0_1;
    QUICKDouble x_49_0_0 = Ptempx * x_34_0_0 + WPtempx * x_34_0_1;
    QUICKDouble x_49_0_3 = Ptempx * x_34_0_3 + WPtempx * x_34_0_4;
    QUICKDouble x_74_0_0 = Ptempx * x_49_0_0 + WPtempx * x_49_0_1 + ABtemp * (x_34_0_0 - CDcom * x_34_0_1);
    QUICKDouble x_74_0_2 = Ptempx * x_49_0_2 + WPtempx * x_49_0_3 + ABtemp * (x_34_0_2 - CDcom * x_34_0_3);
    QUICKDouble x_113_0_0 = Ptempx * x_74_0_0 + WPtempx * x_74_0_1 + 2.000000 * ABtemp * (x_49_0_0 - CDcom * x_49_0_1);
    QUICKDouble x_113_0_1 = Ptempx * x_74_0_1 + WPtempx * x_74_0_2 + 2.000000 * ABtemp * (x_49_0_1 - CDcom * x_49_0_2);
    LOCSTORE(store, 113, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_113_0_0 + WQtempz * x_113_0_1 + 4.000000 * ABCDtemp * x_79_0_1;
    LOCSTORE(store, 113, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_113_0_0 + WQtempy * x_113_0_1;
    LOCSTORE(store, 113, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_113_0_0 + WQtempx * x_113_0_1 + 3.000000 * ABCDtemp * x_74_0_1;
    QUICKDouble x_27_0_0 = Ptempx * x_19_0_0 + WPtempx * x_19_0_1;
    QUICKDouble x_27_0_4 = Ptempx * x_19_0_4 + WPtempx * x_19_0_5;
    QUICKDouble x_43_0_0 = Ptempx * x_27_0_0 + WPtempx * x_27_0_1 + ABtemp * (x_19_0_0 - CDcom * x_19_0_1);
    QUICKDouble x_43_0_3 = Ptempx * x_27_0_3 + WPtempx * x_27_0_4 + ABtemp * (x_19_0_3 - CDcom * x_19_0_4);
    QUICKDouble x_79_0_0 = Ptempx * x_43_0_0 + WPtempx * x_43_0_1 + 2.000000 * ABtemp * (x_27_0_0 - CDcom * x_27_0_1);
    QUICKDouble x_79_0_2 = Ptempx * x_43_0_2 + WPtempx * x_43_0_3 + 2.000000 * ABtemp * (x_27_0_2 - CDcom * x_27_0_3);
    QUICKDouble x_114_0_0 = Ptempx * x_79_0_0 + WPtempx * x_79_0_1 + 3.000000 * ABtemp * (x_43_0_0 - CDcom * x_43_0_1);
    QUICKDouble x_114_0_1 = Ptempx * x_79_0_1 + WPtempx * x_79_0_2 + 3.000000 * ABtemp * (x_43_0_1 - CDcom * x_43_0_2);
    LOCSTORE(store, 114, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_114_0_0 + WQtempz * x_114_0_1 + 3.000000 * ABCDtemp * x_75_0_1;
    LOCSTORE(store, 114, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_114_0_0 + WQtempy * x_114_0_1;
    LOCSTORE(store, 114, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_114_0_0 + WQtempx * x_114_0_1 + 4.000000 * ABCDtemp * x_79_0_1;
    QUICKDouble x_51_0_0 = Ptempx * x_33_0_0 + WPtempx * x_33_0_1;
    QUICKDouble x_51_0_3 = Ptempx * x_33_0_3 + WPtempx * x_33_0_4;
    QUICKDouble x_76_0_0 = Ptempx * x_51_0_0 + WPtempx * x_51_0_1 + ABtemp * (x_33_0_0 - CDcom * x_33_0_1);
    QUICKDouble x_76_0_2 = Ptempx * x_51_0_2 + WPtempx * x_51_0_3 + ABtemp * (x_33_0_2 - CDcom * x_33_0_3);
    QUICKDouble x_115_0_0 = Ptempx * x_76_0_0 + WPtempx * x_76_0_1 + 2.000000 * ABtemp * (x_51_0_0 - CDcom * x_51_0_1);
    QUICKDouble x_115_0_1 = Ptempx * x_76_0_1 + WPtempx * x_76_0_2 + 2.000000 * ABtemp * (x_51_0_1 - CDcom * x_51_0_2);
    LOCSTORE(store, 115, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_115_0_0 + WQtempz * x_115_0_1;
    LOCSTORE(store, 115, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_115_0_0 + WQtempy * x_115_0_1 + 4.000000 * ABCDtemp * x_80_0_1;
    LOCSTORE(store, 115, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_115_0_0 + WQtempx * x_115_0_1 + 3.000000 * ABCDtemp * x_76_0_1;
    QUICKDouble x_29_0_0 = Ptempx * x_18_0_0 + WPtempx * x_18_0_1;
    QUICKDouble x_29_0_4 = Ptempx * x_18_0_4 + WPtempx * x_18_0_5;
    QUICKDouble x_45_0_0 = Ptempx * x_29_0_0 + WPtempx * x_29_0_1 + ABtemp * (x_18_0_0 - CDcom * x_18_0_1);
    QUICKDouble x_45_0_3 = Ptempx * x_29_0_3 + WPtempx * x_29_0_4 + ABtemp * (x_18_0_3 - CDcom * x_18_0_4);
    QUICKDouble x_80_0_0 = Ptempx * x_45_0_0 + WPtempx * x_45_0_1 + 2.000000 * ABtemp * (x_29_0_0 - CDcom * x_29_0_1);
    QUICKDouble x_80_0_2 = Ptempx * x_45_0_2 + WPtempx * x_45_0_3 + 2.000000 * ABtemp * (x_29_0_2 - CDcom * x_29_0_3);
    QUICKDouble x_116_0_0 = Ptempx * x_80_0_0 + WPtempx * x_80_0_1 + 3.000000 * ABtemp * (x_45_0_0 - CDcom * x_45_0_1);
    QUICKDouble x_116_0_1 = Ptempx * x_80_0_1 + WPtempx * x_80_0_2 + 3.000000 * ABtemp * (x_45_0_1 - CDcom * x_45_0_2);
    LOCSTORE(store, 116, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_116_0_0 + WQtempz * x_116_0_1;
    LOCSTORE(store, 116, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_116_0_0 + WQtempy * x_116_0_1 + 3.000000 * ABCDtemp * x_77_0_1;
    LOCSTORE(store, 116, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_116_0_0 + WQtempx * x_116_0_1 + 4.000000 * ABCDtemp * x_80_0_1;
    QUICKDouble x_1_0_0 = Ptempx * VY_0 + WPtempx * VY_1;
    QUICKDouble x_1_0_7 = Ptempx * VY_7 + WPtempx * VY_8;
    QUICKDouble x_7_0_0 = Ptempx * x_1_0_0 + WPtempx * x_1_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_7_0_6 = Ptempx * x_1_0_6 + WPtempx * x_1_0_7 + ABtemp * (VY_6 - CDcom * VY_7);
    QUICKDouble x_17_0_0 = Ptempx * x_7_0_0 + WPtempx * x_7_0_1 + 2.000000 * ABtemp * (x_1_0_0 - CDcom * x_1_0_1);
    QUICKDouble x_17_0_5 = Ptempx * x_7_0_5 + WPtempx * x_7_0_6 + 2.000000 * ABtemp * (x_1_0_5 - CDcom * x_1_0_6);
    QUICKDouble x_32_0_0 = Ptempx * x_17_0_0 + WPtempx * x_17_0_1 + 3.000000 * ABtemp * (x_7_0_0 - CDcom * x_7_0_1);
    QUICKDouble x_32_0_4 = Ptempx * x_17_0_4 + WPtempx * x_17_0_5 + 3.000000 * ABtemp * (x_7_0_4 - CDcom * x_7_0_5);
    QUICKDouble x_53_0_0 = Ptempx * x_32_0_0 + WPtempx * x_32_0_1 + 4.000000 * ABtemp * (x_17_0_0 - CDcom * x_17_0_1);
    QUICKDouble x_53_0_3 = Ptempx * x_32_0_3 + WPtempx * x_32_0_4 + 4.000000 * ABtemp * (x_17_0_3 - CDcom * x_17_0_4);
    QUICKDouble x_81_0_0 = Ptempx * x_53_0_0 + WPtempx * x_53_0_1 + 5.000000 * ABtemp * (x_32_0_0 - CDcom * x_32_0_1);
    QUICKDouble x_81_0_2 = Ptempx * x_53_0_2 + WPtempx * x_53_0_3 + 5.000000 * ABtemp * (x_32_0_2 - CDcom * x_32_0_3);
    QUICKDouble x_117_0_0 = Ptempx * x_81_0_0 + WPtempx * x_81_0_1 + 6.000000 * ABtemp * (x_53_0_0 - CDcom * x_53_0_1);
    QUICKDouble x_117_0_1 = Ptempx * x_81_0_1 + WPtempx * x_81_0_2 + 6.000000 * ABtemp * (x_53_0_1 - CDcom * x_53_0_2);
    LOCSTORE(store, 117, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_117_0_0 + WQtempz * x_117_0_1;
    LOCSTORE(store, 117, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_117_0_0 + WQtempy * x_117_0_1;
    LOCSTORE(store, 117, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_117_0_0 + WQtempx * x_117_0_1 + 7.000000 * ABCDtemp * x_81_0_1;
    QUICKDouble x_118_0_0 = Ptempy * x_82_0_0 + WPtempy * x_82_0_1 + 6.000000 * ABtemp * (x_54_0_0 - CDcom * x_54_0_1);
    QUICKDouble x_118_0_1 = Ptempy * x_82_0_1 + WPtempy * x_82_0_2 + 6.000000 * ABtemp * (x_54_0_1 - CDcom * x_54_0_2);
    LOCSTORE(store, 118, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_118_0_0 + WQtempz * x_118_0_1;
    LOCSTORE(store, 118, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_118_0_0 + WQtempy * x_118_0_1 + 7.000000 * ABCDtemp * x_82_0_1;
    LOCSTORE(store, 118, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_118_0_0 + WQtempx * x_118_0_1;
    QUICKDouble x_119_0_0 = Ptempz * x_83_0_0 + WPtempz * x_83_0_1 + 6.000000 * ABtemp * (x_55_0_0 - CDcom * x_55_0_1);
    QUICKDouble x_119_0_1 = Ptempz * x_83_0_1 + WPtempz * x_83_0_2 + 6.000000 * ABtemp * (x_55_0_1 - CDcom * x_55_0_2);
    LOCSTORE(store, 119, 3, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_119_0_0 + WQtempz * x_119_0_1 + 7.000000 * ABCDtemp * x_83_0_1;
    LOCSTORE(store, 119, 2, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_119_0_0 + WQtempy * x_119_0_1;
    LOCSTORE(store, 119, 1, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_119_0_0 + WQtempx * x_119_0_1;
    // [KS|PS] integral - End 

}

