/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [DS|HS] integral - Start
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble x_0_3_0 = Qtempz * VY_0 + WQtempz * VY_1;
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble x_0_3_1 = Qtempz * VY_1 + WQtempz * VY_2;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_0_3_2 = Qtempz * VY_2 + WQtempz * VY_3;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_0_3_3 = Qtempz * VY_3 + WQtempz * VY_4;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_0_3_4 = Qtempz * VY_4 + WQtempz * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_0_3_5 = Qtempz * VY_5 + WQtempz * VY_6;
    QUICKDouble VY_7 = VY(0, 0, 7);
    QUICKDouble x_0_3_6 = Qtempz * VY_6 + WQtempz * VY_7;
    QUICKDouble x_0_9_0 = Qtempz * x_0_3_0 + WQtempz * x_0_3_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_9_1 = Qtempz * x_0_3_1 + WQtempz * x_0_3_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_9_2 = Qtempz * x_0_3_2 + WQtempz * x_0_3_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_9_3 = Qtempz * x_0_3_3 + WQtempz * x_0_3_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_9_4 = Qtempz * x_0_3_4 + WQtempz * x_0_3_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_9_5 = Qtempz * x_0_3_5 + WQtempz * x_0_3_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_19_0 = Qtempz * x_0_9_0 + WQtempz * x_0_9_1 + 2.000000 * CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_19_1 = Qtempz * x_0_9_1 + WQtempz * x_0_9_2 + 2.000000 * CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_19_2 = Qtempz * x_0_9_2 + WQtempz * x_0_9_3 + 2.000000 * CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_19_3 = Qtempz * x_0_9_3 + WQtempz * x_0_9_4 + 2.000000 * CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_19_4 = Qtempz * x_0_9_4 + WQtempz * x_0_9_5 + 2.000000 * CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_31_0 = Qtempy * x_0_19_0 + WQtempy * x_0_19_1;
    QUICKDouble x_0_31_1 = Qtempy * x_0_19_1 + WQtempy * x_0_19_2;
    QUICKDouble x_0_31_2 = Qtempy * x_0_19_2 + WQtempy * x_0_19_3;
    QUICKDouble x_0_31_3 = Qtempy * x_0_19_3 + WQtempy * x_0_19_4;
    QUICKDouble x_0_41_0 = Qtempy * x_0_31_0 + WQtempy * x_0_31_1 + CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_41_1 = Qtempy * x_0_31_1 + WQtempy * x_0_31_2 + CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_41_2 = Qtempy * x_0_31_2 + WQtempy * x_0_31_3 + CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_1_41_0 = Ptempx * x_0_41_0 + WPtempx * x_0_41_1;
    QUICKDouble x_1_41_1 = Ptempx * x_0_41_1 + WPtempx * x_0_41_2;
    LOCSTORE(store, 7, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_41_0 + WPtempx * x_1_41_1 + ABtemp * (x_0_41_0 - CDcom * x_0_41_1);
    QUICKDouble x_2_41_0 = Ptempy * x_0_41_0 + WPtempy * x_0_41_1 + 2.000000 * ABCDtemp * x_0_31_1;
    QUICKDouble x_2_41_1 = Ptempy * x_0_41_1 + WPtempy * x_0_41_2 + 2.000000 * ABCDtemp * x_0_31_2;
    LOCSTORE(store, 4, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_41_0 + WPtempx * x_2_41_1;
    QUICKDouble x_0_16_1 = Qtempy * x_0_9_1 + WQtempy * x_0_9_2;
    QUICKDouble x_0_16_2 = Qtempy * x_0_9_2 + WQtempy * x_0_9_3;
    QUICKDouble x_0_16_3 = Qtempy * x_0_9_3 + WQtempy * x_0_9_4;
    QUICKDouble x_0_22_1 = Qtempy * x_0_16_1 + WQtempy * x_0_16_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_22_2 = Qtempy * x_0_16_2 + WQtempy * x_0_16_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_3_41_0 = Ptempz * x_0_41_0 + WPtempz * x_0_41_1 + 3.000000 * ABCDtemp * x_0_22_1;
    QUICKDouble x_3_41_1 = Ptempz * x_0_41_1 + WPtempz * x_0_41_2 + 3.000000 * ABCDtemp * x_0_22_2;
    LOCSTORE(store, 6, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_41_0 + WPtempx * x_3_41_1;
    QUICKDouble x_0_16_0 = Qtempy * x_0_9_0 + WQtempy * x_0_9_1;
    QUICKDouble x_0_16_4 = Qtempy * x_0_9_4 + WQtempy * x_0_9_5;
    QUICKDouble x_0_22_0 = Qtempy * x_0_16_0 + WQtempy * x_0_16_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_22_3 = Qtempy * x_0_16_3 + WQtempy * x_0_16_4 + CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_42_0 = Qtempy * x_0_22_0 + WQtempy * x_0_22_1 + 2.000000 * CDtemp * (x_0_16_0 - ABcom * x_0_16_1);
    QUICKDouble x_0_42_1 = Qtempy * x_0_22_1 + WQtempy * x_0_22_2 + 2.000000 * CDtemp * (x_0_16_1 - ABcom * x_0_16_2);
    QUICKDouble x_0_42_2 = Qtempy * x_0_22_2 + WQtempy * x_0_22_3 + 2.000000 * CDtemp * (x_0_16_2 - ABcom * x_0_16_3);
    QUICKDouble x_1_42_0 = Ptempx * x_0_42_0 + WPtempx * x_0_42_1;
    QUICKDouble x_1_42_1 = Ptempx * x_0_42_1 + WPtempx * x_0_42_2;
    LOCSTORE(store, 7, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_42_0 + WPtempx * x_1_42_1 + ABtemp * (x_0_42_0 - CDcom * x_0_42_1);
    QUICKDouble x_2_42_0 = Ptempy * x_0_42_0 + WPtempy * x_0_42_1 + 3.000000 * ABCDtemp * x_0_22_1;
    QUICKDouble x_2_42_1 = Ptempy * x_0_42_1 + WPtempy * x_0_42_2 + 3.000000 * ABCDtemp * x_0_22_2;
    LOCSTORE(store, 4, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_42_0 + WPtempx * x_2_42_1;
    QUICKDouble x_0_5_1 = Qtempy * x_0_3_1 + WQtempy * x_0_3_2;
    QUICKDouble x_0_5_2 = Qtempy * x_0_3_2 + WQtempy * x_0_3_3;
    QUICKDouble x_0_5_3 = Qtempy * x_0_3_3 + WQtempy * x_0_3_4;
    QUICKDouble x_0_5_4 = Qtempy * x_0_3_4 + WQtempy * x_0_3_5;
    QUICKDouble x_0_15_1 = Qtempy * x_0_5_1 + WQtempy * x_0_5_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_15_2 = Qtempy * x_0_5_2 + WQtempy * x_0_5_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_15_3 = Qtempy * x_0_5_3 + WQtempy * x_0_5_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_30_1 = Qtempy * x_0_15_1 + WQtempy * x_0_15_2 + 2.000000 * CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_30_2 = Qtempy * x_0_15_2 + WQtempy * x_0_15_3 + 2.000000 * CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_3_42_0 = Ptempz * x_0_42_0 + WPtempz * x_0_42_1 + 2.000000 * ABCDtemp * x_0_30_1;
    QUICKDouble x_3_42_1 = Ptempz * x_0_42_1 + WPtempz * x_0_42_2 + 2.000000 * ABCDtemp * x_0_30_2;
    LOCSTORE(store, 6, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_42_0 + WPtempx * x_3_42_1;
    QUICKDouble x_0_27_0 = Qtempx * x_0_19_0 + WQtempx * x_0_19_1;
    QUICKDouble x_0_27_1 = Qtempx * x_0_19_1 + WQtempx * x_0_19_2;
    QUICKDouble x_0_27_2 = Qtempx * x_0_19_2 + WQtempx * x_0_19_3;
    QUICKDouble x_0_27_3 = Qtempx * x_0_19_3 + WQtempx * x_0_19_4;
    QUICKDouble x_0_43_0 = Qtempx * x_0_27_0 + WQtempx * x_0_27_1 + CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_43_1 = Qtempx * x_0_27_1 + WQtempx * x_0_27_2 + CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_43_2 = Qtempx * x_0_27_2 + WQtempx * x_0_27_3 + CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_2_43_0 = Ptempy * x_0_43_0 + WPtempy * x_0_43_1;
    QUICKDouble x_2_43_1 = Ptempy * x_0_43_1 + WPtempy * x_0_43_2;
    LOCSTORE(store, 8, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_43_0 + WPtempy * x_2_43_1 + ABtemp * (x_0_43_0 - CDcom * x_0_43_1);
    QUICKDouble x_0_14_1 = Qtempx * x_0_9_1 + WQtempx * x_0_9_2;
    QUICKDouble x_0_14_2 = Qtempx * x_0_9_2 + WQtempx * x_0_9_3;
    QUICKDouble x_0_14_3 = Qtempx * x_0_9_3 + WQtempx * x_0_9_4;
    QUICKDouble x_0_21_1 = Qtempx * x_0_14_1 + WQtempx * x_0_14_2 + CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_21_2 = Qtempx * x_0_14_2 + WQtempx * x_0_14_3 + CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_3_43_0 = Ptempz * x_0_43_0 + WPtempz * x_0_43_1 + 3.000000 * ABCDtemp * x_0_21_1;
    QUICKDouble x_3_43_1 = Ptempz * x_0_43_1 + WPtempz * x_0_43_2 + 3.000000 * ABCDtemp * x_0_21_2;
    LOCSTORE(store, 5, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_43_0 + WPtempy * x_3_43_1;
    QUICKDouble x_0_14_0 = Qtempx * x_0_9_0 + WQtempx * x_0_9_1;
    QUICKDouble x_0_14_4 = Qtempx * x_0_9_4 + WQtempx * x_0_9_5;
    QUICKDouble x_0_21_0 = Qtempx * x_0_14_0 + WQtempx * x_0_14_1 + CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_21_3 = Qtempx * x_0_14_3 + WQtempx * x_0_14_4 + CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_44_0 = Qtempx * x_0_21_0 + WQtempx * x_0_21_1 + 2.000000 * CDtemp * (x_0_14_0 - ABcom * x_0_14_1);
    QUICKDouble x_0_44_1 = Qtempx * x_0_21_1 + WQtempx * x_0_21_2 + 2.000000 * CDtemp * (x_0_14_1 - ABcom * x_0_14_2);
    QUICKDouble x_0_44_2 = Qtempx * x_0_21_2 + WQtempx * x_0_21_3 + 2.000000 * CDtemp * (x_0_14_2 - ABcom * x_0_14_3);
    QUICKDouble x_2_44_0 = Ptempy * x_0_44_0 + WPtempy * x_0_44_1;
    QUICKDouble x_2_44_1 = Ptempy * x_0_44_1 + WPtempy * x_0_44_2;
    LOCSTORE(store, 8, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_44_0 + WPtempy * x_2_44_1 + ABtemp * (x_0_44_0 - CDcom * x_0_44_1);
    QUICKDouble x_0_6_1 = Qtempx * x_0_3_1 + WQtempx * x_0_3_2;
    QUICKDouble x_0_6_2 = Qtempx * x_0_3_2 + WQtempx * x_0_3_3;
    QUICKDouble x_0_6_3 = Qtempx * x_0_3_3 + WQtempx * x_0_3_4;
    QUICKDouble x_0_6_4 = Qtempx * x_0_3_4 + WQtempx * x_0_3_5;
    QUICKDouble x_0_13_1 = Qtempx * x_0_6_1 + WQtempx * x_0_6_2 + CDtemp * (x_0_3_1 - ABcom * x_0_3_2);
    QUICKDouble x_0_13_2 = Qtempx * x_0_6_2 + WQtempx * x_0_6_3 + CDtemp * (x_0_3_2 - ABcom * x_0_3_3);
    QUICKDouble x_0_13_3 = Qtempx * x_0_6_3 + WQtempx * x_0_6_4 + CDtemp * (x_0_3_3 - ABcom * x_0_3_4);
    QUICKDouble x_0_26_1 = Qtempx * x_0_13_1 + WQtempx * x_0_13_2 + 2.000000 * CDtemp * (x_0_6_1 - ABcom * x_0_6_2);
    QUICKDouble x_0_26_2 = Qtempx * x_0_13_2 + WQtempx * x_0_13_3 + 2.000000 * CDtemp * (x_0_6_2 - ABcom * x_0_6_3);
    QUICKDouble x_3_44_0 = Ptempz * x_0_44_0 + WPtempz * x_0_44_1 + 2.000000 * ABCDtemp * x_0_26_1;
    QUICKDouble x_3_44_1 = Ptempz * x_0_44_1 + WPtempz * x_0_44_2 + 2.000000 * ABCDtemp * x_0_26_2;
    LOCSTORE(store, 5, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_44_0 + WPtempy * x_3_44_1;
    QUICKDouble x_0_2_0 = Qtempy * VY_0 + WQtempy * VY_1;
    QUICKDouble x_0_2_1 = Qtempy * VY_1 + WQtempy * VY_2;
    QUICKDouble x_0_2_2 = Qtempy * VY_2 + WQtempy * VY_3;
    QUICKDouble x_0_2_3 = Qtempy * VY_3 + WQtempy * VY_4;
    QUICKDouble x_0_2_4 = Qtempy * VY_4 + WQtempy * VY_5;
    QUICKDouble x_0_2_5 = Qtempy * VY_5 + WQtempy * VY_6;
    QUICKDouble x_0_2_6 = Qtempy * VY_6 + WQtempy * VY_7;
    QUICKDouble x_0_8_0 = Qtempy * x_0_2_0 + WQtempy * x_0_2_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_8_1 = Qtempy * x_0_2_1 + WQtempy * x_0_2_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_8_2 = Qtempy * x_0_2_2 + WQtempy * x_0_2_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_8_3 = Qtempy * x_0_2_3 + WQtempy * x_0_2_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_8_4 = Qtempy * x_0_2_4 + WQtempy * x_0_2_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_8_5 = Qtempy * x_0_2_5 + WQtempy * x_0_2_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_18_0 = Qtempy * x_0_8_0 + WQtempy * x_0_8_1 + 2.000000 * CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_18_1 = Qtempy * x_0_8_1 + WQtempy * x_0_8_2 + 2.000000 * CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_18_2 = Qtempy * x_0_8_2 + WQtempy * x_0_8_3 + 2.000000 * CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_18_3 = Qtempy * x_0_8_3 + WQtempy * x_0_8_4 + 2.000000 * CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_18_4 = Qtempy * x_0_8_4 + WQtempy * x_0_8_5 + 2.000000 * CDtemp * (x_0_2_4 - ABcom * x_0_2_5);
    QUICKDouble x_0_29_0 = Qtempx * x_0_18_0 + WQtempx * x_0_18_1;
    QUICKDouble x_0_29_1 = Qtempx * x_0_18_1 + WQtempx * x_0_18_2;
    QUICKDouble x_0_29_2 = Qtempx * x_0_18_2 + WQtempx * x_0_18_3;
    QUICKDouble x_0_29_3 = Qtempx * x_0_18_3 + WQtempx * x_0_18_4;
    QUICKDouble x_0_45_0 = Qtempx * x_0_29_0 + WQtempx * x_0_29_1 + CDtemp * (x_0_18_0 - ABcom * x_0_18_1);
    QUICKDouble x_0_45_1 = Qtempx * x_0_29_1 + WQtempx * x_0_29_2 + CDtemp * (x_0_18_1 - ABcom * x_0_18_2);
    QUICKDouble x_0_45_2 = Qtempx * x_0_29_2 + WQtempx * x_0_29_3 + CDtemp * (x_0_18_2 - ABcom * x_0_18_3);
    QUICKDouble x_3_45_0 = Ptempz * x_0_45_0 + WPtempz * x_0_45_1;
    QUICKDouble x_3_45_1 = Ptempz * x_0_45_1 + WPtempz * x_0_45_2;
    LOCSTORE(store, 9, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_45_0 + WPtempz * x_3_45_1 + ABtemp * (x_0_45_0 - CDcom * x_0_45_1);
    QUICKDouble x_0_12_0 = Qtempx * x_0_8_0 + WQtempx * x_0_8_1;
    QUICKDouble x_0_12_1 = Qtempx * x_0_8_1 + WQtempx * x_0_8_2;
    QUICKDouble x_0_12_2 = Qtempx * x_0_8_2 + WQtempx * x_0_8_3;
    QUICKDouble x_0_12_3 = Qtempx * x_0_8_3 + WQtempx * x_0_8_4;
    QUICKDouble x_0_12_4 = Qtempx * x_0_8_4 + WQtempx * x_0_8_5;
    QUICKDouble x_0_20_0 = Qtempx * x_0_12_0 + WQtempx * x_0_12_1 + CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_20_1 = Qtempx * x_0_12_1 + WQtempx * x_0_12_2 + CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_20_2 = Qtempx * x_0_12_2 + WQtempx * x_0_12_3 + CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_0_20_3 = Qtempx * x_0_12_3 + WQtempx * x_0_12_4 + CDtemp * (x_0_8_3 - ABcom * x_0_8_4);
    QUICKDouble x_0_46_0 = Qtempx * x_0_20_0 + WQtempx * x_0_20_1 + 2.000000 * CDtemp * (x_0_12_0 - ABcom * x_0_12_1);
    QUICKDouble x_0_46_1 = Qtempx * x_0_20_1 + WQtempx * x_0_20_2 + 2.000000 * CDtemp * (x_0_12_1 - ABcom * x_0_12_2);
    QUICKDouble x_0_46_2 = Qtempx * x_0_20_2 + WQtempx * x_0_20_3 + 2.000000 * CDtemp * (x_0_12_2 - ABcom * x_0_12_3);
    QUICKDouble x_3_46_0 = Ptempz * x_0_46_0 + WPtempz * x_0_46_1;
    QUICKDouble x_3_46_1 = Ptempz * x_0_46_1 + WPtempz * x_0_46_2;
    LOCSTORE(store, 9, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_46_0 + WPtempz * x_3_46_1 + ABtemp * (x_0_46_0 - CDcom * x_0_46_1);
    QUICKDouble x_0_34_0 = Qtempz * x_0_19_0 + WQtempz * x_0_19_1 + 3.000000 * CDtemp * (x_0_9_0 - ABcom * x_0_9_1);
    QUICKDouble x_0_34_1 = Qtempz * x_0_19_1 + WQtempz * x_0_19_2 + 3.000000 * CDtemp * (x_0_9_1 - ABcom * x_0_9_2);
    QUICKDouble x_0_34_2 = Qtempz * x_0_19_2 + WQtempz * x_0_19_3 + 3.000000 * CDtemp * (x_0_9_2 - ABcom * x_0_9_3);
    QUICKDouble x_0_34_3 = Qtempz * x_0_19_3 + WQtempz * x_0_19_4 + 3.000000 * CDtemp * (x_0_9_3 - ABcom * x_0_9_4);
    QUICKDouble x_0_47_0 = Qtempy * x_0_34_0 + WQtempy * x_0_34_1;
    QUICKDouble x_0_47_1 = Qtempy * x_0_34_1 + WQtempy * x_0_34_2;
    QUICKDouble x_0_47_2 = Qtempy * x_0_34_2 + WQtempy * x_0_34_3;
    QUICKDouble x_1_47_0 = Ptempx * x_0_47_0 + WPtempx * x_0_47_1;
    QUICKDouble x_1_47_1 = Ptempx * x_0_47_1 + WPtempx * x_0_47_2;
    LOCSTORE(store, 7, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_47_0 + WPtempx * x_1_47_1 + ABtemp * (x_0_47_0 - CDcom * x_0_47_1);
    QUICKDouble x_2_47_0 = Ptempy * x_0_47_0 + WPtempy * x_0_47_1 + ABCDtemp * x_0_34_1;
    QUICKDouble x_2_47_1 = Ptempy * x_0_47_1 + WPtempy * x_0_47_2 + ABCDtemp * x_0_34_2;
    LOCSTORE(store, 4, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_47_0 + WPtempx * x_2_47_1;
    QUICKDouble x_3_47_0 = Ptempz * x_0_47_0 + WPtempz * x_0_47_1 + 4.000000 * ABCDtemp * x_0_31_1;
    QUICKDouble x_3_47_1 = Ptempz * x_0_47_1 + WPtempz * x_0_47_2 + 4.000000 * ABCDtemp * x_0_31_2;
    LOCSTORE(store, 6, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_47_0 + WPtempx * x_3_47_1;
    QUICKDouble x_0_5_0 = Qtempy * x_0_3_0 + WQtempy * x_0_3_1;
    QUICKDouble x_0_5_5 = Qtempy * x_0_3_5 + WQtempy * x_0_3_6;
    QUICKDouble x_0_15_0 = Qtempy * x_0_5_0 + WQtempy * x_0_5_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_15_4 = Qtempy * x_0_5_4 + WQtempy * x_0_5_5 + CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_30_0 = Qtempy * x_0_15_0 + WQtempy * x_0_15_1 + 2.000000 * CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_30_3 = Qtempy * x_0_15_3 + WQtempy * x_0_15_4 + 2.000000 * CDtemp * (x_0_5_3 - ABcom * x_0_5_4);
    QUICKDouble x_0_48_0 = Qtempy * x_0_30_0 + WQtempy * x_0_30_1 + 3.000000 * CDtemp * (x_0_15_0 - ABcom * x_0_15_1);
    QUICKDouble x_0_48_1 = Qtempy * x_0_30_1 + WQtempy * x_0_30_2 + 3.000000 * CDtemp * (x_0_15_1 - ABcom * x_0_15_2);
    QUICKDouble x_0_48_2 = Qtempy * x_0_30_2 + WQtempy * x_0_30_3 + 3.000000 * CDtemp * (x_0_15_2 - ABcom * x_0_15_3);
    QUICKDouble x_1_48_0 = Ptempx * x_0_48_0 + WPtempx * x_0_48_1;
    QUICKDouble x_1_48_1 = Ptempx * x_0_48_1 + WPtempx * x_0_48_2;
    LOCSTORE(store, 7, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_48_0 + WPtempx * x_1_48_1 + ABtemp * (x_0_48_0 - CDcom * x_0_48_1);
    QUICKDouble x_2_48_0 = Ptempy * x_0_48_0 + WPtempy * x_0_48_1 + 4.000000 * ABCDtemp * x_0_30_1;
    QUICKDouble x_2_48_1 = Ptempy * x_0_48_1 + WPtempy * x_0_48_2 + 4.000000 * ABCDtemp * x_0_30_2;
    LOCSTORE(store, 4, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_48_0 + WPtempx * x_2_48_1;
    QUICKDouble x_0_33_1 = Qtempy * x_0_18_1 + WQtempy * x_0_18_2 + 3.000000 * CDtemp * (x_0_8_1 - ABcom * x_0_8_2);
    QUICKDouble x_0_33_2 = Qtempy * x_0_18_2 + WQtempy * x_0_18_3 + 3.000000 * CDtemp * (x_0_8_2 - ABcom * x_0_8_3);
    QUICKDouble x_3_48_0 = Ptempz * x_0_48_0 + WPtempz * x_0_48_1 + ABCDtemp * x_0_33_1;
    QUICKDouble x_3_48_1 = Ptempz * x_0_48_1 + WPtempz * x_0_48_2 + ABCDtemp * x_0_33_2;
    LOCSTORE(store, 6, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_48_0 + WPtempx * x_3_48_1;
    QUICKDouble x_0_49_0 = Qtempx * x_0_34_0 + WQtempx * x_0_34_1;
    QUICKDouble x_0_49_1 = Qtempx * x_0_34_1 + WQtempx * x_0_34_2;
    QUICKDouble x_0_49_2 = Qtempx * x_0_34_2 + WQtempx * x_0_34_3;
    QUICKDouble x_2_49_0 = Ptempy * x_0_49_0 + WPtempy * x_0_49_1;
    QUICKDouble x_2_49_1 = Ptempy * x_0_49_1 + WPtempy * x_0_49_2;
    LOCSTORE(store, 8, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_49_0 + WPtempy * x_2_49_1 + ABtemp * (x_0_49_0 - CDcom * x_0_49_1);
    QUICKDouble x_3_49_0 = Ptempz * x_0_49_0 + WPtempz * x_0_49_1 + 4.000000 * ABCDtemp * x_0_27_1;
    QUICKDouble x_3_49_1 = Ptempz * x_0_49_1 + WPtempz * x_0_49_2 + 4.000000 * ABCDtemp * x_0_27_2;
    LOCSTORE(store, 5, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_49_0 + WPtempy * x_3_49_1;
    QUICKDouble x_0_6_0 = Qtempx * x_0_3_0 + WQtempx * x_0_3_1;
    QUICKDouble x_0_6_5 = Qtempx * x_0_3_5 + WQtempx * x_0_3_6;
    QUICKDouble x_0_13_0 = Qtempx * x_0_6_0 + WQtempx * x_0_6_1 + CDtemp * (x_0_3_0 - ABcom * x_0_3_1);
    QUICKDouble x_0_13_4 = Qtempx * x_0_6_4 + WQtempx * x_0_6_5 + CDtemp * (x_0_3_4 - ABcom * x_0_3_5);
    QUICKDouble x_0_26_0 = Qtempx * x_0_13_0 + WQtempx * x_0_13_1 + 2.000000 * CDtemp * (x_0_6_0 - ABcom * x_0_6_1);
    QUICKDouble x_0_26_3 = Qtempx * x_0_13_3 + WQtempx * x_0_13_4 + 2.000000 * CDtemp * (x_0_6_3 - ABcom * x_0_6_4);
    QUICKDouble x_0_50_0 = Qtempx * x_0_26_0 + WQtempx * x_0_26_1 + 3.000000 * CDtemp * (x_0_13_0 - ABcom * x_0_13_1);
    QUICKDouble x_0_50_1 = Qtempx * x_0_26_1 + WQtempx * x_0_26_2 + 3.000000 * CDtemp * (x_0_13_1 - ABcom * x_0_13_2);
    QUICKDouble x_0_50_2 = Qtempx * x_0_26_2 + WQtempx * x_0_26_3 + 3.000000 * CDtemp * (x_0_13_2 - ABcom * x_0_13_3);
    QUICKDouble x_2_50_0 = Ptempy * x_0_50_0 + WPtempy * x_0_50_1;
    QUICKDouble x_2_50_1 = Ptempy * x_0_50_1 + WPtempy * x_0_50_2;
    LOCSTORE(store, 8, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_50_0 + WPtempy * x_2_50_1 + ABtemp * (x_0_50_0 - CDcom * x_0_50_1);
    QUICKDouble x_0_1_1 = Qtempx * VY_1 + WQtempx * VY_2;
    QUICKDouble x_0_1_2 = Qtempx * VY_2 + WQtempx * VY_3;
    QUICKDouble x_0_1_3 = Qtempx * VY_3 + WQtempx * VY_4;
    QUICKDouble x_0_1_4 = Qtempx * VY_4 + WQtempx * VY_5;
    QUICKDouble x_0_1_5 = Qtempx * VY_5 + WQtempx * VY_6;
    QUICKDouble x_0_7_1 = Qtempx * x_0_1_1 + WQtempx * x_0_1_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_7_2 = Qtempx * x_0_1_2 + WQtempx * x_0_1_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_7_3 = Qtempx * x_0_1_3 + WQtempx * x_0_1_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_0_7_4 = Qtempx * x_0_1_4 + WQtempx * x_0_1_5 + CDtemp * (VY_4 - ABcom * VY_5);
    QUICKDouble x_0_17_1 = Qtempx * x_0_7_1 + WQtempx * x_0_7_2 + 2.000000 * CDtemp * (x_0_1_1 - ABcom * x_0_1_2);
    QUICKDouble x_0_17_2 = Qtempx * x_0_7_2 + WQtempx * x_0_7_3 + 2.000000 * CDtemp * (x_0_1_2 - ABcom * x_0_1_3);
    QUICKDouble x_0_17_3 = Qtempx * x_0_7_3 + WQtempx * x_0_7_4 + 2.000000 * CDtemp * (x_0_1_3 - ABcom * x_0_1_4);
    QUICKDouble x_0_32_1 = Qtempx * x_0_17_1 + WQtempx * x_0_17_2 + 3.000000 * CDtemp * (x_0_7_1 - ABcom * x_0_7_2);
    QUICKDouble x_0_32_2 = Qtempx * x_0_17_2 + WQtempx * x_0_17_3 + 3.000000 * CDtemp * (x_0_7_2 - ABcom * x_0_7_3);
    QUICKDouble x_3_50_0 = Ptempz * x_0_50_0 + WPtempz * x_0_50_1 + ABCDtemp * x_0_32_1;
    QUICKDouble x_3_50_1 = Ptempz * x_0_50_1 + WPtempz * x_0_50_2 + ABCDtemp * x_0_32_2;
    LOCSTORE(store, 5, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_50_0 + WPtempy * x_3_50_1;
    QUICKDouble x_0_33_0 = Qtempy * x_0_18_0 + WQtempy * x_0_18_1 + 3.000000 * CDtemp * (x_0_8_0 - ABcom * x_0_8_1);
    QUICKDouble x_0_33_3 = Qtempy * x_0_18_3 + WQtempy * x_0_18_4 + 3.000000 * CDtemp * (x_0_8_3 - ABcom * x_0_8_4);
    QUICKDouble x_0_51_0 = Qtempx * x_0_33_0 + WQtempx * x_0_33_1;
    QUICKDouble x_0_51_1 = Qtempx * x_0_33_1 + WQtempx * x_0_33_2;
    QUICKDouble x_0_51_2 = Qtempx * x_0_33_2 + WQtempx * x_0_33_3;
    QUICKDouble x_3_51_0 = Ptempz * x_0_51_0 + WPtempz * x_0_51_1;
    QUICKDouble x_3_51_1 = Ptempz * x_0_51_1 + WPtempz * x_0_51_2;
    LOCSTORE(store, 9, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_51_0 + WPtempz * x_3_51_1 + ABtemp * (x_0_51_0 - CDcom * x_0_51_1);
    QUICKDouble x_0_4_0 = Qtempx * x_0_2_0 + WQtempx * x_0_2_1;
    QUICKDouble x_0_4_1 = Qtempx * x_0_2_1 + WQtempx * x_0_2_2;
    QUICKDouble x_0_4_2 = Qtempx * x_0_2_2 + WQtempx * x_0_2_3;
    QUICKDouble x_0_4_3 = Qtempx * x_0_2_3 + WQtempx * x_0_2_4;
    QUICKDouble x_0_4_4 = Qtempx * x_0_2_4 + WQtempx * x_0_2_5;
    QUICKDouble x_0_4_5 = Qtempx * x_0_2_5 + WQtempx * x_0_2_6;
    QUICKDouble x_0_11_0 = Qtempx * x_0_4_0 + WQtempx * x_0_4_1 + CDtemp * (x_0_2_0 - ABcom * x_0_2_1);
    QUICKDouble x_0_11_1 = Qtempx * x_0_4_1 + WQtempx * x_0_4_2 + CDtemp * (x_0_2_1 - ABcom * x_0_2_2);
    QUICKDouble x_0_11_2 = Qtempx * x_0_4_2 + WQtempx * x_0_4_3 + CDtemp * (x_0_2_2 - ABcom * x_0_2_3);
    QUICKDouble x_0_11_3 = Qtempx * x_0_4_3 + WQtempx * x_0_4_4 + CDtemp * (x_0_2_3 - ABcom * x_0_2_4);
    QUICKDouble x_0_11_4 = Qtempx * x_0_4_4 + WQtempx * x_0_4_5 + CDtemp * (x_0_2_4 - ABcom * x_0_2_5);
    QUICKDouble x_0_28_0 = Qtempx * x_0_11_0 + WQtempx * x_0_11_1 + 2.000000 * CDtemp * (x_0_4_0 - ABcom * x_0_4_1);
    QUICKDouble x_0_28_1 = Qtempx * x_0_11_1 + WQtempx * x_0_11_2 + 2.000000 * CDtemp * (x_0_4_1 - ABcom * x_0_4_2);
    QUICKDouble x_0_28_2 = Qtempx * x_0_11_2 + WQtempx * x_0_11_3 + 2.000000 * CDtemp * (x_0_4_2 - ABcom * x_0_4_3);
    QUICKDouble x_0_28_3 = Qtempx * x_0_11_3 + WQtempx * x_0_11_4 + 2.000000 * CDtemp * (x_0_4_3 - ABcom * x_0_4_4);
    QUICKDouble x_0_52_0 = Qtempx * x_0_28_0 + WQtempx * x_0_28_1 + 3.000000 * CDtemp * (x_0_11_0 - ABcom * x_0_11_1);
    QUICKDouble x_0_52_1 = Qtempx * x_0_28_1 + WQtempx * x_0_28_2 + 3.000000 * CDtemp * (x_0_11_1 - ABcom * x_0_11_2);
    QUICKDouble x_0_52_2 = Qtempx * x_0_28_2 + WQtempx * x_0_28_3 + 3.000000 * CDtemp * (x_0_11_2 - ABcom * x_0_11_3);
    QUICKDouble x_3_52_0 = Ptempz * x_0_52_0 + WPtempz * x_0_52_1;
    QUICKDouble x_3_52_1 = Ptempz * x_0_52_1 + WPtempz * x_0_52_2;
    LOCSTORE(store, 9, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_52_0 + WPtempz * x_3_52_1 + ABtemp * (x_0_52_0 - CDcom * x_0_52_1);
    QUICKDouble x_0_1_0 = Qtempx * VY_0 + WQtempx * VY_1;
    QUICKDouble x_0_1_6 = Qtempx * VY_6 + WQtempx * VY_7;
    QUICKDouble x_0_7_0 = Qtempx * x_0_1_0 + WQtempx * x_0_1_1 + CDtemp * (VY_0 - ABcom * VY_1);
    QUICKDouble x_0_7_5 = Qtempx * x_0_1_5 + WQtempx * x_0_1_6 + CDtemp * (VY_5 - ABcom * VY_6);
    QUICKDouble x_0_17_0 = Qtempx * x_0_7_0 + WQtempx * x_0_7_1 + 2.000000 * CDtemp * (x_0_1_0 - ABcom * x_0_1_1);
    QUICKDouble x_0_17_4 = Qtempx * x_0_7_4 + WQtempx * x_0_7_5 + 2.000000 * CDtemp * (x_0_1_4 - ABcom * x_0_1_5);
    QUICKDouble x_0_32_0 = Qtempx * x_0_17_0 + WQtempx * x_0_17_1 + 3.000000 * CDtemp * (x_0_7_0 - ABcom * x_0_7_1);
    QUICKDouble x_0_32_3 = Qtempx * x_0_17_3 + WQtempx * x_0_17_4 + 3.000000 * CDtemp * (x_0_7_3 - ABcom * x_0_7_4);
    QUICKDouble x_0_53_0 = Qtempx * x_0_32_0 + WQtempx * x_0_32_1 + 4.000000 * CDtemp * (x_0_17_0 - ABcom * x_0_17_1);
    QUICKDouble x_0_53_1 = Qtempx * x_0_32_1 + WQtempx * x_0_32_2 + 4.000000 * CDtemp * (x_0_17_1 - ABcom * x_0_17_2);
    QUICKDouble x_0_53_2 = Qtempx * x_0_32_2 + WQtempx * x_0_32_3 + 4.000000 * CDtemp * (x_0_17_2 - ABcom * x_0_17_3);
    QUICKDouble x_2_53_0 = Ptempy * x_0_53_0 + WPtempy * x_0_53_1;
    QUICKDouble x_2_53_1 = Ptempy * x_0_53_1 + WPtempy * x_0_53_2;
    LOCSTORE(store, 8, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_53_0 + WPtempy * x_2_53_1 + ABtemp * (x_0_53_0 - CDcom * x_0_53_1);
    QUICKDouble x_3_53_0 = Ptempz * x_0_53_0 + WPtempz * x_0_53_1;
    QUICKDouble x_3_53_1 = Ptempz * x_0_53_1 + WPtempz * x_0_53_2;
    LOCSTORE(store, 9, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_53_0 + WPtempz * x_3_53_1 + ABtemp * (x_0_53_0 - CDcom * x_0_53_1);
    LOCSTORE(store, 5, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_53_0 + WPtempy * x_3_53_1;
    QUICKDouble x_0_54_0 = Qtempy * x_0_33_0 + WQtempy * x_0_33_1 + 4.000000 * CDtemp * (x_0_18_0 - ABcom * x_0_18_1);
    QUICKDouble x_0_54_1 = Qtempy * x_0_33_1 + WQtempy * x_0_33_2 + 4.000000 * CDtemp * (x_0_18_1 - ABcom * x_0_18_2);
    QUICKDouble x_0_54_2 = Qtempy * x_0_33_2 + WQtempy * x_0_33_3 + 4.000000 * CDtemp * (x_0_18_2 - ABcom * x_0_18_3);
    QUICKDouble x_1_54_0 = Ptempx * x_0_54_0 + WPtempx * x_0_54_1;
    QUICKDouble x_1_54_1 = Ptempx * x_0_54_1 + WPtempx * x_0_54_2;
    LOCSTORE(store, 7, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_54_0 + WPtempx * x_1_54_1 + ABtemp * (x_0_54_0 - CDcom * x_0_54_1);
    QUICKDouble x_2_54_0 = Ptempy * x_0_54_0 + WPtempy * x_0_54_1 + 5.000000 * ABCDtemp * x_0_33_1;
    QUICKDouble x_2_54_1 = Ptempy * x_0_54_1 + WPtempy * x_0_54_2 + 5.000000 * ABCDtemp * x_0_33_2;
    LOCSTORE(store, 4, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_54_0 + WPtempx * x_2_54_1;
    QUICKDouble x_3_54_0 = Ptempz * x_0_54_0 + WPtempz * x_0_54_1;
    QUICKDouble x_3_54_1 = Ptempz * x_0_54_1 + WPtempz * x_0_54_2;
    LOCSTORE(store, 9, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_54_0 + WPtempz * x_3_54_1 + ABtemp * (x_0_54_0 - CDcom * x_0_54_1);
    LOCSTORE(store, 6, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_54_0 + WPtempx * x_3_54_1;
    QUICKDouble x_0_55_0 = Qtempz * x_0_34_0 + WQtempz * x_0_34_1 + 4.000000 * CDtemp * (x_0_19_0 - ABcom * x_0_19_1);
    QUICKDouble x_0_55_1 = Qtempz * x_0_34_1 + WQtempz * x_0_34_2 + 4.000000 * CDtemp * (x_0_19_1 - ABcom * x_0_19_2);
    QUICKDouble x_0_55_2 = Qtempz * x_0_34_2 + WQtempz * x_0_34_3 + 4.000000 * CDtemp * (x_0_19_2 - ABcom * x_0_19_3);
    QUICKDouble x_1_55_0 = Ptempx * x_0_55_0 + WPtempx * x_0_55_1;
    QUICKDouble x_1_55_1 = Ptempx * x_0_55_1 + WPtempx * x_0_55_2;
    LOCSTORE(store, 7, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_55_0 + WPtempx * x_1_55_1 + ABtemp * (x_0_55_0 - CDcom * x_0_55_1);
    QUICKDouble x_2_55_0 = Ptempy * x_0_55_0 + WPtempy * x_0_55_1;
    QUICKDouble x_2_55_1 = Ptempy * x_0_55_1 + WPtempy * x_0_55_2;
    LOCSTORE(store, 8, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_55_0 + WPtempy * x_2_55_1 + ABtemp * (x_0_55_0 - CDcom * x_0_55_1);
    LOCSTORE(store, 4, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_55_0 + WPtempx * x_2_55_1;
    QUICKDouble x_3_55_0 = Ptempz * x_0_55_0 + WPtempz * x_0_55_1 + 5.000000 * ABCDtemp * x_0_34_1;
    QUICKDouble x_3_55_1 = Ptempz * x_0_55_1 + WPtempz * x_0_55_2 + 5.000000 * ABCDtemp * x_0_34_2;
    LOCSTORE(store, 6, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_55_0 + WPtempx * x_3_55_1;
    LOCSTORE(store, 5, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_55_0 + WPtempy * x_3_55_1;
    QUICKDouble x_1_46_0 = Ptempx * x_0_46_0 + WPtempx * x_0_46_1 + 3.000000 * ABCDtemp * x_0_20_1;
    QUICKDouble x_1_46_1 = Ptempx * x_0_46_1 + WPtempx * x_0_46_2 + 3.000000 * ABCDtemp * x_0_20_2;
    QUICKDouble x_1_20_1 = Ptempx * x_0_20_1 + WPtempx * x_0_20_2 + 2.000000 * ABCDtemp * x_0_12_2;
    LOCSTORE(store, 7, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_46_0 + WPtempx * x_1_46_1 + ABtemp * (x_0_46_0 - CDcom * x_0_46_1) + 3.000000 * ABCDtemp * x_1_20_1;
    QUICKDouble x_2_46_0 = Ptempy * x_0_46_0 + WPtempy * x_0_46_1 + 2.000000 * ABCDtemp * x_0_28_1;
    QUICKDouble x_2_46_1 = Ptempy * x_0_46_1 + WPtempy * x_0_46_2 + 2.000000 * ABCDtemp * x_0_28_2;
    QUICKDouble x_2_20_1 = Ptempy * x_0_20_1 + WPtempy * x_0_20_2 + 2.000000 * ABCDtemp * x_0_11_2;
    LOCSTORE(store, 4, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_46_0 + WPtempx * x_2_46_1 + 3.000000 * ABCDtemp * x_2_20_1;
    QUICKDouble x_2_45_0 = Ptempy * x_0_45_0 + WPtempy * x_0_45_1 + 3.000000 * ABCDtemp * x_0_20_1;
    QUICKDouble x_2_45_1 = Ptempy * x_0_45_1 + WPtempy * x_0_45_2 + 3.000000 * ABCDtemp * x_0_20_2;
    LOCSTORE(store, 8, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_45_0 + WPtempy * x_2_45_1 + ABtemp * (x_0_45_0 - CDcom * x_0_45_1) + 3.000000 * ABCDtemp * x_2_20_1;
    QUICKDouble x_3_20_1 = Ptempz * x_0_20_1 + WPtempz * x_0_20_2;
    LOCSTORE(store, 6, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_46_0 + WPtempx * x_3_46_1 + 3.000000 * ABCDtemp * x_3_20_1;
    LOCSTORE(store, 5, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_45_0 + WPtempy * x_3_45_1 + 3.000000 * ABCDtemp * x_3_20_1;
    QUICKDouble x_0_24_0 = Qtempx * x_0_15_0 + WQtempx * x_0_15_1;
    QUICKDouble x_0_24_1 = Qtempx * x_0_15_1 + WQtempx * x_0_15_2;
    QUICKDouble x_0_24_2 = Qtempx * x_0_15_2 + WQtempx * x_0_15_3;
    QUICKDouble x_0_24_3 = Qtempx * x_0_15_3 + WQtempx * x_0_15_4;
    QUICKDouble x_0_37_0 = Qtempx * x_0_24_0 + WQtempx * x_0_24_1 + CDtemp * (x_0_15_0 - ABcom * x_0_15_1);
    QUICKDouble x_0_37_1 = Qtempx * x_0_24_1 + WQtempx * x_0_24_2 + CDtemp * (x_0_15_1 - ABcom * x_0_15_2);
    QUICKDouble x_0_37_2 = Qtempx * x_0_24_2 + WQtempx * x_0_24_3 + CDtemp * (x_0_15_2 - ABcom * x_0_15_3);
    QUICKDouble x_3_37_0 = Ptempz * x_0_37_0 + WPtempz * x_0_37_1 + ABCDtemp * x_0_20_1;
    QUICKDouble x_3_37_1 = Ptempz * x_0_37_1 + WPtempz * x_0_37_2 + ABCDtemp * x_0_20_2;
    LOCSTORE(store, 9, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_37_0 + WPtempz * x_3_37_1 + ABtemp * (x_0_37_0 - CDcom * x_0_37_1) + ABCDtemp * x_3_20_1;
    QUICKDouble x_1_44_0 = Ptempx * x_0_44_0 + WPtempx * x_0_44_1 + 3.000000 * ABCDtemp * x_0_21_1;
    QUICKDouble x_1_44_1 = Ptempx * x_0_44_1 + WPtempx * x_0_44_2 + 3.000000 * ABCDtemp * x_0_21_2;
    QUICKDouble x_1_21_1 = Ptempx * x_0_21_1 + WPtempx * x_0_21_2 + 2.000000 * ABCDtemp * x_0_14_2;
    LOCSTORE(store, 7, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_44_0 + WPtempx * x_1_44_1 + ABtemp * (x_0_44_0 - CDcom * x_0_44_1) + 3.000000 * ABCDtemp * x_1_21_1;
    QUICKDouble x_2_21_1 = Ptempy * x_0_21_1 + WPtempy * x_0_21_2;
    LOCSTORE(store, 4, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_44_0 + WPtempx * x_2_44_1 + 3.000000 * ABCDtemp * x_2_21_1;
    QUICKDouble x_0_25_0 = Qtempx * x_0_16_0 + WQtempx * x_0_16_1;
    QUICKDouble x_0_25_1 = Qtempx * x_0_16_1 + WQtempx * x_0_16_2;
    QUICKDouble x_0_25_2 = Qtempx * x_0_16_2 + WQtempx * x_0_16_3;
    QUICKDouble x_0_25_3 = Qtempx * x_0_16_3 + WQtempx * x_0_16_4;
    QUICKDouble x_0_36_0 = Qtempx * x_0_25_0 + WQtempx * x_0_25_1 + CDtemp * (x_0_16_0 - ABcom * x_0_16_1);
    QUICKDouble x_0_36_1 = Qtempx * x_0_25_1 + WQtempx * x_0_25_2 + CDtemp * (x_0_16_1 - ABcom * x_0_16_2);
    QUICKDouble x_0_36_2 = Qtempx * x_0_25_2 + WQtempx * x_0_25_3 + CDtemp * (x_0_16_2 - ABcom * x_0_16_3);
    QUICKDouble x_2_36_0 = Ptempy * x_0_36_0 + WPtempy * x_0_36_1 + ABCDtemp * x_0_21_1;
    QUICKDouble x_2_36_1 = Ptempy * x_0_36_1 + WPtempy * x_0_36_2 + ABCDtemp * x_0_21_2;
    LOCSTORE(store, 8, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_36_0 + WPtempy * x_2_36_1 + ABtemp * (x_0_36_0 - CDcom * x_0_36_1) + ABCDtemp * x_2_21_1;
    QUICKDouble x_3_21_1 = Ptempz * x_0_21_1 + WPtempz * x_0_21_2 + 2.000000 * ABCDtemp * x_0_13_2;
    LOCSTORE(store, 6, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_44_0 + WPtempx * x_3_44_1 + 3.000000 * ABCDtemp * x_3_21_1;
    LOCSTORE(store, 9, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_43_0 + WPtempz * x_3_43_1 + ABtemp * (x_0_43_0 - CDcom * x_0_43_1) + 3.000000 * ABCDtemp * x_3_21_1;
    QUICKDouble x_0_10_1 = Qtempx * x_0_5_1 + WQtempx * x_0_5_2;
    QUICKDouble x_0_10_2 = Qtempx * x_0_5_2 + WQtempx * x_0_5_3;
    QUICKDouble x_0_10_3 = Qtempx * x_0_5_3 + WQtempx * x_0_5_4;
    QUICKDouble x_0_23_1 = Qtempx * x_0_10_1 + WQtempx * x_0_10_2 + CDtemp * (x_0_5_1 - ABcom * x_0_5_2);
    QUICKDouble x_0_23_2 = Qtempx * x_0_10_2 + WQtempx * x_0_10_3 + CDtemp * (x_0_5_2 - ABcom * x_0_5_3);
    QUICKDouble x_3_36_0 = Ptempz * x_0_36_0 + WPtempz * x_0_36_1 + 2.000000 * ABCDtemp * x_0_23_1;
    QUICKDouble x_3_36_1 = Ptempz * x_0_36_1 + WPtempz * x_0_36_2 + 2.000000 * ABCDtemp * x_0_23_2;
    LOCSTORE(store, 5, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_36_0 + WPtempy * x_3_36_1 + ABCDtemp * x_3_21_1;
    QUICKDouble x_0_35_0 = Qtempx * x_0_22_0 + WQtempx * x_0_22_1;
    QUICKDouble x_0_35_1 = Qtempx * x_0_22_1 + WQtempx * x_0_22_2;
    QUICKDouble x_0_35_2 = Qtempx * x_0_22_2 + WQtempx * x_0_22_3;
    QUICKDouble x_1_35_0 = Ptempx * x_0_35_0 + WPtempx * x_0_35_1 + ABCDtemp * x_0_22_1;
    QUICKDouble x_1_35_1 = Ptempx * x_0_35_1 + WPtempx * x_0_35_2 + ABCDtemp * x_0_22_2;
    QUICKDouble x_1_22_1 = Ptempx * x_0_22_1 + WPtempx * x_0_22_2;
    LOCSTORE(store, 7, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_35_0 + WPtempx * x_1_35_1 + ABtemp * (x_0_35_0 - CDcom * x_0_35_1) + ABCDtemp * x_1_22_1;
    QUICKDouble x_2_22_1 = Ptempy * x_0_22_1 + WPtempy * x_0_22_2 + 2.000000 * ABCDtemp * x_0_16_2;
    LOCSTORE(store, 8, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_42_0 + WPtempy * x_2_42_1 + ABtemp * (x_0_42_0 - CDcom * x_0_42_1) + 3.000000 * ABCDtemp * x_2_22_1;
    QUICKDouble x_2_35_0 = Ptempy * x_0_35_0 + WPtempy * x_0_35_1 + 2.000000 * ABCDtemp * x_0_25_1;
    QUICKDouble x_2_35_1 = Ptempy * x_0_35_1 + WPtempy * x_0_35_2 + 2.000000 * ABCDtemp * x_0_25_2;
    LOCSTORE(store, 4, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_35_0 + WPtempx * x_2_35_1 + ABCDtemp * x_2_22_1;
    QUICKDouble x_3_22_1 = Ptempz * x_0_22_1 + WPtempz * x_0_22_2 + 2.000000 * ABCDtemp * x_0_15_2;
    LOCSTORE(store, 5, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_42_0 + WPtempy * x_3_42_1 + 3.000000 * ABCDtemp * x_3_22_1;
    LOCSTORE(store, 9, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_41_0 + WPtempz * x_3_41_1 + ABtemp * (x_0_41_0 - CDcom * x_0_41_1) + 3.000000 * ABCDtemp * x_3_22_1;
    QUICKDouble x_3_35_0 = Ptempz * x_0_35_0 + WPtempz * x_0_35_1 + 2.000000 * ABCDtemp * x_0_24_1;
    QUICKDouble x_3_35_1 = Ptempz * x_0_35_1 + WPtempz * x_0_35_2 + 2.000000 * ABCDtemp * x_0_24_2;
    LOCSTORE(store, 6, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_35_0 + WPtempx * x_3_35_1 + ABCDtemp * x_3_22_1;
    QUICKDouble x_0_10_0 = Qtempx * x_0_5_0 + WQtempx * x_0_5_1;
    QUICKDouble x_0_10_4 = Qtempx * x_0_5_4 + WQtempx * x_0_5_5;
    QUICKDouble x_0_23_0 = Qtempx * x_0_10_0 + WQtempx * x_0_10_1 + CDtemp * (x_0_5_0 - ABcom * x_0_5_1);
    QUICKDouble x_0_23_3 = Qtempx * x_0_10_3 + WQtempx * x_0_10_4 + CDtemp * (x_0_5_3 - ABcom * x_0_5_4);
    QUICKDouble x_0_38_0 = Qtempx * x_0_23_0 + WQtempx * x_0_23_1 + 2.000000 * CDtemp * (x_0_10_0 - ABcom * x_0_10_1);
    QUICKDouble x_0_38_1 = Qtempx * x_0_23_1 + WQtempx * x_0_23_2 + 2.000000 * CDtemp * (x_0_10_1 - ABcom * x_0_10_2);
    QUICKDouble x_0_38_2 = Qtempx * x_0_23_2 + WQtempx * x_0_23_3 + 2.000000 * CDtemp * (x_0_10_2 - ABcom * x_0_10_3);
    QUICKDouble x_1_38_0 = Ptempx * x_0_38_0 + WPtempx * x_0_38_1 + 3.000000 * ABCDtemp * x_0_23_1;
    QUICKDouble x_1_38_1 = Ptempx * x_0_38_1 + WPtempx * x_0_38_2 + 3.000000 * ABCDtemp * x_0_23_2;
    QUICKDouble x_1_23_1 = Ptempx * x_0_23_1 + WPtempx * x_0_23_2 + 2.000000 * ABCDtemp * x_0_10_2;
    LOCSTORE(store, 7, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_38_0 + WPtempx * x_1_38_1 + ABtemp * (x_0_38_0 - CDcom * x_0_38_1) + 3.000000 * ABCDtemp * x_1_23_1;
    QUICKDouble x_2_38_0 = Ptempy * x_0_38_0 + WPtempy * x_0_38_1 + ABCDtemp * x_0_26_1;
    QUICKDouble x_2_38_1 = Ptempy * x_0_38_1 + WPtempy * x_0_38_2 + ABCDtemp * x_0_26_2;
    QUICKDouble x_2_23_1 = Ptempy * x_0_23_1 + WPtempy * x_0_23_2 + ABCDtemp * x_0_13_2;
    LOCSTORE(store, 4, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_38_0 + WPtempx * x_2_38_1 + 3.000000 * ABCDtemp * x_2_23_1;
    QUICKDouble x_2_37_0 = Ptempy * x_0_37_0 + WPtempy * x_0_37_1 + 2.000000 * ABCDtemp * x_0_23_1;
    QUICKDouble x_2_37_1 = Ptempy * x_0_37_1 + WPtempy * x_0_37_2 + 2.000000 * ABCDtemp * x_0_23_2;
    LOCSTORE(store, 8, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_37_0 + WPtempy * x_2_37_1 + ABtemp * (x_0_37_0 - CDcom * x_0_37_1) + 2.000000 * ABCDtemp * x_2_23_1;
    QUICKDouble x_3_38_0 = Ptempz * x_0_38_0 + WPtempz * x_0_38_1 + ABCDtemp * x_0_28_1;
    QUICKDouble x_3_38_1 = Ptempz * x_0_38_1 + WPtempz * x_0_38_2 + ABCDtemp * x_0_28_2;
    QUICKDouble x_3_23_1 = Ptempz * x_0_23_1 + WPtempz * x_0_23_2 + ABCDtemp * x_0_11_2;
    LOCSTORE(store, 6, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_38_0 + WPtempx * x_3_38_1 + 3.000000 * ABCDtemp * x_3_23_1;
    LOCSTORE(store, 5, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_37_0 + WPtempy * x_3_37_1 + 2.000000 * ABCDtemp * x_3_23_1;
    LOCSTORE(store, 9, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_36_0 + WPtempz * x_3_36_1 + ABtemp * (x_0_36_0 - CDcom * x_0_36_1) + 2.000000 * ABCDtemp * x_3_23_1;
    QUICKDouble x_1_37_0 = Ptempx * x_0_37_0 + WPtempx * x_0_37_1 + 2.000000 * ABCDtemp * x_0_24_1;
    QUICKDouble x_1_37_1 = Ptempx * x_0_37_1 + WPtempx * x_0_37_2 + 2.000000 * ABCDtemp * x_0_24_2;
    QUICKDouble x_1_24_1 = Ptempx * x_0_24_1 + WPtempx * x_0_24_2 + ABCDtemp * x_0_15_2;
    LOCSTORE(store, 7, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_37_0 + WPtempx * x_1_37_1 + ABtemp * (x_0_37_0 - CDcom * x_0_37_1) + 2.000000 * ABCDtemp * x_1_24_1;
    QUICKDouble x_0_39_0 = Qtempx * x_0_30_0 + WQtempx * x_0_30_1;
    QUICKDouble x_0_39_1 = Qtempx * x_0_30_1 + WQtempx * x_0_30_2;
    QUICKDouble x_0_39_2 = Qtempx * x_0_30_2 + WQtempx * x_0_30_3;
    QUICKDouble x_2_39_0 = Ptempy * x_0_39_0 + WPtempy * x_0_39_1 + 3.000000 * ABCDtemp * x_0_24_1;
    QUICKDouble x_2_39_1 = Ptempy * x_0_39_1 + WPtempy * x_0_39_2 + 3.000000 * ABCDtemp * x_0_24_2;
    QUICKDouble x_2_24_1 = Ptempy * x_0_24_1 + WPtempy * x_0_24_2 + 2.000000 * ABCDtemp * x_0_10_2;
    LOCSTORE(store, 8, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_39_0 + WPtempy * x_2_39_1 + ABtemp * (x_0_39_0 - CDcom * x_0_39_1) + 3.000000 * ABCDtemp * x_2_24_1;
    LOCSTORE(store, 4, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_37_0 + WPtempx * x_2_37_1 + 2.000000 * ABCDtemp * x_2_24_1;
    QUICKDouble x_3_39_0 = Ptempz * x_0_39_0 + WPtempz * x_0_39_1 + ABCDtemp * x_0_29_1;
    QUICKDouble x_3_39_1 = Ptempz * x_0_39_1 + WPtempz * x_0_39_2 + ABCDtemp * x_0_29_2;
    QUICKDouble x_3_24_1 = Ptempz * x_0_24_1 + WPtempz * x_0_24_2 + ABCDtemp * x_0_12_2;
    LOCSTORE(store, 5, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_39_0 + WPtempy * x_3_39_1 + 3.000000 * ABCDtemp * x_3_24_1;
    LOCSTORE(store, 6, 37, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_37_0 + WPtempx * x_3_37_1 + 2.000000 * ABCDtemp * x_3_24_1;
    LOCSTORE(store, 9, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_35_0 + WPtempz * x_3_35_1 + ABtemp * (x_0_35_0 - CDcom * x_0_35_1) + 2.000000 * ABCDtemp * x_3_24_1;
    QUICKDouble x_1_36_0 = Ptempx * x_0_36_0 + WPtempx * x_0_36_1 + 2.000000 * ABCDtemp * x_0_25_1;
    QUICKDouble x_1_36_1 = Ptempx * x_0_36_1 + WPtempx * x_0_36_2 + 2.000000 * ABCDtemp * x_0_25_2;
    QUICKDouble x_1_25_1 = Ptempx * x_0_25_1 + WPtempx * x_0_25_2 + ABCDtemp * x_0_16_2;
    LOCSTORE(store, 7, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_36_0 + WPtempx * x_1_36_1 + ABtemp * (x_0_36_0 - CDcom * x_0_36_1) + 2.000000 * ABCDtemp * x_1_25_1;
    QUICKDouble x_2_25_1 = Ptempy * x_0_25_1 + WPtempy * x_0_25_2 + ABCDtemp * x_0_14_2;
    LOCSTORE(store, 4, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_36_0 + WPtempx * x_2_36_1 + 2.000000 * ABCDtemp * x_2_25_1;
    LOCSTORE(store, 8, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_35_0 + WPtempy * x_2_35_1 + ABtemp * (x_0_35_0 - CDcom * x_0_35_1) + 2.000000 * ABCDtemp * x_2_25_1;
    QUICKDouble x_0_40_0 = Qtempx * x_0_31_0 + WQtempx * x_0_31_1;
    QUICKDouble x_0_40_1 = Qtempx * x_0_31_1 + WQtempx * x_0_31_2;
    QUICKDouble x_0_40_2 = Qtempx * x_0_31_2 + WQtempx * x_0_31_3;
    QUICKDouble x_3_40_0 = Ptempz * x_0_40_0 + WPtempz * x_0_40_1 + 3.000000 * ABCDtemp * x_0_25_1;
    QUICKDouble x_3_40_1 = Ptempz * x_0_40_1 + WPtempz * x_0_40_2 + 3.000000 * ABCDtemp * x_0_25_2;
    QUICKDouble x_3_25_1 = Ptempz * x_0_25_1 + WPtempz * x_0_25_2 + 2.000000 * ABCDtemp * x_0_10_2;
    LOCSTORE(store, 9, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_40_0 + WPtempz * x_3_40_1 + ABtemp * (x_0_40_0 - CDcom * x_0_40_1) + 3.000000 * ABCDtemp * x_3_25_1;
    LOCSTORE(store, 6, 36, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_36_0 + WPtempx * x_3_36_1 + 2.000000 * ABCDtemp * x_3_25_1;
    LOCSTORE(store, 5, 35, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_35_0 + WPtempy * x_3_35_1 + 2.000000 * ABCDtemp * x_3_25_1;
    QUICKDouble x_1_50_0 = Ptempx * x_0_50_0 + WPtempx * x_0_50_1 + 4.000000 * ABCDtemp * x_0_26_1;
    QUICKDouble x_1_50_1 = Ptempx * x_0_50_1 + WPtempx * x_0_50_2 + 4.000000 * ABCDtemp * x_0_26_2;
    QUICKDouble x_1_26_1 = Ptempx * x_0_26_1 + WPtempx * x_0_26_2 + 3.000000 * ABCDtemp * x_0_13_2;
    LOCSTORE(store, 7, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_50_0 + WPtempx * x_1_50_1 + ABtemp * (x_0_50_0 - CDcom * x_0_50_1) + 4.000000 * ABCDtemp * x_1_26_1;
    QUICKDouble x_2_26_1 = Ptempy * x_0_26_1 + WPtempy * x_0_26_2;
    LOCSTORE(store, 4, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_50_0 + WPtempx * x_2_50_1 + 4.000000 * ABCDtemp * x_2_26_1;
    LOCSTORE(store, 8, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_38_0 + WPtempy * x_2_38_1 + ABtemp * (x_0_38_0 - CDcom * x_0_38_1) + ABCDtemp * x_2_26_1;
    QUICKDouble x_3_26_1 = Ptempz * x_0_26_1 + WPtempz * x_0_26_2 + ABCDtemp * x_0_17_2;
    LOCSTORE(store, 6, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_50_0 + WPtempx * x_3_50_1 + 4.000000 * ABCDtemp * x_3_26_1;
    LOCSTORE(store, 9, 44, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_44_0 + WPtempz * x_3_44_1 + ABtemp * (x_0_44_0 - CDcom * x_0_44_1) + 2.000000 * ABCDtemp * x_3_26_1;
    LOCSTORE(store, 5, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_38_0 + WPtempy * x_3_38_1 + ABCDtemp * x_3_26_1;
    QUICKDouble x_1_43_0 = Ptempx * x_0_43_0 + WPtempx * x_0_43_1 + 2.000000 * ABCDtemp * x_0_27_1;
    QUICKDouble x_1_43_1 = Ptempx * x_0_43_1 + WPtempx * x_0_43_2 + 2.000000 * ABCDtemp * x_0_27_2;
    QUICKDouble x_1_27_1 = Ptempx * x_0_27_1 + WPtempx * x_0_27_2 + ABCDtemp * x_0_19_2;
    LOCSTORE(store, 7, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_43_0 + WPtempx * x_1_43_1 + ABtemp * (x_0_43_0 - CDcom * x_0_43_1) + 2.000000 * ABCDtemp * x_1_27_1;
    QUICKDouble x_2_27_1 = Ptempy * x_0_27_1 + WPtempy * x_0_27_2;
    LOCSTORE(store, 4, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_43_0 + WPtempx * x_2_43_1 + 2.000000 * ABCDtemp * x_2_27_1;
    QUICKDouble x_2_40_0 = Ptempy * x_0_40_0 + WPtempy * x_0_40_1 + ABCDtemp * x_0_27_1;
    QUICKDouble x_2_40_1 = Ptempy * x_0_40_1 + WPtempy * x_0_40_2 + ABCDtemp * x_0_27_2;
    LOCSTORE(store, 8, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_40_0 + WPtempy * x_2_40_1 + ABtemp * (x_0_40_0 - CDcom * x_0_40_1) + ABCDtemp * x_2_27_1;
    QUICKDouble x_3_27_1 = Ptempz * x_0_27_1 + WPtempz * x_0_27_2 + 3.000000 * ABCDtemp * x_0_14_2;
    LOCSTORE(store, 9, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_49_0 + WPtempz * x_3_49_1 + ABtemp * (x_0_49_0 - CDcom * x_0_49_1) + 4.000000 * ABCDtemp * x_3_27_1;
    LOCSTORE(store, 6, 43, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_43_0 + WPtempx * x_3_43_1 + 2.000000 * ABCDtemp * x_3_27_1;
    LOCSTORE(store, 5, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_40_0 + WPtempy * x_3_40_1 + ABCDtemp * x_3_27_1;
    QUICKDouble x_1_52_0 = Ptempx * x_0_52_0 + WPtempx * x_0_52_1 + 4.000000 * ABCDtemp * x_0_28_1;
    QUICKDouble x_1_52_1 = Ptempx * x_0_52_1 + WPtempx * x_0_52_2 + 4.000000 * ABCDtemp * x_0_28_2;
    QUICKDouble x_1_28_1 = Ptempx * x_0_28_1 + WPtempx * x_0_28_2 + 3.000000 * ABCDtemp * x_0_11_2;
    LOCSTORE(store, 7, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_52_0 + WPtempx * x_1_52_1 + ABtemp * (x_0_52_0 - CDcom * x_0_52_1) + 4.000000 * ABCDtemp * x_1_28_1;
    QUICKDouble x_2_52_0 = Ptempy * x_0_52_0 + WPtempy * x_0_52_1 + ABCDtemp * x_0_32_1;
    QUICKDouble x_2_52_1 = Ptempy * x_0_52_1 + WPtempy * x_0_52_2 + ABCDtemp * x_0_32_2;
    QUICKDouble x_2_28_1 = Ptempy * x_0_28_1 + WPtempy * x_0_28_2 + ABCDtemp * x_0_17_2;
    LOCSTORE(store, 4, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_52_0 + WPtempx * x_2_52_1 + 4.000000 * ABCDtemp * x_2_28_1;
    LOCSTORE(store, 8, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_46_0 + WPtempy * x_2_46_1 + ABtemp * (x_0_46_0 - CDcom * x_0_46_1) + 2.000000 * ABCDtemp * x_2_28_1;
    QUICKDouble x_3_28_1 = Ptempz * x_0_28_1 + WPtempz * x_0_28_2;
    LOCSTORE(store, 6, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_52_0 + WPtempx * x_3_52_1 + 4.000000 * ABCDtemp * x_3_28_1;
    LOCSTORE(store, 5, 46, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_46_0 + WPtempy * x_3_46_1 + 2.000000 * ABCDtemp * x_3_28_1;
    LOCSTORE(store, 9, 38, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_38_0 + WPtempz * x_3_38_1 + ABtemp * (x_0_38_0 - CDcom * x_0_38_1) + ABCDtemp * x_3_28_1;
    QUICKDouble x_1_45_0 = Ptempx * x_0_45_0 + WPtempx * x_0_45_1 + 2.000000 * ABCDtemp * x_0_29_1;
    QUICKDouble x_1_45_1 = Ptempx * x_0_45_1 + WPtempx * x_0_45_2 + 2.000000 * ABCDtemp * x_0_29_2;
    QUICKDouble x_1_29_1 = Ptempx * x_0_29_1 + WPtempx * x_0_29_2 + ABCDtemp * x_0_18_2;
    LOCSTORE(store, 7, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_45_0 + WPtempx * x_1_45_1 + ABtemp * (x_0_45_0 - CDcom * x_0_45_1) + 2.000000 * ABCDtemp * x_1_29_1;
    QUICKDouble x_2_51_0 = Ptempy * x_0_51_0 + WPtempy * x_0_51_1 + 4.000000 * ABCDtemp * x_0_29_1;
    QUICKDouble x_2_51_1 = Ptempy * x_0_51_1 + WPtempy * x_0_51_2 + 4.000000 * ABCDtemp * x_0_29_2;
    QUICKDouble x_2_29_1 = Ptempy * x_0_29_1 + WPtempy * x_0_29_2 + 3.000000 * ABCDtemp * x_0_12_2;
    LOCSTORE(store, 8, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_51_0 + WPtempy * x_2_51_1 + ABtemp * (x_0_51_0 - CDcom * x_0_51_1) + 4.000000 * ABCDtemp * x_2_29_1;
    LOCSTORE(store, 4, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_45_0 + WPtempx * x_2_45_1 + 2.000000 * ABCDtemp * x_2_29_1;
    QUICKDouble x_3_29_1 = Ptempz * x_0_29_1 + WPtempz * x_0_29_2;
    LOCSTORE(store, 5, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_51_0 + WPtempy * x_3_51_1 + 4.000000 * ABCDtemp * x_3_29_1;
    LOCSTORE(store, 6, 45, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_45_0 + WPtempx * x_3_45_1 + 2.000000 * ABCDtemp * x_3_29_1;
    LOCSTORE(store, 9, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_39_0 + WPtempz * x_3_39_1 + ABtemp * (x_0_39_0 - CDcom * x_0_39_1) + ABCDtemp * x_3_29_1;
    QUICKDouble x_1_39_0 = Ptempx * x_0_39_0 + WPtempx * x_0_39_1 + ABCDtemp * x_0_30_1;
    QUICKDouble x_1_39_1 = Ptempx * x_0_39_1 + WPtempx * x_0_39_2 + ABCDtemp * x_0_30_2;
    QUICKDouble x_1_30_1 = Ptempx * x_0_30_1 + WPtempx * x_0_30_2;
    LOCSTORE(store, 7, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_39_0 + WPtempx * x_1_39_1 + ABtemp * (x_0_39_0 - CDcom * x_0_39_1) + ABCDtemp * x_1_30_1;
    QUICKDouble x_2_30_1 = Ptempy * x_0_30_1 + WPtempy * x_0_30_2 + 3.000000 * ABCDtemp * x_0_15_2;
    LOCSTORE(store, 8, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_48_0 + WPtempy * x_2_48_1 + ABtemp * (x_0_48_0 - CDcom * x_0_48_1) + 4.000000 * ABCDtemp * x_2_30_1;
    LOCSTORE(store, 4, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_39_0 + WPtempx * x_2_39_1 + ABCDtemp * x_2_30_1;
    QUICKDouble x_3_30_1 = Ptempz * x_0_30_1 + WPtempz * x_0_30_2 + ABCDtemp * x_0_18_2;
    LOCSTORE(store, 5, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_48_0 + WPtempy * x_3_48_1 + 4.000000 * ABCDtemp * x_3_30_1;
    LOCSTORE(store, 9, 42, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_42_0 + WPtempz * x_3_42_1 + ABtemp * (x_0_42_0 - CDcom * x_0_42_1) + 2.000000 * ABCDtemp * x_3_30_1;
    LOCSTORE(store, 6, 39, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_39_0 + WPtempx * x_3_39_1 + ABCDtemp * x_3_30_1;
    QUICKDouble x_1_40_0 = Ptempx * x_0_40_0 + WPtempx * x_0_40_1 + ABCDtemp * x_0_31_1;
    QUICKDouble x_1_40_1 = Ptempx * x_0_40_1 + WPtempx * x_0_40_2 + ABCDtemp * x_0_31_2;
    QUICKDouble x_1_31_1 = Ptempx * x_0_31_1 + WPtempx * x_0_31_2;
    LOCSTORE(store, 7, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_40_0 + WPtempx * x_1_40_1 + ABtemp * (x_0_40_0 - CDcom * x_0_40_1) + ABCDtemp * x_1_31_1;
    QUICKDouble x_2_31_1 = Ptempy * x_0_31_1 + WPtempy * x_0_31_2 + ABCDtemp * x_0_19_2;
    LOCSTORE(store, 8, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_41_0 + WPtempy * x_2_41_1 + ABtemp * (x_0_41_0 - CDcom * x_0_41_1) + 2.000000 * ABCDtemp * x_2_31_1;
    LOCSTORE(store, 4, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_40_0 + WPtempx * x_2_40_1 + ABCDtemp * x_2_31_1;
    QUICKDouble x_3_31_1 = Ptempz * x_0_31_1 + WPtempz * x_0_31_2 + 3.000000 * ABCDtemp * x_0_16_2;
    LOCSTORE(store, 9, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_47_0 + WPtempz * x_3_47_1 + ABtemp * (x_0_47_0 - CDcom * x_0_47_1) + 4.000000 * ABCDtemp * x_3_31_1;
    LOCSTORE(store, 5, 41, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_41_0 + WPtempy * x_3_41_1 + 2.000000 * ABCDtemp * x_3_31_1;
    LOCSTORE(store, 6, 40, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_40_0 + WPtempx * x_3_40_1 + ABCDtemp * x_3_31_1;
    QUICKDouble x_1_53_0 = Ptempx * x_0_53_0 + WPtempx * x_0_53_1 + 5.000000 * ABCDtemp * x_0_32_1;
    QUICKDouble x_1_53_1 = Ptempx * x_0_53_1 + WPtempx * x_0_53_2 + 5.000000 * ABCDtemp * x_0_32_2;
    QUICKDouble x_1_32_1 = Ptempx * x_0_32_1 + WPtempx * x_0_32_2 + 4.000000 * ABCDtemp * x_0_17_2;
    LOCSTORE(store, 7, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_53_0 + WPtempx * x_1_53_1 + ABtemp * (x_0_53_0 - CDcom * x_0_53_1) + 5.000000 * ABCDtemp * x_1_32_1;
    QUICKDouble x_2_32_1 = Ptempy * x_0_32_1 + WPtempy * x_0_32_2;
    LOCSTORE(store, 4, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_53_0 + WPtempx * x_2_53_1 + 5.000000 * ABCDtemp * x_2_32_1;
    LOCSTORE(store, 8, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_52_0 + WPtempy * x_2_52_1 + ABtemp * (x_0_52_0 - CDcom * x_0_52_1) + ABCDtemp * x_2_32_1;
    QUICKDouble x_3_32_1 = Ptempz * x_0_32_1 + WPtempz * x_0_32_2;
    LOCSTORE(store, 6, 53, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_53_0 + WPtempx * x_3_53_1 + 5.000000 * ABCDtemp * x_3_32_1;
    LOCSTORE(store, 5, 52, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_52_0 + WPtempy * x_3_52_1 + ABCDtemp * x_3_32_1;
    LOCSTORE(store, 9, 50, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_50_0 + WPtempz * x_3_50_1 + ABtemp * (x_0_50_0 - CDcom * x_0_50_1) + ABCDtemp * x_3_32_1;
    QUICKDouble x_1_51_0 = Ptempx * x_0_51_0 + WPtempx * x_0_51_1 + ABCDtemp * x_0_33_1;
    QUICKDouble x_1_51_1 = Ptempx * x_0_51_1 + WPtempx * x_0_51_2 + ABCDtemp * x_0_33_2;
    QUICKDouble x_1_33_1 = Ptempx * x_0_33_1 + WPtempx * x_0_33_2;
    LOCSTORE(store, 7, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_51_0 + WPtempx * x_1_51_1 + ABtemp * (x_0_51_0 - CDcom * x_0_51_1) + ABCDtemp * x_1_33_1;
    QUICKDouble x_2_33_1 = Ptempy * x_0_33_1 + WPtempy * x_0_33_2 + 4.000000 * ABCDtemp * x_0_18_2;
    LOCSTORE(store, 8, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_54_0 + WPtempy * x_2_54_1 + ABtemp * (x_0_54_0 - CDcom * x_0_54_1) + 5.000000 * ABCDtemp * x_2_33_1;
    LOCSTORE(store, 4, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_51_0 + WPtempx * x_2_51_1 + ABCDtemp * x_2_33_1;
    QUICKDouble x_3_33_1 = Ptempz * x_0_33_1 + WPtempz * x_0_33_2;
    LOCSTORE(store, 5, 54, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_54_0 + WPtempy * x_3_54_1 + 5.000000 * ABCDtemp * x_3_33_1;
    LOCSTORE(store, 6, 51, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_51_0 + WPtempx * x_3_51_1 + ABCDtemp * x_3_33_1;
    LOCSTORE(store, 9, 48, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_48_0 + WPtempz * x_3_48_1 + ABtemp * (x_0_48_0 - CDcom * x_0_48_1) + ABCDtemp * x_3_33_1;
    QUICKDouble x_1_49_0 = Ptempx * x_0_49_0 + WPtempx * x_0_49_1 + ABCDtemp * x_0_34_1;
    QUICKDouble x_1_49_1 = Ptempx * x_0_49_1 + WPtempx * x_0_49_2 + ABCDtemp * x_0_34_2;
    QUICKDouble x_1_34_1 = Ptempx * x_0_34_1 + WPtempx * x_0_34_2;
    LOCSTORE(store, 7, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_1_49_0 + WPtempx * x_1_49_1 + ABtemp * (x_0_49_0 - CDcom * x_0_49_1) + ABCDtemp * x_1_34_1;
    QUICKDouble x_2_34_1 = Ptempy * x_0_34_1 + WPtempy * x_0_34_2;
    LOCSTORE(store, 4, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_2_49_0 + WPtempx * x_2_49_1 + ABCDtemp * x_2_34_1;
    LOCSTORE(store, 8, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_2_47_0 + WPtempy * x_2_47_1 + ABtemp * (x_0_47_0 - CDcom * x_0_47_1) + ABCDtemp * x_2_34_1;
    QUICKDouble x_3_34_1 = Ptempz * x_0_34_1 + WPtempz * x_0_34_2 + 4.000000 * ABCDtemp * x_0_19_2;
    LOCSTORE(store, 9, 55, STOREDIM, STOREDIM) STORE_OPERATOR Ptempz * x_3_55_0 + WPtempz * x_3_55_1 + ABtemp * (x_0_55_0 - CDcom * x_0_55_1) + 5.000000 * ABCDtemp * x_3_34_1;
    LOCSTORE(store, 6, 49, STOREDIM, STOREDIM) STORE_OPERATOR Ptempx * x_3_49_0 + WPtempx * x_3_49_1 + ABCDtemp * x_3_34_1;
    LOCSTORE(store, 5, 47, STOREDIM, STOREDIM) STORE_OPERATOR Ptempy * x_3_47_0 + WPtempy * x_3_47_1 + ABCDtemp * x_3_34_1;
    // [DS|HS] integral - End 

}

