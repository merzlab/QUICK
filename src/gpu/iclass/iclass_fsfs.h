/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [FS|FS] integral - Start
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble x_3_0_1 = Ptempz * VY_1 + WPtempz * VY_2;
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_3_0_2 = Ptempz * VY_2 + WPtempz * VY_3;
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble x_3_0_0 = Ptempz * VY_0 + WPtempz * VY_1;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_3_0_3 = Ptempz * VY_3 + WPtempz * VY_4;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_3_0_4 = Ptempz * VY_4 + WPtempz * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_3_0_5 = Ptempz * VY_5 + WPtempz * VY_6;
    QUICKDouble x_0_2_1 = Qtempy * VY_1 + WQtempy * VY_2;
    QUICKDouble x_0_2_2 = Qtempy * VY_2 + WQtempy * VY_3;
    QUICKDouble x_0_2_3 = Qtempy * VY_3 + WQtempy * VY_4;
    QUICKDouble x_0_2_4 = Qtempy * VY_4 + WQtempy * VY_5;
    QUICKDouble x_5_0_1 = Ptempy * x_3_0_1 + WPtempy * x_3_0_2;
    QUICKDouble x_5_0_0 = Ptempy * x_3_0_0 + WPtempy * x_3_0_1;
    QUICKDouble x_5_0_2 = Ptempy * x_3_0_2 + WPtempy * x_3_0_3;
    QUICKDouble x_5_0_3 = Ptempy * x_3_0_3 + WPtempy * x_3_0_4;
    QUICKDouble x_5_0_4 = Ptempy * x_3_0_4 + WPtempy * x_3_0_5;
    QUICKDouble x_0_4_1 = Qtempx * x_0_2_1 + WQtempx * x_0_2_2;
    QUICKDouble x_0_4_2 = Qtempx * x_0_2_2 + WQtempx * x_0_2_3;
    QUICKDouble x_0_4_3 = Qtempx * x_0_2_3 + WQtempx * x_0_2_4;
    QUICKDouble x_0_1_2 = Qtempx * VY_2 + WQtempx * VY_3;
    QUICKDouble x_0_1_3 = Qtempx * VY_3 + WQtempx * VY_4;
    QUICKDouble x_6_0_1 = Ptempx * x_3_0_1 + WPtempx * x_3_0_2;
    QUICKDouble x_10_0_0 = Ptempx * x_5_0_0 + WPtempx * x_5_0_1;
    QUICKDouble x_10_0_1 = Ptempx * x_5_0_1 + WPtempx * x_5_0_2;
    QUICKDouble x_6_0_2 = Ptempx * x_3_0_2 + WPtempx * x_3_0_3;
    QUICKDouble x_10_0_2 = Ptempx * x_5_0_2 + WPtempx * x_5_0_3;
    QUICKDouble x_6_0_3 = Ptempx * x_3_0_3 + WPtempx * x_3_0_4;
    QUICKDouble x_10_0_3 = Ptempx * x_5_0_3 + WPtempx * x_5_0_4;
    QUICKDouble x_3_4_1 = Ptempz * x_0_4_1 + WPtempz * x_0_4_2;
    QUICKDouble x_3_4_2 = Ptempz * x_0_4_2 + WPtempz * x_0_4_3;
    QUICKDouble x_3_1_2 = Ptempz * x_0_1_2 + WPtempz * x_0_1_3;
    QUICKDouble x_10_2_0 = Qtempy * x_10_0_0 + WQtempy * x_10_0_1 + ABCDtemp * x_6_0_1;
    QUICKDouble x_10_2_1 = Qtempy * x_10_0_1 + WQtempy * x_10_0_2 + ABCDtemp * x_6_0_2;
    QUICKDouble x_5_2_1 = Qtempy * x_5_0_1 + WQtempy * x_5_0_2 + ABCDtemp * x_3_0_2;
    QUICKDouble x_5_2_2 = Qtempy * x_5_0_2 + WQtempy * x_5_0_3 + ABCDtemp * x_3_0_3;
    QUICKDouble x_10_2_2 = Qtempy * x_10_0_2 + WQtempy * x_10_0_3 + ABCDtemp * x_6_0_3;
    QUICKDouble x_5_4_1 = Ptempy * x_3_4_1 + WPtempy * x_3_4_2 + ABCDtemp * x_3_1_2;
    QUICKDouble x_10_4_0 = Qtempx * x_10_2_0 + WQtempx * x_10_2_1 + ABCDtemp * x_5_2_1;
    QUICKDouble x_10_4_1 = Qtempx * x_10_2_1 + WQtempx * x_10_2_2 + ABCDtemp * x_5_2_2;
    LOCSTORE(store, 10, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_4_0 + WQtempx * x_10_4_1 + CDtemp * (x_10_2_0 - ABcom * x_10_2_1) + ABCDtemp * x_5_4_1;
    QUICKDouble x_0_3_1 = Qtempz * VY_1 + WQtempz * VY_2;
    QUICKDouble x_0_3_2 = Qtempz * VY_2 + WQtempz * VY_3;
    QUICKDouble x_0_3_3 = Qtempz * VY_3 + WQtempz * VY_4;
    QUICKDouble x_0_3_4 = Qtempz * VY_4 + WQtempz * VY_5;
    QUICKDouble x_2_0_1 = Ptempy * VY_1 + WPtempy * VY_2;
    QUICKDouble x_2_0_2 = Ptempy * VY_2 + WPtempy * VY_3;
    QUICKDouble x_2_0_3 = Ptempy * VY_3 + WPtempy * VY_4;
    QUICKDouble x_2_0_4 = Ptempy * VY_4 + WPtempy * VY_5;
    QUICKDouble x_0_5_1 = Qtempy * x_0_3_1 + WQtempy * x_0_3_2;
    QUICKDouble x_0_5_2 = Qtempy * x_0_3_2 + WQtempy * x_0_3_3;
    QUICKDouble x_0_5_3 = Qtempy * x_0_3_3 + WQtempy * x_0_3_4;
    QUICKDouble x_4_0_1 = Ptempx * x_2_0_1 + WPtempx * x_2_0_2;
    QUICKDouble x_4_0_2 = Ptempx * x_2_0_2 + WPtempx * x_2_0_3;
    QUICKDouble x_1_0_2 = Ptempx * VY_2 + WPtempx * VY_3;
    QUICKDouble x_1_0_3 = Ptempx * VY_3 + WPtempx * VY_4;
    QUICKDouble x_4_0_3 = Ptempx * x_2_0_3 + WPtempx * x_2_0_4;
    QUICKDouble x_3_5_1 = Ptempz * x_0_5_1 + WPtempz * x_0_5_2 + ABCDtemp * x_0_2_2;
    QUICKDouble x_3_5_2 = Ptempz * x_0_5_2 + WPtempz * x_0_5_3 + ABCDtemp * x_0_2_3;
    QUICKDouble x_10_3_0 = Qtempz * x_10_0_0 + WQtempz * x_10_0_1 + ABCDtemp * x_4_0_1;
    QUICKDouble x_10_3_1 = Qtempz * x_10_0_1 + WQtempz * x_10_0_2 + ABCDtemp * x_4_0_2;
    QUICKDouble x_6_3_1 = Qtempz * x_6_0_1 + WQtempz * x_6_0_2 + ABCDtemp * x_1_0_2;
    QUICKDouble x_6_3_2 = Qtempz * x_6_0_2 + WQtempz * x_6_0_3 + ABCDtemp * x_1_0_3;
    QUICKDouble x_10_3_2 = Qtempz * x_10_0_2 + WQtempz * x_10_0_3 + ABCDtemp * x_4_0_3;
    QUICKDouble x_6_5_1 = Ptempx * x_3_5_1 + WPtempx * x_3_5_2;
    QUICKDouble x_10_5_0 = Qtempy * x_10_3_0 + WQtempy * x_10_3_1 + ABCDtemp * x_6_3_1;
    QUICKDouble x_10_5_1 = Qtempy * x_10_3_1 + WQtempy * x_10_3_2 + ABCDtemp * x_6_3_2;
    LOCSTORE(store, 10, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_10_5_0 + WQtempy * x_10_5_1 + CDtemp * (x_10_3_0 - ABcom * x_10_3_1) + ABCDtemp * x_6_5_1;
    QUICKDouble x_3_3_2 = Ptempz * x_0_3_2 + WPtempz * x_0_3_3 + ABCDtemp * VY_3;
    QUICKDouble x_5_5_1 = Ptempy * x_3_5_1 + WPtempy * x_3_5_2 + ABCDtemp * x_3_3_2;
    LOCSTORE(store, 10, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_5_0 + WQtempx * x_10_5_1 + ABCDtemp * x_5_5_1;
    QUICKDouble x_0_6_1 = Qtempx * x_0_3_1 + WQtempx * x_0_3_2;
    QUICKDouble x_0_6_2 = Qtempx * x_0_3_2 + WQtempx * x_0_3_3;
    QUICKDouble x_0_6_3 = Qtempx * x_0_3_3 + WQtempx * x_0_3_4;
    QUICKDouble x_3_6_1 = Ptempz * x_0_6_1 + WPtempz * x_0_6_2 + ABCDtemp * x_0_1_2;
    QUICKDouble x_3_6_2 = Ptempz * x_0_6_2 + WPtempz * x_0_6_3 + ABCDtemp * x_0_1_3;
    QUICKDouble x_5_3_1 = Qtempz * x_5_0_1 + WQtempz * x_5_0_2 + ABCDtemp * x_2_0_2;
    QUICKDouble x_5_3_2 = Qtempz * x_5_0_2 + WQtempz * x_5_0_3 + ABCDtemp * x_2_0_3;
    QUICKDouble x_5_6_1 = Ptempy * x_3_6_1 + WPtempy * x_3_6_2;
    QUICKDouble x_10_6_0 = Qtempx * x_10_3_0 + WQtempx * x_10_3_1 + ABCDtemp * x_5_3_1;
    QUICKDouble x_10_6_1 = Qtempx * x_10_3_1 + WQtempx * x_10_3_2 + ABCDtemp * x_5_3_2;
    LOCSTORE(store, 10, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_6_0 + WQtempx * x_10_6_1 + CDtemp * (x_10_3_0 - ABcom * x_10_3_1) + ABCDtemp * x_5_6_1;
    QUICKDouble x_0_1_1 = Qtempx * VY_1 + WQtempx * VY_2;
    QUICKDouble x_0_1_4 = Qtempx * VY_4 + WQtempx * VY_5;
    QUICKDouble x_0_7_1 = Qtempx * x_0_1_1 + WQtempx * x_0_1_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_7_2 = Qtempx * x_0_1_2 + WQtempx * x_0_1_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_7_3 = Qtempx * x_0_1_3 + WQtempx * x_0_1_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_3_7_1 = Ptempz * x_0_7_1 + WPtempz * x_0_7_2;
    QUICKDouble x_3_7_2 = Ptempz * x_0_7_2 + WPtempz * x_0_7_3;
    QUICKDouble x_10_1_0 = Qtempx * x_10_0_0 + WQtempx * x_10_0_1 + ABCDtemp * x_5_0_1;
    QUICKDouble x_10_1_1 = Qtempx * x_10_0_1 + WQtempx * x_10_0_2 + ABCDtemp * x_5_0_2;
    QUICKDouble x_5_1_1 = Qtempx * x_5_0_1 + WQtempx * x_5_0_2;
    QUICKDouble x_5_1_2 = Qtempx * x_5_0_2 + WQtempx * x_5_0_3;
    QUICKDouble x_10_1_2 = Qtempx * x_10_0_2 + WQtempx * x_10_0_3 + ABCDtemp * x_5_0_3;
    QUICKDouble x_5_7_1 = Ptempy * x_3_7_1 + WPtempy * x_3_7_2;
    QUICKDouble x_10_7_0 = Qtempx * x_10_1_0 + WQtempx * x_10_1_1 + CDtemp * (x_10_0_0 - ABcom * x_10_0_1) + ABCDtemp * x_5_1_1;
    QUICKDouble x_10_7_1 = Qtempx * x_10_1_1 + WQtempx * x_10_1_2 + CDtemp * (x_10_0_1 - ABcom * x_10_0_2) + ABCDtemp * x_5_1_2;
    LOCSTORE(store, 10, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_7_0 + WQtempx * x_10_7_1 + 2.000000 * CDtemp * (x_10_1_0 - ABcom * x_10_1_1) + ABCDtemp * x_5_7_1;
    QUICKDouble x_0_8_1 = Qtempy * x_0_2_1 + WQtempy * x_0_2_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_8_2 = Qtempy * x_0_2_2 + WQtempy * x_0_2_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_8_3 = Qtempy * x_0_2_3 + WQtempy * x_0_2_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_3_8_1 = Ptempz * x_0_8_1 + WPtempz * x_0_8_2;
    QUICKDouble x_3_8_2 = Ptempz * x_0_8_2 + WPtempz * x_0_8_3;
    QUICKDouble x_6_2_1 = Qtempy * x_6_0_1 + WQtempy * x_6_0_2;
    QUICKDouble x_6_2_2 = Qtempy * x_6_0_2 + WQtempy * x_6_0_3;
    QUICKDouble x_6_8_1 = Ptempx * x_3_8_1 + WPtempx * x_3_8_2;
    QUICKDouble x_10_8_0 = Qtempy * x_10_2_0 + WQtempy * x_10_2_1 + CDtemp * (x_10_0_0 - ABcom * x_10_0_1) + ABCDtemp * x_6_2_1;
    QUICKDouble x_10_8_1 = Qtempy * x_10_2_1 + WQtempy * x_10_2_2 + CDtemp * (x_10_0_1 - ABcom * x_10_0_2) + ABCDtemp * x_6_2_2;
    LOCSTORE(store, 10, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_10_8_0 + WQtempy * x_10_8_1 + 2.000000 * CDtemp * (x_10_2_0 - ABcom * x_10_2_1) + ABCDtemp * x_6_8_1;
    QUICKDouble x_3_2_2 = Ptempz * x_0_2_2 + WPtempz * x_0_2_3;
    QUICKDouble x_5_8_1 = Ptempy * x_3_8_1 + WPtempy * x_3_8_2 + 2.000000 * ABCDtemp * x_3_2_2;
    LOCSTORE(store, 10, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_8_0 + WQtempx * x_10_8_1 + ABCDtemp * x_5_8_1;
    QUICKDouble x_0_9_1 = Qtempz * x_0_3_1 + WQtempz * x_0_3_2 + CDtemp * (VY_1 - ABcom * VY_2);
    QUICKDouble x_0_9_2 = Qtempz * x_0_3_2 + WQtempz * x_0_3_3 + CDtemp * (VY_2 - ABcom * VY_3);
    QUICKDouble x_0_9_3 = Qtempz * x_0_3_3 + WQtempz * x_0_3_4 + CDtemp * (VY_3 - ABcom * VY_4);
    QUICKDouble x_2_9_1 = Ptempy * x_0_9_1 + WPtempy * x_0_9_2;
    QUICKDouble x_2_9_2 = Ptempy * x_0_9_2 + WPtempy * x_0_9_3;
    QUICKDouble x_4_3_1 = Qtempz * x_4_0_1 + WQtempz * x_4_0_2;
    QUICKDouble x_4_3_2 = Qtempz * x_4_0_2 + WQtempz * x_4_0_3;
    QUICKDouble x_4_9_1 = Ptempx * x_2_9_1 + WPtempx * x_2_9_2;
    QUICKDouble x_10_9_0 = Qtempz * x_10_3_0 + WQtempz * x_10_3_1 + CDtemp * (x_10_0_0 - ABcom * x_10_0_1) + ABCDtemp * x_4_3_1;
    QUICKDouble x_10_9_1 = Qtempz * x_10_3_1 + WQtempz * x_10_3_2 + CDtemp * (x_10_0_1 - ABcom * x_10_0_2) + ABCDtemp * x_4_3_2;
    LOCSTORE(store, 10, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_10_9_0 + WQtempz * x_10_9_1 + 2.000000 * CDtemp * (x_10_3_0 - ABcom * x_10_3_1) + ABCDtemp * x_4_9_1;
    QUICKDouble x_3_9_1 = Ptempz * x_0_9_1 + WPtempz * x_0_9_2 + 2.000000 * ABCDtemp * x_0_3_2;
    QUICKDouble x_3_9_2 = Ptempz * x_0_9_2 + WPtempz * x_0_9_3 + 2.000000 * ABCDtemp * x_0_3_3;
    QUICKDouble x_6_9_1 = Ptempx * x_3_9_1 + WPtempx * x_3_9_2;
    LOCSTORE(store, 10, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_10_9_0 + WQtempy * x_10_9_1 + ABCDtemp * x_6_9_1;
    QUICKDouble x_5_9_1 = Ptempy * x_3_9_1 + WPtempy * x_3_9_2;
    LOCSTORE(store, 10, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_10_9_0 + WQtempx * x_10_9_1 + ABCDtemp * x_5_9_1;
    QUICKDouble x_2_0_0 = Ptempy * VY_0 + WPtempy * VY_1;
    QUICKDouble x_2_0_5 = Ptempy * VY_5 + WPtempy * VY_6;
    QUICKDouble x_1_0_1 = Ptempx * VY_1 + WPtempx * VY_2;
    QUICKDouble x_4_0_0 = Ptempx * x_2_0_0 + WPtempx * x_2_0_1;
    QUICKDouble x_1_0_4 = Ptempx * VY_4 + WPtempx * VY_5;
    QUICKDouble x_4_0_4 = Ptempx * x_2_0_4 + WPtempx * x_2_0_5;
    QUICKDouble x_7_0_1 = Ptempx * x_1_0_1 + WPtempx * x_1_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_11_0_0 = Ptempx * x_4_0_0 + WPtempx * x_4_0_1 + ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_11_0_1 = Ptempx * x_4_0_1 + WPtempx * x_4_0_2 + ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_7_0_2 = Ptempx * x_1_0_2 + WPtempx * x_1_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_11_0_2 = Ptempx * x_4_0_2 + WPtempx * x_4_0_3 + ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_7_0_3 = Ptempx * x_1_0_3 + WPtempx * x_1_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_11_0_3 = Ptempx * x_4_0_3 + WPtempx * x_4_0_4 + ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_2_4_1 = Ptempy * x_0_4_1 + WPtempy * x_0_4_2 + ABCDtemp * x_0_1_2;
    QUICKDouble x_2_4_2 = Ptempy * x_0_4_2 + WPtempy * x_0_4_3 + ABCDtemp * x_0_1_3;
    QUICKDouble x_2_2_2 = Ptempy * x_0_2_2 + WPtempy * x_0_2_3 + ABCDtemp * VY_3;
    QUICKDouble x_11_2_0 = Qtempy * x_11_0_0 + WQtempy * x_11_0_1 + ABCDtemp * x_7_0_1;
    QUICKDouble x_11_2_1 = Qtempy * x_11_0_1 + WQtempy * x_11_0_2 + ABCDtemp * x_7_0_2;
    QUICKDouble x_4_2_1 = Qtempy * x_4_0_1 + WQtempy * x_4_0_2 + ABCDtemp * x_1_0_2;
    QUICKDouble x_4_2_2 = Qtempy * x_4_0_2 + WQtempy * x_4_0_3 + ABCDtemp * x_1_0_3;
    QUICKDouble x_11_2_2 = Qtempy * x_11_0_2 + WQtempy * x_11_0_3 + ABCDtemp * x_7_0_3;
    QUICKDouble x_4_4_1 = Ptempx * x_2_4_1 + WPtempx * x_2_4_2 + ABCDtemp * x_2_2_2;
    QUICKDouble x_11_4_0 = Qtempx * x_11_2_0 + WQtempx * x_11_2_1 + 2.000000 * ABCDtemp * x_4_2_1;
    QUICKDouble x_11_4_1 = Qtempx * x_11_2_1 + WQtempx * x_11_2_2 + 2.000000 * ABCDtemp * x_4_2_2;
    LOCSTORE(store, 11, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_4_0 + WQtempx * x_11_4_1 + CDtemp * (x_11_2_0 - ABcom * x_11_2_1) + 2.000000 * ABCDtemp * x_4_4_1;
    QUICKDouble x_1_5_1 = Ptempx * x_0_5_1 + WPtempx * x_0_5_2;
    QUICKDouble x_1_5_2 = Ptempx * x_0_5_2 + WPtempx * x_0_5_3;
    QUICKDouble x_11_3_0 = Qtempz * x_11_0_0 + WQtempz * x_11_0_1;
    QUICKDouble x_11_3_1 = Qtempz * x_11_0_1 + WQtempz * x_11_0_2;
    QUICKDouble x_7_3_1 = Qtempz * x_7_0_1 + WQtempz * x_7_0_2;
    QUICKDouble x_7_3_2 = Qtempz * x_7_0_2 + WQtempz * x_7_0_3;
    QUICKDouble x_11_3_2 = Qtempz * x_11_0_2 + WQtempz * x_11_0_3;
    QUICKDouble x_7_5_1 = Ptempx * x_1_5_1 + WPtempx * x_1_5_2 + ABtemp * (x_0_5_1 - CDcom * x_0_5_2);
    QUICKDouble x_11_5_0 = Qtempy * x_11_3_0 + WQtempy * x_11_3_1 + ABCDtemp * x_7_3_1;
    QUICKDouble x_11_5_1 = Qtempy * x_11_3_1 + WQtempy * x_11_3_2 + ABCDtemp * x_7_3_2;
    LOCSTORE(store, 11, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_11_5_0 + WQtempy * x_11_5_1 + CDtemp * (x_11_3_0 - ABcom * x_11_3_1) + ABCDtemp * x_7_5_1;
    QUICKDouble x_2_5_1 = Ptempy * x_0_5_1 + WPtempy * x_0_5_2 + ABCDtemp * x_0_3_2;
    QUICKDouble x_2_5_2 = Ptempy * x_0_5_2 + WPtempy * x_0_5_3 + ABCDtemp * x_0_3_3;
    QUICKDouble x_4_5_1 = Ptempx * x_2_5_1 + WPtempx * x_2_5_2;
    LOCSTORE(store, 11, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_5_0 + WQtempx * x_11_5_1 + 2.000000 * ABCDtemp * x_4_5_1;
    QUICKDouble x_2_6_1 = Ptempy * x_0_6_1 + WPtempy * x_0_6_2;
    QUICKDouble x_2_6_2 = Ptempy * x_0_6_2 + WPtempy * x_0_6_3;
    QUICKDouble x_2_3_2 = Ptempy * x_0_3_2 + WPtempy * x_0_3_3;
    QUICKDouble x_4_6_1 = Ptempx * x_2_6_1 + WPtempx * x_2_6_2 + ABCDtemp * x_2_3_2;
    QUICKDouble x_11_6_0 = Qtempx * x_11_3_0 + WQtempx * x_11_3_1 + 2.000000 * ABCDtemp * x_4_3_1;
    QUICKDouble x_11_6_1 = Qtempx * x_11_3_1 + WQtempx * x_11_3_2 + 2.000000 * ABCDtemp * x_4_3_2;
    LOCSTORE(store, 11, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_6_0 + WQtempx * x_11_6_1 + CDtemp * (x_11_3_0 - ABcom * x_11_3_1) + 2.000000 * ABCDtemp * x_4_6_1;
    QUICKDouble x_2_7_1 = Ptempy * x_0_7_1 + WPtempy * x_0_7_2;
    QUICKDouble x_2_7_2 = Ptempy * x_0_7_2 + WPtempy * x_0_7_3;
    QUICKDouble x_2_1_2 = Ptempy * x_0_1_2 + WPtempy * x_0_1_3;
    QUICKDouble x_11_1_0 = Qtempx * x_11_0_0 + WQtempx * x_11_0_1 + 2.000000 * ABCDtemp * x_4_0_1;
    QUICKDouble x_11_1_1 = Qtempx * x_11_0_1 + WQtempx * x_11_0_2 + 2.000000 * ABCDtemp * x_4_0_2;
    QUICKDouble x_4_1_1 = Qtempx * x_4_0_1 + WQtempx * x_4_0_2 + ABCDtemp * x_2_0_2;
    QUICKDouble x_4_1_2 = Qtempx * x_4_0_2 + WQtempx * x_4_0_3 + ABCDtemp * x_2_0_3;
    QUICKDouble x_11_1_2 = Qtempx * x_11_0_2 + WQtempx * x_11_0_3 + 2.000000 * ABCDtemp * x_4_0_3;
    QUICKDouble x_4_7_1 = Ptempx * x_2_7_1 + WPtempx * x_2_7_2 + 2.000000 * ABCDtemp * x_2_1_2;
    QUICKDouble x_11_7_0 = Qtempx * x_11_1_0 + WQtempx * x_11_1_1 + CDtemp * (x_11_0_0 - ABcom * x_11_0_1) + 2.000000 * ABCDtemp * x_4_1_1;
    QUICKDouble x_11_7_1 = Qtempx * x_11_1_1 + WQtempx * x_11_1_2 + CDtemp * (x_11_0_1 - ABcom * x_11_0_2) + 2.000000 * ABCDtemp * x_4_1_2;
    LOCSTORE(store, 11, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_7_0 + WQtempx * x_11_7_1 + 2.000000 * CDtemp * (x_11_1_0 - ABcom * x_11_1_1) + 2.000000 * ABCDtemp * x_4_7_1;
    QUICKDouble x_1_8_1 = Ptempx * x_0_8_1 + WPtempx * x_0_8_2;
    QUICKDouble x_1_8_2 = Ptempx * x_0_8_2 + WPtempx * x_0_8_3;
    QUICKDouble x_7_2_1 = Qtempy * x_7_0_1 + WQtempy * x_7_0_2;
    QUICKDouble x_7_2_2 = Qtempy * x_7_0_2 + WQtempy * x_7_0_3;
    QUICKDouble x_7_8_1 = Ptempx * x_1_8_1 + WPtempx * x_1_8_2 + ABtemp * (x_0_8_1 - CDcom * x_0_8_2);
    QUICKDouble x_11_8_0 = Qtempy * x_11_2_0 + WQtempy * x_11_2_1 + CDtemp * (x_11_0_0 - ABcom * x_11_0_1) + ABCDtemp * x_7_2_1;
    QUICKDouble x_11_8_1 = Qtempy * x_11_2_1 + WQtempy * x_11_2_2 + CDtemp * (x_11_0_1 - ABcom * x_11_0_2) + ABCDtemp * x_7_2_2;
    LOCSTORE(store, 11, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_11_8_0 + WQtempy * x_11_8_1 + 2.000000 * CDtemp * (x_11_2_0 - ABcom * x_11_2_1) + ABCDtemp * x_7_8_1;
    QUICKDouble x_2_8_1 = Ptempy * x_0_8_1 + WPtempy * x_0_8_2 + 2.000000 * ABCDtemp * x_0_2_2;
    QUICKDouble x_2_8_2 = Ptempy * x_0_8_2 + WPtempy * x_0_8_3 + 2.000000 * ABCDtemp * x_0_2_3;
    QUICKDouble x_4_8_1 = Ptempx * x_2_8_1 + WPtempx * x_2_8_2;
    LOCSTORE(store, 11, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_8_0 + WQtempx * x_11_8_1 + 2.000000 * ABCDtemp * x_4_8_1;
    QUICKDouble x_11_9_0 = Qtempz * x_11_3_0 + WQtempz * x_11_3_1 + CDtemp * (x_11_0_0 - ABcom * x_11_0_1);
    QUICKDouble x_11_9_1 = Qtempz * x_11_3_1 + WQtempz * x_11_3_2 + CDtemp * (x_11_0_1 - ABcom * x_11_0_2);
    LOCSTORE(store, 11, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_11_9_0 + WQtempz * x_11_9_1 + 2.000000 * CDtemp * (x_11_3_0 - ABcom * x_11_3_1);
    QUICKDouble x_1_9_1 = Ptempx * x_0_9_1 + WPtempx * x_0_9_2;
    QUICKDouble x_1_9_2 = Ptempx * x_0_9_2 + WPtempx * x_0_9_3;
    QUICKDouble x_7_9_1 = Ptempx * x_1_9_1 + WPtempx * x_1_9_2 + ABtemp * (x_0_9_1 - CDcom * x_0_9_2);
    LOCSTORE(store, 11, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_11_9_0 + WQtempy * x_11_9_1 + ABCDtemp * x_7_9_1;
    LOCSTORE(store, 11, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_11_9_0 + WQtempx * x_11_9_1 + 2.000000 * ABCDtemp * x_4_9_1;
    QUICKDouble x_8_0_1 = Ptempy * x_2_0_1 + WPtempy * x_2_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_8_0_0 = Ptempy * x_2_0_0 + WPtempy * x_2_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_8_0_2 = Ptempy * x_2_0_2 + WPtempy * x_2_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_8_0_3 = Ptempy * x_2_0_3 + WPtempy * x_2_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_8_0_4 = Ptempy * x_2_0_4 + WPtempy * x_2_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_12_0_0 = Ptempx * x_8_0_0 + WPtempx * x_8_0_1;
    QUICKDouble x_12_0_1 = Ptempx * x_8_0_1 + WPtempx * x_8_0_2;
    QUICKDouble x_12_0_2 = Ptempx * x_8_0_2 + WPtempx * x_8_0_3;
    QUICKDouble x_12_0_3 = Ptempx * x_8_0_3 + WPtempx * x_8_0_4;
    QUICKDouble x_12_2_0 = Qtempy * x_12_0_0 + WQtempy * x_12_0_1 + 2.000000 * ABCDtemp * x_4_0_1;
    QUICKDouble x_12_2_1 = Qtempy * x_12_0_1 + WQtempy * x_12_0_2 + 2.000000 * ABCDtemp * x_4_0_2;
    QUICKDouble x_8_2_1 = Qtempy * x_8_0_1 + WQtempy * x_8_0_2 + 2.000000 * ABCDtemp * x_2_0_2;
    QUICKDouble x_8_2_2 = Qtempy * x_8_0_2 + WQtempy * x_8_0_3 + 2.000000 * ABCDtemp * x_2_0_3;
    QUICKDouble x_12_2_2 = Qtempy * x_12_0_2 + WQtempy * x_12_0_3 + 2.000000 * ABCDtemp * x_4_0_3;
    QUICKDouble x_8_4_1 = Ptempy * x_2_4_1 + WPtempy * x_2_4_2 + ABtemp * (x_0_4_1 - CDcom * x_0_4_2) + ABCDtemp * x_2_1_2;
    QUICKDouble x_12_4_0 = Qtempx * x_12_2_0 + WQtempx * x_12_2_1 + ABCDtemp * x_8_2_1;
    QUICKDouble x_12_4_1 = Qtempx * x_12_2_1 + WQtempx * x_12_2_2 + ABCDtemp * x_8_2_2;
    LOCSTORE(store, 12, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_4_0 + WQtempx * x_12_4_1 + CDtemp * (x_12_2_0 - ABcom * x_12_2_1) + ABCDtemp * x_8_4_1;
    QUICKDouble x_12_3_0 = Qtempz * x_12_0_0 + WQtempz * x_12_0_1;
    QUICKDouble x_12_3_1 = Qtempz * x_12_0_1 + WQtempz * x_12_0_2;
    QUICKDouble x_12_3_2 = Qtempz * x_12_0_2 + WQtempz * x_12_0_3;
    QUICKDouble x_12_5_0 = Qtempy * x_12_3_0 + WQtempy * x_12_3_1 + 2.000000 * ABCDtemp * x_4_3_1;
    QUICKDouble x_12_5_1 = Qtempy * x_12_3_1 + WQtempy * x_12_3_2 + 2.000000 * ABCDtemp * x_4_3_2;
    LOCSTORE(store, 12, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_12_5_0 + WQtempy * x_12_5_1 + CDtemp * (x_12_3_0 - ABcom * x_12_3_1) + 2.000000 * ABCDtemp * x_4_5_1;
    QUICKDouble x_8_5_1 = Ptempy * x_2_5_1 + WPtempy * x_2_5_2 + ABtemp * (x_0_5_1 - CDcom * x_0_5_2) + ABCDtemp * x_2_3_2;
    LOCSTORE(store, 12, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_5_0 + WQtempx * x_12_5_1 + ABCDtemp * x_8_5_1;
    QUICKDouble x_8_3_1 = Qtempz * x_8_0_1 + WQtempz * x_8_0_2;
    QUICKDouble x_8_3_2 = Qtempz * x_8_0_2 + WQtempz * x_8_0_3;
    QUICKDouble x_8_6_1 = Ptempy * x_2_6_1 + WPtempy * x_2_6_2 + ABtemp * (x_0_6_1 - CDcom * x_0_6_2);
    QUICKDouble x_12_6_0 = Qtempx * x_12_3_0 + WQtempx * x_12_3_1 + ABCDtemp * x_8_3_1;
    QUICKDouble x_12_6_1 = Qtempx * x_12_3_1 + WQtempx * x_12_3_2 + ABCDtemp * x_8_3_2;
    LOCSTORE(store, 12, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_6_0 + WQtempx * x_12_6_1 + CDtemp * (x_12_3_0 - ABcom * x_12_3_1) + ABCDtemp * x_8_6_1;
    QUICKDouble x_12_1_0 = Qtempx * x_12_0_0 + WQtempx * x_12_0_1 + ABCDtemp * x_8_0_1;
    QUICKDouble x_12_1_1 = Qtempx * x_12_0_1 + WQtempx * x_12_0_2 + ABCDtemp * x_8_0_2;
    QUICKDouble x_8_1_1 = Qtempx * x_8_0_1 + WQtempx * x_8_0_2;
    QUICKDouble x_8_1_2 = Qtempx * x_8_0_2 + WQtempx * x_8_0_3;
    QUICKDouble x_12_1_2 = Qtempx * x_12_0_2 + WQtempx * x_12_0_3 + ABCDtemp * x_8_0_3;
    QUICKDouble x_8_7_1 = Ptempy * x_2_7_1 + WPtempy * x_2_7_2 + ABtemp * (x_0_7_1 - CDcom * x_0_7_2);
    QUICKDouble x_12_7_0 = Qtempx * x_12_1_0 + WQtempx * x_12_1_1 + CDtemp * (x_12_0_0 - ABcom * x_12_0_1) + ABCDtemp * x_8_1_1;
    QUICKDouble x_12_7_1 = Qtempx * x_12_1_1 + WQtempx * x_12_1_2 + CDtemp * (x_12_0_1 - ABcom * x_12_0_2) + ABCDtemp * x_8_1_2;
    LOCSTORE(store, 12, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_7_0 + WQtempx * x_12_7_1 + 2.000000 * CDtemp * (x_12_1_0 - ABcom * x_12_1_1) + ABCDtemp * x_8_7_1;
    QUICKDouble x_12_8_0 = Qtempy * x_12_2_0 + WQtempy * x_12_2_1 + CDtemp * (x_12_0_0 - ABcom * x_12_0_1) + 2.000000 * ABCDtemp * x_4_2_1;
    QUICKDouble x_12_8_1 = Qtempy * x_12_2_1 + WQtempy * x_12_2_2 + CDtemp * (x_12_0_1 - ABcom * x_12_0_2) + 2.000000 * ABCDtemp * x_4_2_2;
    LOCSTORE(store, 12, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_12_8_0 + WQtempy * x_12_8_1 + 2.000000 * CDtemp * (x_12_2_0 - ABcom * x_12_2_1) + 2.000000 * ABCDtemp * x_4_8_1;
    QUICKDouble x_8_8_1 = Ptempy * x_2_8_1 + WPtempy * x_2_8_2 + ABtemp * (x_0_8_1 - CDcom * x_0_8_2) + 2.000000 * ABCDtemp * x_2_2_2;
    LOCSTORE(store, 12, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_8_0 + WQtempx * x_12_8_1 + ABCDtemp * x_8_8_1;
    QUICKDouble x_12_9_0 = Qtempz * x_12_3_0 + WQtempz * x_12_3_1 + CDtemp * (x_12_0_0 - ABcom * x_12_0_1);
    QUICKDouble x_12_9_1 = Qtempz * x_12_3_1 + WQtempz * x_12_3_2 + CDtemp * (x_12_0_1 - ABcom * x_12_0_2);
    LOCSTORE(store, 12, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_12_9_0 + WQtempz * x_12_9_1 + 2.000000 * CDtemp * (x_12_3_0 - ABcom * x_12_3_1);
    LOCSTORE(store, 12, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_12_9_0 + WQtempy * x_12_9_1 + 2.000000 * ABCDtemp * x_4_9_1;
    QUICKDouble x_8_9_1 = Ptempy * x_2_9_1 + WPtempy * x_2_9_2 + ABtemp * (x_0_9_1 - CDcom * x_0_9_2);
    LOCSTORE(store, 12, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_12_9_0 + WQtempx * x_12_9_1 + ABCDtemp * x_8_9_1;
    QUICKDouble x_6_0_0 = Ptempx * x_3_0_0 + WPtempx * x_3_0_1;
    QUICKDouble x_6_0_4 = Ptempx * x_3_0_4 + WPtempx * x_3_0_5;
    QUICKDouble x_13_0_0 = Ptempx * x_6_0_0 + WPtempx * x_6_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_13_0_1 = Ptempx * x_6_0_1 + WPtempx * x_6_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_13_0_2 = Ptempx * x_6_0_2 + WPtempx * x_6_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_13_0_3 = Ptempx * x_6_0_3 + WPtempx * x_6_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_13_2_0 = Qtempy * x_13_0_0 + WQtempy * x_13_0_1;
    QUICKDouble x_13_2_1 = Qtempy * x_13_0_1 + WQtempy * x_13_0_2;
    QUICKDouble x_13_2_2 = Qtempy * x_13_0_2 + WQtempy * x_13_0_3;
    QUICKDouble x_6_4_1 = Ptempx * x_3_4_1 + WPtempx * x_3_4_2 + ABCDtemp * x_3_2_2;
    QUICKDouble x_13_4_0 = Qtempx * x_13_2_0 + WQtempx * x_13_2_1 + 2.000000 * ABCDtemp * x_6_2_1;
    QUICKDouble x_13_4_1 = Qtempx * x_13_2_1 + WQtempx * x_13_2_2 + 2.000000 * ABCDtemp * x_6_2_2;
    LOCSTORE(store, 13, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_4_0 + WQtempx * x_13_4_1 + CDtemp * (x_13_2_0 - ABcom * x_13_2_1) + 2.000000 * ABCDtemp * x_6_4_1;
    QUICKDouble x_13_3_0 = Qtempz * x_13_0_0 + WQtempz * x_13_0_1 + ABCDtemp * x_7_0_1;
    QUICKDouble x_13_3_1 = Qtempz * x_13_0_1 + WQtempz * x_13_0_2 + ABCDtemp * x_7_0_2;
    QUICKDouble x_13_3_2 = Qtempz * x_13_0_2 + WQtempz * x_13_0_3 + ABCDtemp * x_7_0_3;
    QUICKDouble x_13_5_0 = Qtempy * x_13_3_0 + WQtempy * x_13_3_1;
    QUICKDouble x_13_5_1 = Qtempy * x_13_3_1 + WQtempy * x_13_3_2;
    LOCSTORE(store, 13, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_13_5_0 + WQtempy * x_13_5_1 + CDtemp * (x_13_3_0 - ABcom * x_13_3_1);
    LOCSTORE(store, 13, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_5_0 + WQtempx * x_13_5_1 + 2.000000 * ABCDtemp * x_6_5_1;
    QUICKDouble x_6_6_1 = Ptempx * x_3_6_1 + WPtempx * x_3_6_2 + ABCDtemp * x_3_3_2;
    QUICKDouble x_13_6_0 = Qtempx * x_13_3_0 + WQtempx * x_13_3_1 + 2.000000 * ABCDtemp * x_6_3_1;
    QUICKDouble x_13_6_1 = Qtempx * x_13_3_1 + WQtempx * x_13_3_2 + 2.000000 * ABCDtemp * x_6_3_2;
    LOCSTORE(store, 13, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_6_0 + WQtempx * x_13_6_1 + CDtemp * (x_13_3_0 - ABcom * x_13_3_1) + 2.000000 * ABCDtemp * x_6_6_1;
    QUICKDouble x_13_1_0 = Qtempx * x_13_0_0 + WQtempx * x_13_0_1 + 2.000000 * ABCDtemp * x_6_0_1;
    QUICKDouble x_13_1_1 = Qtempx * x_13_0_1 + WQtempx * x_13_0_2 + 2.000000 * ABCDtemp * x_6_0_2;
    QUICKDouble x_6_1_1 = Qtempx * x_6_0_1 + WQtempx * x_6_0_2 + ABCDtemp * x_3_0_2;
    QUICKDouble x_6_1_2 = Qtempx * x_6_0_2 + WQtempx * x_6_0_3 + ABCDtemp * x_3_0_3;
    QUICKDouble x_13_1_2 = Qtempx * x_13_0_2 + WQtempx * x_13_0_3 + 2.000000 * ABCDtemp * x_6_0_3;
    QUICKDouble x_6_7_1 = Ptempx * x_3_7_1 + WPtempx * x_3_7_2 + 2.000000 * ABCDtemp * x_3_1_2;
    QUICKDouble x_13_7_0 = Qtempx * x_13_1_0 + WQtempx * x_13_1_1 + CDtemp * (x_13_0_0 - ABcom * x_13_0_1) + 2.000000 * ABCDtemp * x_6_1_1;
    QUICKDouble x_13_7_1 = Qtempx * x_13_1_1 + WQtempx * x_13_1_2 + CDtemp * (x_13_0_1 - ABcom * x_13_0_2) + 2.000000 * ABCDtemp * x_6_1_2;
    LOCSTORE(store, 13, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_7_0 + WQtempx * x_13_7_1 + 2.000000 * CDtemp * (x_13_1_0 - ABcom * x_13_1_1) + 2.000000 * ABCDtemp * x_6_7_1;
    QUICKDouble x_13_8_0 = Qtempy * x_13_2_0 + WQtempy * x_13_2_1 + CDtemp * (x_13_0_0 - ABcom * x_13_0_1);
    QUICKDouble x_13_8_1 = Qtempy * x_13_2_1 + WQtempy * x_13_2_2 + CDtemp * (x_13_0_1 - ABcom * x_13_0_2);
    LOCSTORE(store, 13, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_13_8_0 + WQtempy * x_13_8_1 + 2.000000 * CDtemp * (x_13_2_0 - ABcom * x_13_2_1);
    LOCSTORE(store, 13, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_8_0 + WQtempx * x_13_8_1 + 2.000000 * ABCDtemp * x_6_8_1;
    QUICKDouble x_13_9_0 = Qtempz * x_13_3_0 + WQtempz * x_13_3_1 + CDtemp * (x_13_0_0 - ABcom * x_13_0_1) + ABCDtemp * x_7_3_1;
    QUICKDouble x_13_9_1 = Qtempz * x_13_3_1 + WQtempz * x_13_3_2 + CDtemp * (x_13_0_1 - ABcom * x_13_0_2) + ABCDtemp * x_7_3_2;
    LOCSTORE(store, 13, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_13_9_0 + WQtempz * x_13_9_1 + 2.000000 * CDtemp * (x_13_3_0 - ABcom * x_13_3_1) + ABCDtemp * x_7_9_1;
    LOCSTORE(store, 13, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_13_9_0 + WQtempy * x_13_9_1;
    LOCSTORE(store, 13, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_13_9_0 + WQtempx * x_13_9_1 + 2.000000 * ABCDtemp * x_6_9_1;
    QUICKDouble x_9_0_1 = Ptempz * x_3_0_1 + WPtempz * x_3_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_9_0_0 = Ptempz * x_3_0_0 + WPtempz * x_3_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_9_0_2 = Ptempz * x_3_0_2 + WPtempz * x_3_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_9_0_3 = Ptempz * x_3_0_3 + WPtempz * x_3_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_9_0_4 = Ptempz * x_3_0_4 + WPtempz * x_3_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_14_0_0 = Ptempx * x_9_0_0 + WPtempx * x_9_0_1;
    QUICKDouble x_14_0_1 = Ptempx * x_9_0_1 + WPtempx * x_9_0_2;
    QUICKDouble x_14_0_2 = Ptempx * x_9_0_2 + WPtempx * x_9_0_3;
    QUICKDouble x_14_0_3 = Ptempx * x_9_0_3 + WPtempx * x_9_0_4;
    QUICKDouble x_14_2_0 = Qtempy * x_14_0_0 + WQtempy * x_14_0_1;
    QUICKDouble x_14_2_1 = Qtempy * x_14_0_1 + WQtempy * x_14_0_2;
    QUICKDouble x_9_2_1 = Qtempy * x_9_0_1 + WQtempy * x_9_0_2;
    QUICKDouble x_9_2_2 = Qtempy * x_9_0_2 + WQtempy * x_9_0_3;
    QUICKDouble x_14_2_2 = Qtempy * x_14_0_2 + WQtempy * x_14_0_3;
    QUICKDouble x_9_4_1 = Ptempz * x_3_4_1 + WPtempz * x_3_4_2 + ABtemp * (x_0_4_1 - CDcom * x_0_4_2);
    QUICKDouble x_14_4_0 = Qtempx * x_14_2_0 + WQtempx * x_14_2_1 + ABCDtemp * x_9_2_1;
    QUICKDouble x_14_4_1 = Qtempx * x_14_2_1 + WQtempx * x_14_2_2 + ABCDtemp * x_9_2_2;
    LOCSTORE(store, 14, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_4_0 + WQtempx * x_14_4_1 + CDtemp * (x_14_2_0 - ABcom * x_14_2_1) + ABCDtemp * x_9_4_1;
    QUICKDouble x_14_3_0 = Qtempz * x_14_0_0 + WQtempz * x_14_0_1 + 2.000000 * ABCDtemp * x_6_0_1;
    QUICKDouble x_14_3_1 = Qtempz * x_14_0_1 + WQtempz * x_14_0_2 + 2.000000 * ABCDtemp * x_6_0_2;
    QUICKDouble x_14_3_2 = Qtempz * x_14_0_2 + WQtempz * x_14_0_3 + 2.000000 * ABCDtemp * x_6_0_3;
    QUICKDouble x_14_5_0 = Qtempy * x_14_3_0 + WQtempy * x_14_3_1;
    QUICKDouble x_14_5_1 = Qtempy * x_14_3_1 + WQtempy * x_14_3_2;
    LOCSTORE(store, 14, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_14_5_0 + WQtempy * x_14_5_1 + CDtemp * (x_14_3_0 - ABcom * x_14_3_1);
    QUICKDouble x_9_5_1 = Ptempz * x_3_5_1 + WPtempz * x_3_5_2 + ABtemp * (x_0_5_1 - CDcom * x_0_5_2) + ABCDtemp * x_3_2_2;
    LOCSTORE(store, 14, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_5_0 + WQtempx * x_14_5_1 + ABCDtemp * x_9_5_1;
    QUICKDouble x_9_3_1 = Qtempz * x_9_0_1 + WQtempz * x_9_0_2 + 2.000000 * ABCDtemp * x_3_0_2;
    QUICKDouble x_9_3_2 = Qtempz * x_9_0_2 + WQtempz * x_9_0_3 + 2.000000 * ABCDtemp * x_3_0_3;
    QUICKDouble x_9_6_1 = Ptempz * x_3_6_1 + WPtempz * x_3_6_2 + ABtemp * (x_0_6_1 - CDcom * x_0_6_2) + ABCDtemp * x_3_1_2;
    QUICKDouble x_14_6_0 = Qtempx * x_14_3_0 + WQtempx * x_14_3_1 + ABCDtemp * x_9_3_1;
    QUICKDouble x_14_6_1 = Qtempx * x_14_3_1 + WQtempx * x_14_3_2 + ABCDtemp * x_9_3_2;
    LOCSTORE(store, 14, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_6_0 + WQtempx * x_14_6_1 + CDtemp * (x_14_3_0 - ABcom * x_14_3_1) + ABCDtemp * x_9_6_1;
    QUICKDouble x_14_1_0 = Qtempx * x_14_0_0 + WQtempx * x_14_0_1 + ABCDtemp * x_9_0_1;
    QUICKDouble x_14_1_1 = Qtempx * x_14_0_1 + WQtempx * x_14_0_2 + ABCDtemp * x_9_0_2;
    QUICKDouble x_9_1_1 = Qtempx * x_9_0_1 + WQtempx * x_9_0_2;
    QUICKDouble x_9_1_2 = Qtempx * x_9_0_2 + WQtempx * x_9_0_3;
    QUICKDouble x_14_1_2 = Qtempx * x_14_0_2 + WQtempx * x_14_0_3 + ABCDtemp * x_9_0_3;
    QUICKDouble x_9_7_1 = Ptempz * x_3_7_1 + WPtempz * x_3_7_2 + ABtemp * (x_0_7_1 - CDcom * x_0_7_2);
    QUICKDouble x_14_7_0 = Qtempx * x_14_1_0 + WQtempx * x_14_1_1 + CDtemp * (x_14_0_0 - ABcom * x_14_0_1) + ABCDtemp * x_9_1_1;
    QUICKDouble x_14_7_1 = Qtempx * x_14_1_1 + WQtempx * x_14_1_2 + CDtemp * (x_14_0_1 - ABcom * x_14_0_2) + ABCDtemp * x_9_1_2;
    LOCSTORE(store, 14, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_7_0 + WQtempx * x_14_7_1 + 2.000000 * CDtemp * (x_14_1_0 - ABcom * x_14_1_1) + ABCDtemp * x_9_7_1;
    QUICKDouble x_14_8_0 = Qtempy * x_14_2_0 + WQtempy * x_14_2_1 + CDtemp * (x_14_0_0 - ABcom * x_14_0_1);
    QUICKDouble x_14_8_1 = Qtempy * x_14_2_1 + WQtempy * x_14_2_2 + CDtemp * (x_14_0_1 - ABcom * x_14_0_2);
    LOCSTORE(store, 14, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_14_8_0 + WQtempy * x_14_8_1 + 2.000000 * CDtemp * (x_14_2_0 - ABcom * x_14_2_1);
    QUICKDouble x_9_8_1 = Ptempz * x_3_8_1 + WPtempz * x_3_8_2 + ABtemp * (x_0_8_1 - CDcom * x_0_8_2);
    LOCSTORE(store, 14, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_8_0 + WQtempx * x_14_8_1 + ABCDtemp * x_9_8_1;
    QUICKDouble x_14_9_0 = Qtempz * x_14_3_0 + WQtempz * x_14_3_1 + CDtemp * (x_14_0_0 - ABcom * x_14_0_1) + 2.000000 * ABCDtemp * x_6_3_1;
    QUICKDouble x_14_9_1 = Qtempz * x_14_3_1 + WQtempz * x_14_3_2 + CDtemp * (x_14_0_1 - ABcom * x_14_0_2) + 2.000000 * ABCDtemp * x_6_3_2;
    LOCSTORE(store, 14, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_14_9_0 + WQtempz * x_14_9_1 + 2.000000 * CDtemp * (x_14_3_0 - ABcom * x_14_3_1) + 2.000000 * ABCDtemp * x_6_9_1;
    LOCSTORE(store, 14, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_14_9_0 + WQtempy * x_14_9_1;
    QUICKDouble x_9_9_1 = Ptempz * x_3_9_1 + WPtempz * x_3_9_2 + ABtemp * (x_0_9_1 - CDcom * x_0_9_2) + 2.000000 * ABCDtemp * x_3_3_2;
    LOCSTORE(store, 14, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_14_9_0 + WQtempx * x_14_9_1 + ABCDtemp * x_9_9_1;
    QUICKDouble x_15_0_0 = Ptempy * x_5_0_0 + WPtempy * x_5_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_15_0_1 = Ptempy * x_5_0_1 + WPtempy * x_5_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_15_0_2 = Ptempy * x_5_0_2 + WPtempy * x_5_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_15_0_3 = Ptempy * x_5_0_3 + WPtempy * x_5_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_15_2_0 = Qtempy * x_15_0_0 + WQtempy * x_15_0_1 + 2.000000 * ABCDtemp * x_5_0_1;
    QUICKDouble x_15_2_1 = Qtempy * x_15_0_1 + WQtempy * x_15_0_2 + 2.000000 * ABCDtemp * x_5_0_2;
    QUICKDouble x_15_2_2 = Qtempy * x_15_0_2 + WQtempy * x_15_0_3 + 2.000000 * ABCDtemp * x_5_0_3;
    QUICKDouble x_15_4_0 = Qtempx * x_15_2_0 + WQtempx * x_15_2_1;
    QUICKDouble x_15_4_1 = Qtempx * x_15_2_1 + WQtempx * x_15_2_2;
    LOCSTORE(store, 15, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_4_0 + WQtempx * x_15_4_1 + CDtemp * (x_15_2_0 - ABcom * x_15_2_1);
    QUICKDouble x_15_3_0 = Qtempz * x_15_0_0 + WQtempz * x_15_0_1 + ABCDtemp * x_8_0_1;
    QUICKDouble x_15_3_1 = Qtempz * x_15_0_1 + WQtempz * x_15_0_2 + ABCDtemp * x_8_0_2;
    QUICKDouble x_15_3_2 = Qtempz * x_15_0_2 + WQtempz * x_15_0_3 + ABCDtemp * x_8_0_3;
    QUICKDouble x_15_5_0 = Qtempy * x_15_3_0 + WQtempy * x_15_3_1 + 2.000000 * ABCDtemp * x_5_3_1;
    QUICKDouble x_15_5_1 = Qtempy * x_15_3_1 + WQtempy * x_15_3_2 + 2.000000 * ABCDtemp * x_5_3_2;
    LOCSTORE(store, 15, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_15_5_0 + WQtempy * x_15_5_1 + CDtemp * (x_15_3_0 - ABcom * x_15_3_1) + 2.000000 * ABCDtemp * x_5_5_1;
    LOCSTORE(store, 15, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_5_0 + WQtempx * x_15_5_1;
    QUICKDouble x_15_6_0 = Qtempx * x_15_3_0 + WQtempx * x_15_3_1;
    QUICKDouble x_15_6_1 = Qtempx * x_15_3_1 + WQtempx * x_15_3_2;
    LOCSTORE(store, 15, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_6_0 + WQtempx * x_15_6_1 + CDtemp * (x_15_3_0 - ABcom * x_15_3_1);
    QUICKDouble x_15_1_0 = Qtempx * x_15_0_0 + WQtempx * x_15_0_1;
    QUICKDouble x_15_1_1 = Qtempx * x_15_0_1 + WQtempx * x_15_0_2;
    QUICKDouble x_15_1_2 = Qtempx * x_15_0_2 + WQtempx * x_15_0_3;
    QUICKDouble x_15_7_0 = Qtempx * x_15_1_0 + WQtempx * x_15_1_1 + CDtemp * (x_15_0_0 - ABcom * x_15_0_1);
    QUICKDouble x_15_7_1 = Qtempx * x_15_1_1 + WQtempx * x_15_1_2 + CDtemp * (x_15_0_1 - ABcom * x_15_0_2);
    LOCSTORE(store, 15, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_7_0 + WQtempx * x_15_7_1 + 2.000000 * CDtemp * (x_15_1_0 - ABcom * x_15_1_1);
    QUICKDouble x_15_8_0 = Qtempy * x_15_2_0 + WQtempy * x_15_2_1 + CDtemp * (x_15_0_0 - ABcom * x_15_0_1) + 2.000000 * ABCDtemp * x_5_2_1;
    QUICKDouble x_15_8_1 = Qtempy * x_15_2_1 + WQtempy * x_15_2_2 + CDtemp * (x_15_0_1 - ABcom * x_15_0_2) + 2.000000 * ABCDtemp * x_5_2_2;
    LOCSTORE(store, 15, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_15_8_0 + WQtempy * x_15_8_1 + 2.000000 * CDtemp * (x_15_2_0 - ABcom * x_15_2_1) + 2.000000 * ABCDtemp * x_5_8_1;
    LOCSTORE(store, 15, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_8_0 + WQtempx * x_15_8_1;
    QUICKDouble x_15_9_0 = Qtempz * x_15_3_0 + WQtempz * x_15_3_1 + CDtemp * (x_15_0_0 - ABcom * x_15_0_1) + ABCDtemp * x_8_3_1;
    QUICKDouble x_15_9_1 = Qtempz * x_15_3_1 + WQtempz * x_15_3_2 + CDtemp * (x_15_0_1 - ABcom * x_15_0_2) + ABCDtemp * x_8_3_2;
    LOCSTORE(store, 15, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_15_9_0 + WQtempz * x_15_9_1 + 2.000000 * CDtemp * (x_15_3_0 - ABcom * x_15_3_1) + ABCDtemp * x_8_9_1;
    LOCSTORE(store, 15, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_15_9_0 + WQtempy * x_15_9_1 + 2.000000 * ABCDtemp * x_5_9_1;
    LOCSTORE(store, 15, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_15_9_0 + WQtempx * x_15_9_1;
    QUICKDouble x_16_0_0 = Ptempy * x_9_0_0 + WPtempy * x_9_0_1;
    QUICKDouble x_16_0_1 = Ptempy * x_9_0_1 + WPtempy * x_9_0_2;
    QUICKDouble x_16_0_2 = Ptempy * x_9_0_2 + WPtempy * x_9_0_3;
    QUICKDouble x_16_0_3 = Ptempy * x_9_0_3 + WPtempy * x_9_0_4;
    QUICKDouble x_16_2_0 = Qtempy * x_16_0_0 + WQtempy * x_16_0_1 + ABCDtemp * x_9_0_1;
    QUICKDouble x_16_2_1 = Qtempy * x_16_0_1 + WQtempy * x_16_0_2 + ABCDtemp * x_9_0_2;
    QUICKDouble x_16_2_2 = Qtempy * x_16_0_2 + WQtempy * x_16_0_3 + ABCDtemp * x_9_0_3;
    QUICKDouble x_16_4_0 = Qtempx * x_16_2_0 + WQtempx * x_16_2_1;
    QUICKDouble x_16_4_1 = Qtempx * x_16_2_1 + WQtempx * x_16_2_2;
    LOCSTORE(store, 16, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_4_0 + WQtempx * x_16_4_1 + CDtemp * (x_16_2_0 - ABcom * x_16_2_1);
    QUICKDouble x_16_3_0 = Qtempz * x_16_0_0 + WQtempz * x_16_0_1 + 2.000000 * ABCDtemp * x_5_0_1;
    QUICKDouble x_16_3_1 = Qtempz * x_16_0_1 + WQtempz * x_16_0_2 + 2.000000 * ABCDtemp * x_5_0_2;
    QUICKDouble x_16_3_2 = Qtempz * x_16_0_2 + WQtempz * x_16_0_3 + 2.000000 * ABCDtemp * x_5_0_3;
    QUICKDouble x_16_5_0 = Qtempy * x_16_3_0 + WQtempy * x_16_3_1 + ABCDtemp * x_9_3_1;
    QUICKDouble x_16_5_1 = Qtempy * x_16_3_1 + WQtempy * x_16_3_2 + ABCDtemp * x_9_3_2;
    LOCSTORE(store, 16, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_16_5_0 + WQtempy * x_16_5_1 + CDtemp * (x_16_3_0 - ABcom * x_16_3_1) + ABCDtemp * x_9_5_1;
    LOCSTORE(store, 16, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_5_0 + WQtempx * x_16_5_1;
    QUICKDouble x_16_6_0 = Qtempx * x_16_3_0 + WQtempx * x_16_3_1;
    QUICKDouble x_16_6_1 = Qtempx * x_16_3_1 + WQtempx * x_16_3_2;
    LOCSTORE(store, 16, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_6_0 + WQtempx * x_16_6_1 + CDtemp * (x_16_3_0 - ABcom * x_16_3_1);
    QUICKDouble x_16_1_0 = Qtempx * x_16_0_0 + WQtempx * x_16_0_1;
    QUICKDouble x_16_1_1 = Qtempx * x_16_0_1 + WQtempx * x_16_0_2;
    QUICKDouble x_16_1_2 = Qtempx * x_16_0_2 + WQtempx * x_16_0_3;
    QUICKDouble x_16_7_0 = Qtempx * x_16_1_0 + WQtempx * x_16_1_1 + CDtemp * (x_16_0_0 - ABcom * x_16_0_1);
    QUICKDouble x_16_7_1 = Qtempx * x_16_1_1 + WQtempx * x_16_1_2 + CDtemp * (x_16_0_1 - ABcom * x_16_0_2);
    LOCSTORE(store, 16, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_7_0 + WQtempx * x_16_7_1 + 2.000000 * CDtemp * (x_16_1_0 - ABcom * x_16_1_1);
    QUICKDouble x_16_8_0 = Qtempy * x_16_2_0 + WQtempy * x_16_2_1 + CDtemp * (x_16_0_0 - ABcom * x_16_0_1) + ABCDtemp * x_9_2_1;
    QUICKDouble x_16_8_1 = Qtempy * x_16_2_1 + WQtempy * x_16_2_2 + CDtemp * (x_16_0_1 - ABcom * x_16_0_2) + ABCDtemp * x_9_2_2;
    LOCSTORE(store, 16, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_16_8_0 + WQtempy * x_16_8_1 + 2.000000 * CDtemp * (x_16_2_0 - ABcom * x_16_2_1) + ABCDtemp * x_9_8_1;
    LOCSTORE(store, 16, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_8_0 + WQtempx * x_16_8_1;
    QUICKDouble x_16_9_0 = Qtempz * x_16_3_0 + WQtempz * x_16_3_1 + CDtemp * (x_16_0_0 - ABcom * x_16_0_1) + 2.000000 * ABCDtemp * x_5_3_1;
    QUICKDouble x_16_9_1 = Qtempz * x_16_3_1 + WQtempz * x_16_3_2 + CDtemp * (x_16_0_1 - ABcom * x_16_0_2) + 2.000000 * ABCDtemp * x_5_3_2;
    LOCSTORE(store, 16, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_16_9_0 + WQtempz * x_16_9_1 + 2.000000 * CDtemp * (x_16_3_0 - ABcom * x_16_3_1) + 2.000000 * ABCDtemp * x_5_9_1;
    LOCSTORE(store, 16, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_16_9_0 + WQtempy * x_16_9_1 + ABCDtemp * x_9_9_1;
    LOCSTORE(store, 16, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_16_9_0 + WQtempx * x_16_9_1;
    QUICKDouble x_1_0_0 = Ptempx * VY_0 + WPtempx * VY_1;
    QUICKDouble x_1_0_5 = Ptempx * VY_5 + WPtempx * VY_6;
    QUICKDouble x_7_0_0 = Ptempx * x_1_0_0 + WPtempx * x_1_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_7_0_4 = Ptempx * x_1_0_4 + WPtempx * x_1_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_17_0_0 = Ptempx * x_7_0_0 + WPtempx * x_7_0_1 + 2.000000 * ABtemp * (x_1_0_0 - CDcom * x_1_0_1);
    QUICKDouble x_17_0_1 = Ptempx * x_7_0_1 + WPtempx * x_7_0_2 + 2.000000 * ABtemp * (x_1_0_1 - CDcom * x_1_0_2);
    QUICKDouble x_17_0_2 = Ptempx * x_7_0_2 + WPtempx * x_7_0_3 + 2.000000 * ABtemp * (x_1_0_2 - CDcom * x_1_0_3);
    QUICKDouble x_17_0_3 = Ptempx * x_7_0_3 + WPtempx * x_7_0_4 + 2.000000 * ABtemp * (x_1_0_3 - CDcom * x_1_0_4);
    QUICKDouble x_1_4_1 = Ptempx * x_0_4_1 + WPtempx * x_0_4_2 + ABCDtemp * x_0_2_2;
    QUICKDouble x_1_4_2 = Ptempx * x_0_4_2 + WPtempx * x_0_4_3 + ABCDtemp * x_0_2_3;
    QUICKDouble x_1_2_2 = Ptempx * x_0_2_2 + WPtempx * x_0_2_3;
    QUICKDouble x_17_2_0 = Qtempy * x_17_0_0 + WQtempy * x_17_0_1;
    QUICKDouble x_17_2_1 = Qtempy * x_17_0_1 + WQtempy * x_17_0_2;
    QUICKDouble x_17_2_2 = Qtempy * x_17_0_2 + WQtempy * x_17_0_3;
    QUICKDouble x_7_4_1 = Ptempx * x_1_4_1 + WPtempx * x_1_4_2 + ABtemp * (x_0_4_1 - CDcom * x_0_4_2) + ABCDtemp * x_1_2_2;
    QUICKDouble x_17_4_0 = Qtempx * x_17_2_0 + WQtempx * x_17_2_1 + 3.000000 * ABCDtemp * x_7_2_1;
    QUICKDouble x_17_4_1 = Qtempx * x_17_2_1 + WQtempx * x_17_2_2 + 3.000000 * ABCDtemp * x_7_2_2;
    LOCSTORE(store, 17, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_4_0 + WQtempx * x_17_4_1 + CDtemp * (x_17_2_0 - ABcom * x_17_2_1) + 3.000000 * ABCDtemp * x_7_4_1;
    QUICKDouble x_17_3_0 = Qtempz * x_17_0_0 + WQtempz * x_17_0_1;
    QUICKDouble x_17_3_1 = Qtempz * x_17_0_1 + WQtempz * x_17_0_2;
    QUICKDouble x_17_3_2 = Qtempz * x_17_0_2 + WQtempz * x_17_0_3;
    QUICKDouble x_17_5_0 = Qtempy * x_17_3_0 + WQtempy * x_17_3_1;
    QUICKDouble x_17_5_1 = Qtempy * x_17_3_1 + WQtempy * x_17_3_2;
    LOCSTORE(store, 17, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_17_5_0 + WQtempy * x_17_5_1 + CDtemp * (x_17_3_0 - ABcom * x_17_3_1);
    LOCSTORE(store, 17, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_5_0 + WQtempx * x_17_5_1 + 3.000000 * ABCDtemp * x_7_5_1;
    QUICKDouble x_1_6_1 = Ptempx * x_0_6_1 + WPtempx * x_0_6_2 + ABCDtemp * x_0_3_2;
    QUICKDouble x_1_6_2 = Ptempx * x_0_6_2 + WPtempx * x_0_6_3 + ABCDtemp * x_0_3_3;
    QUICKDouble x_1_3_2 = Ptempx * x_0_3_2 + WPtempx * x_0_3_3;
    QUICKDouble x_7_6_1 = Ptempx * x_1_6_1 + WPtempx * x_1_6_2 + ABtemp * (x_0_6_1 - CDcom * x_0_6_2) + ABCDtemp * x_1_3_2;
    QUICKDouble x_17_6_0 = Qtempx * x_17_3_0 + WQtempx * x_17_3_1 + 3.000000 * ABCDtemp * x_7_3_1;
    QUICKDouble x_17_6_1 = Qtempx * x_17_3_1 + WQtempx * x_17_3_2 + 3.000000 * ABCDtemp * x_7_3_2;
    LOCSTORE(store, 17, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_6_0 + WQtempx * x_17_6_1 + CDtemp * (x_17_3_0 - ABcom * x_17_3_1) + 3.000000 * ABCDtemp * x_7_6_1;
    QUICKDouble x_1_7_1 = Ptempx * x_0_7_1 + WPtempx * x_0_7_2 + 2.000000 * ABCDtemp * x_0_1_2;
    QUICKDouble x_1_7_2 = Ptempx * x_0_7_2 + WPtempx * x_0_7_3 + 2.000000 * ABCDtemp * x_0_1_3;
    QUICKDouble x_1_1_2 = Ptempx * x_0_1_2 + WPtempx * x_0_1_3 + ABCDtemp * VY_3;
    QUICKDouble x_17_1_0 = Qtempx * x_17_0_0 + WQtempx * x_17_0_1 + 3.000000 * ABCDtemp * x_7_0_1;
    QUICKDouble x_17_1_1 = Qtempx * x_17_0_1 + WQtempx * x_17_0_2 + 3.000000 * ABCDtemp * x_7_0_2;
    QUICKDouble x_7_1_1 = Qtempx * x_7_0_1 + WQtempx * x_7_0_2 + 2.000000 * ABCDtemp * x_1_0_2;
    QUICKDouble x_7_1_2 = Qtempx * x_7_0_2 + WQtempx * x_7_0_3 + 2.000000 * ABCDtemp * x_1_0_3;
    QUICKDouble x_17_1_2 = Qtempx * x_17_0_2 + WQtempx * x_17_0_3 + 3.000000 * ABCDtemp * x_7_0_3;
    QUICKDouble x_7_7_1 = Ptempx * x_1_7_1 + WPtempx * x_1_7_2 + ABtemp * (x_0_7_1 - CDcom * x_0_7_2) + 2.000000 * ABCDtemp * x_1_1_2;
    QUICKDouble x_17_7_0 = Qtempx * x_17_1_0 + WQtempx * x_17_1_1 + CDtemp * (x_17_0_0 - ABcom * x_17_0_1) + 3.000000 * ABCDtemp * x_7_1_1;
    QUICKDouble x_17_7_1 = Qtempx * x_17_1_1 + WQtempx * x_17_1_2 + CDtemp * (x_17_0_1 - ABcom * x_17_0_2) + 3.000000 * ABCDtemp * x_7_1_2;
    LOCSTORE(store, 17, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_7_0 + WQtempx * x_17_7_1 + 2.000000 * CDtemp * (x_17_1_0 - ABcom * x_17_1_1) + 3.000000 * ABCDtemp * x_7_7_1;
    QUICKDouble x_17_8_0 = Qtempy * x_17_2_0 + WQtempy * x_17_2_1 + CDtemp * (x_17_0_0 - ABcom * x_17_0_1);
    QUICKDouble x_17_8_1 = Qtempy * x_17_2_1 + WQtempy * x_17_2_2 + CDtemp * (x_17_0_1 - ABcom * x_17_0_2);
    LOCSTORE(store, 17, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_17_8_0 + WQtempy * x_17_8_1 + 2.000000 * CDtemp * (x_17_2_0 - ABcom * x_17_2_1);
    LOCSTORE(store, 17, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_8_0 + WQtempx * x_17_8_1 + 3.000000 * ABCDtemp * x_7_8_1;
    QUICKDouble x_17_9_0 = Qtempz * x_17_3_0 + WQtempz * x_17_3_1 + CDtemp * (x_17_0_0 - ABcom * x_17_0_1);
    QUICKDouble x_17_9_1 = Qtempz * x_17_3_1 + WQtempz * x_17_3_2 + CDtemp * (x_17_0_1 - ABcom * x_17_0_2);
    LOCSTORE(store, 17, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_17_9_0 + WQtempz * x_17_9_1 + 2.000000 * CDtemp * (x_17_3_0 - ABcom * x_17_3_1);
    LOCSTORE(store, 17, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_17_9_0 + WQtempy * x_17_9_1;
    LOCSTORE(store, 17, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_17_9_0 + WQtempx * x_17_9_1 + 3.000000 * ABCDtemp * x_7_9_1;
    QUICKDouble x_18_0_0 = Ptempy * x_8_0_0 + WPtempy * x_8_0_1 + 2.000000 * ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_18_0_1 = Ptempy * x_8_0_1 + WPtempy * x_8_0_2 + 2.000000 * ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_18_0_2 = Ptempy * x_8_0_2 + WPtempy * x_8_0_3 + 2.000000 * ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_18_0_3 = Ptempy * x_8_0_3 + WPtempy * x_8_0_4 + 2.000000 * ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_18_2_0 = Qtempy * x_18_0_0 + WQtempy * x_18_0_1 + 3.000000 * ABCDtemp * x_8_0_1;
    QUICKDouble x_18_2_1 = Qtempy * x_18_0_1 + WQtempy * x_18_0_2 + 3.000000 * ABCDtemp * x_8_0_2;
    QUICKDouble x_18_2_2 = Qtempy * x_18_0_2 + WQtempy * x_18_0_3 + 3.000000 * ABCDtemp * x_8_0_3;
    QUICKDouble x_18_4_0 = Qtempx * x_18_2_0 + WQtempx * x_18_2_1;
    QUICKDouble x_18_4_1 = Qtempx * x_18_2_1 + WQtempx * x_18_2_2;
    LOCSTORE(store, 18, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_4_0 + WQtempx * x_18_4_1 + CDtemp * (x_18_2_0 - ABcom * x_18_2_1);
    QUICKDouble x_18_3_0 = Qtempz * x_18_0_0 + WQtempz * x_18_0_1;
    QUICKDouble x_18_3_1 = Qtempz * x_18_0_1 + WQtempz * x_18_0_2;
    QUICKDouble x_18_3_2 = Qtempz * x_18_0_2 + WQtempz * x_18_0_3;
    QUICKDouble x_18_5_0 = Qtempy * x_18_3_0 + WQtempy * x_18_3_1 + 3.000000 * ABCDtemp * x_8_3_1;
    QUICKDouble x_18_5_1 = Qtempy * x_18_3_1 + WQtempy * x_18_3_2 + 3.000000 * ABCDtemp * x_8_3_2;
    LOCSTORE(store, 18, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_18_5_0 + WQtempy * x_18_5_1 + CDtemp * (x_18_3_0 - ABcom * x_18_3_1) + 3.000000 * ABCDtemp * x_8_5_1;
    LOCSTORE(store, 18, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_5_0 + WQtempx * x_18_5_1;
    QUICKDouble x_18_6_0 = Qtempx * x_18_3_0 + WQtempx * x_18_3_1;
    QUICKDouble x_18_6_1 = Qtempx * x_18_3_1 + WQtempx * x_18_3_2;
    LOCSTORE(store, 18, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_6_0 + WQtempx * x_18_6_1 + CDtemp * (x_18_3_0 - ABcom * x_18_3_1);
    QUICKDouble x_18_1_0 = Qtempx * x_18_0_0 + WQtempx * x_18_0_1;
    QUICKDouble x_18_1_1 = Qtempx * x_18_0_1 + WQtempx * x_18_0_2;
    QUICKDouble x_18_1_2 = Qtempx * x_18_0_2 + WQtempx * x_18_0_3;
    QUICKDouble x_18_7_0 = Qtempx * x_18_1_0 + WQtempx * x_18_1_1 + CDtemp * (x_18_0_0 - ABcom * x_18_0_1);
    QUICKDouble x_18_7_1 = Qtempx * x_18_1_1 + WQtempx * x_18_1_2 + CDtemp * (x_18_0_1 - ABcom * x_18_0_2);
    LOCSTORE(store, 18, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_7_0 + WQtempx * x_18_7_1 + 2.000000 * CDtemp * (x_18_1_0 - ABcom * x_18_1_1);
    QUICKDouble x_18_8_0 = Qtempy * x_18_2_0 + WQtempy * x_18_2_1 + CDtemp * (x_18_0_0 - ABcom * x_18_0_1) + 3.000000 * ABCDtemp * x_8_2_1;
    QUICKDouble x_18_8_1 = Qtempy * x_18_2_1 + WQtempy * x_18_2_2 + CDtemp * (x_18_0_1 - ABcom * x_18_0_2) + 3.000000 * ABCDtemp * x_8_2_2;
    LOCSTORE(store, 18, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_18_8_0 + WQtempy * x_18_8_1 + 2.000000 * CDtemp * (x_18_2_0 - ABcom * x_18_2_1) + 3.000000 * ABCDtemp * x_8_8_1;
    LOCSTORE(store, 18, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_8_0 + WQtempx * x_18_8_1;
    QUICKDouble x_18_9_0 = Qtempz * x_18_3_0 + WQtempz * x_18_3_1 + CDtemp * (x_18_0_0 - ABcom * x_18_0_1);
    QUICKDouble x_18_9_1 = Qtempz * x_18_3_1 + WQtempz * x_18_3_2 + CDtemp * (x_18_0_1 - ABcom * x_18_0_2);
    LOCSTORE(store, 18, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_18_9_0 + WQtempz * x_18_9_1 + 2.000000 * CDtemp * (x_18_3_0 - ABcom * x_18_3_1);
    LOCSTORE(store, 18, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_18_9_0 + WQtempy * x_18_9_1 + 3.000000 * ABCDtemp * x_8_9_1;
    LOCSTORE(store, 18, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_18_9_0 + WQtempx * x_18_9_1;
    QUICKDouble x_19_0_0 = Ptempz * x_9_0_0 + WPtempz * x_9_0_1 + 2.000000 * ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_19_0_1 = Ptempz * x_9_0_1 + WPtempz * x_9_0_2 + 2.000000 * ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_19_0_2 = Ptempz * x_9_0_2 + WPtempz * x_9_0_3 + 2.000000 * ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_19_0_3 = Ptempz * x_9_0_3 + WPtempz * x_9_0_4 + 2.000000 * ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_19_2_0 = Qtempy * x_19_0_0 + WQtempy * x_19_0_1;
    QUICKDouble x_19_2_1 = Qtempy * x_19_0_1 + WQtempy * x_19_0_2;
    QUICKDouble x_19_2_2 = Qtempy * x_19_0_2 + WQtempy * x_19_0_3;
    QUICKDouble x_19_4_0 = Qtempx * x_19_2_0 + WQtempx * x_19_2_1;
    QUICKDouble x_19_4_1 = Qtempx * x_19_2_1 + WQtempx * x_19_2_2;
    LOCSTORE(store, 19, 11, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_4_0 + WQtempx * x_19_4_1 + CDtemp * (x_19_2_0 - ABcom * x_19_2_1);
    QUICKDouble x_19_3_0 = Qtempz * x_19_0_0 + WQtempz * x_19_0_1 + 3.000000 * ABCDtemp * x_9_0_1;
    QUICKDouble x_19_3_1 = Qtempz * x_19_0_1 + WQtempz * x_19_0_2 + 3.000000 * ABCDtemp * x_9_0_2;
    QUICKDouble x_19_3_2 = Qtempz * x_19_0_2 + WQtempz * x_19_0_3 + 3.000000 * ABCDtemp * x_9_0_3;
    QUICKDouble x_19_5_0 = Qtempy * x_19_3_0 + WQtempy * x_19_3_1;
    QUICKDouble x_19_5_1 = Qtempy * x_19_3_1 + WQtempy * x_19_3_2;
    LOCSTORE(store, 19, 15, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_19_5_0 + WQtempy * x_19_5_1 + CDtemp * (x_19_3_0 - ABcom * x_19_3_1);
    LOCSTORE(store, 19, 10, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_5_0 + WQtempx * x_19_5_1;
    QUICKDouble x_19_6_0 = Qtempx * x_19_3_0 + WQtempx * x_19_3_1;
    QUICKDouble x_19_6_1 = Qtempx * x_19_3_1 + WQtempx * x_19_3_2;
    LOCSTORE(store, 19, 13, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_6_0 + WQtempx * x_19_6_1 + CDtemp * (x_19_3_0 - ABcom * x_19_3_1);
    QUICKDouble x_19_1_0 = Qtempx * x_19_0_0 + WQtempx * x_19_0_1;
    QUICKDouble x_19_1_1 = Qtempx * x_19_0_1 + WQtempx * x_19_0_2;
    QUICKDouble x_19_1_2 = Qtempx * x_19_0_2 + WQtempx * x_19_0_3;
    QUICKDouble x_19_7_0 = Qtempx * x_19_1_0 + WQtempx * x_19_1_1 + CDtemp * (x_19_0_0 - ABcom * x_19_0_1);
    QUICKDouble x_19_7_1 = Qtempx * x_19_1_1 + WQtempx * x_19_1_2 + CDtemp * (x_19_0_1 - ABcom * x_19_0_2);
    LOCSTORE(store, 19, 17, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_7_0 + WQtempx * x_19_7_1 + 2.000000 * CDtemp * (x_19_1_0 - ABcom * x_19_1_1);
    QUICKDouble x_19_8_0 = Qtempy * x_19_2_0 + WQtempy * x_19_2_1 + CDtemp * (x_19_0_0 - ABcom * x_19_0_1);
    QUICKDouble x_19_8_1 = Qtempy * x_19_2_1 + WQtempy * x_19_2_2 + CDtemp * (x_19_0_1 - ABcom * x_19_0_2);
    LOCSTORE(store, 19, 18, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_19_8_0 + WQtempy * x_19_8_1 + 2.000000 * CDtemp * (x_19_2_0 - ABcom * x_19_2_1);
    LOCSTORE(store, 19, 12, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_8_0 + WQtempx * x_19_8_1;
    QUICKDouble x_19_9_0 = Qtempz * x_19_3_0 + WQtempz * x_19_3_1 + CDtemp * (x_19_0_0 - ABcom * x_19_0_1) + 3.000000 * ABCDtemp * x_9_3_1;
    QUICKDouble x_19_9_1 = Qtempz * x_19_3_1 + WQtempz * x_19_3_2 + CDtemp * (x_19_0_1 - ABcom * x_19_0_2) + 3.000000 * ABCDtemp * x_9_3_2;
    LOCSTORE(store, 19, 19, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_19_9_0 + WQtempz * x_19_9_1 + 2.000000 * CDtemp * (x_19_3_0 - ABcom * x_19_3_1) + 3.000000 * ABCDtemp * x_9_9_1;
    LOCSTORE(store, 19, 16, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_19_9_0 + WQtempy * x_19_9_1;
    LOCSTORE(store, 19, 14, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_19_9_0 + WQtempx * x_19_9_1;
    // [FS|FS] integral - End 

}

