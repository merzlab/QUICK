/*
 !---------------------------------------------------------------------!
 ! Written by QUICK-GenInt code generator on 03/25/2023                !
 !                                                                     !
 ! Copyright (C) 2023-2024 Merz lab                                    !
 ! Copyright (C) 2023-2024 GÃ¶tz lab                                    !
 !                                                                     !
 ! This Source Code Form is subject to the terms of the Mozilla Public !
 ! License, v. 2.0. If a copy of the MPL was not distributed with this !
 ! file, You can obtain one at http://mozilla.org/MPL/2.0/.            !
 !_____________________________________________________________________!
*/

{

    // [GS|DS] integral - Start
    QUICKDouble VY_2 = VY(0, 0, 2);
    QUICKDouble VY_3 = VY(0, 0, 3);
    QUICKDouble x_2_0_2 = Ptempy * VY_2 + WPtempy * VY_3;
    QUICKDouble VY_4 = VY(0, 0, 4);
    QUICKDouble x_2_0_3 = Ptempy * VY_3 + WPtempy * VY_4;
    QUICKDouble VY_1 = VY(0, 0, 1);
    QUICKDouble x_2_0_1 = Ptempy * VY_1 + WPtempy * VY_2;
    QUICKDouble VY_0 = VY(0, 0, 0);
    QUICKDouble x_2_0_0 = Ptempy * VY_0 + WPtempy * VY_1;
    QUICKDouble VY_5 = VY(0, 0, 5);
    QUICKDouble x_2_0_4 = Ptempy * VY_4 + WPtempy * VY_5;
    QUICKDouble VY_6 = VY(0, 0, 6);
    QUICKDouble x_2_0_5 = Ptempy * VY_5 + WPtempy * VY_6;
    QUICKDouble x_8_0_2 = Ptempy * x_2_0_2 + WPtempy * x_2_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_8_0_1 = Ptempy * x_2_0_1 + WPtempy * x_2_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_8_0_0 = Ptempy * x_2_0_0 + WPtempy * x_2_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_8_0_3 = Ptempy * x_2_0_3 + WPtempy * x_2_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_8_0_4 = Ptempy * x_2_0_4 + WPtempy * x_2_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_12_0_1 = Ptempx * x_8_0_1 + WPtempx * x_8_0_2;
    QUICKDouble x_12_0_0 = Ptempx * x_8_0_0 + WPtempx * x_8_0_1;
    QUICKDouble x_12_0_2 = Ptempx * x_8_0_2 + WPtempx * x_8_0_3;
    QUICKDouble x_12_0_3 = Ptempx * x_8_0_3 + WPtempx * x_8_0_4;
    QUICKDouble x_20_0_0 = Ptempx * x_12_0_0 + WPtempx * x_12_0_1 + ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_20_0_1 = Ptempx * x_12_0_1 + WPtempx * x_12_0_2 + ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_20_0_2 = Ptempx * x_12_0_2 + WPtempx * x_12_0_3 + ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_12_1_1 = Qtempx * x_12_0_1 + WQtempx * x_12_0_2 + ABCDtemp * x_8_0_2;
    QUICKDouble x_20_1_0 = Qtempx * x_20_0_0 + WQtempx * x_20_0_1 + 2.000000 * ABCDtemp * x_12_0_1;
    QUICKDouble x_20_1_1 = Qtempx * x_20_0_1 + WQtempx * x_20_0_2 + 2.000000 * ABCDtemp * x_12_0_2;
    LOCSTORE(store, 20, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_20_1_0 + WQtempx * x_20_1_1 + CDtemp * (x_20_0_0 - ABcom * x_20_0_1) + 2.000000 * ABCDtemp * x_12_1_1;
    QUICKDouble x_1_0_2 = Ptempx * VY_2 + WPtempx * VY_3;
    QUICKDouble x_1_0_3 = Ptempx * VY_3 + WPtempx * VY_4;
    QUICKDouble x_4_0_2 = Ptempx * x_2_0_2 + WPtempx * x_2_0_3;
    QUICKDouble x_4_0_1 = Ptempx * x_2_0_1 + WPtempx * x_2_0_2;
    QUICKDouble x_4_0_3 = Ptempx * x_2_0_3 + WPtempx * x_2_0_4;
    QUICKDouble x_7_0_2 = Ptempx * x_1_0_2 + WPtempx * x_1_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_11_0_1 = Ptempx * x_4_0_1 + WPtempx * x_4_0_2 + ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_11_0_2 = Ptempx * x_4_0_2 + WPtempx * x_4_0_3 + ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_11_2_1 = Qtempy * x_11_0_1 + WQtempy * x_11_0_2 + ABCDtemp * x_7_0_2;
    QUICKDouble x_20_2_0 = Qtempy * x_20_0_0 + WQtempy * x_20_0_1 + 2.000000 * ABCDtemp * x_11_0_1;
    QUICKDouble x_20_2_1 = Qtempy * x_20_0_1 + WQtempy * x_20_0_2 + 2.000000 * ABCDtemp * x_11_0_2;
    LOCSTORE(store, 20, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_20_2_0 + WQtempy * x_20_2_1 + CDtemp * (x_20_0_0 - ABcom * x_20_0_1) + 2.000000 * ABCDtemp * x_11_2_1;
    QUICKDouble x_12_2_1 = Qtempy * x_12_0_1 + WQtempy * x_12_0_2 + 2.000000 * ABCDtemp * x_4_0_2;
    LOCSTORE(store, 20, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_20_2_0 + WQtempx * x_20_2_1 + 2.000000 * ABCDtemp * x_12_2_1;
    QUICKDouble x_20_3_0 = Qtempz * x_20_0_0 + WQtempz * x_20_0_1;
    QUICKDouble x_20_3_1 = Qtempz * x_20_0_1 + WQtempz * x_20_0_2;
    LOCSTORE(store, 20, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_20_3_0 + WQtempz * x_20_3_1 + CDtemp * (x_20_0_0 - ABcom * x_20_0_1);
    QUICKDouble x_12_3_1 = Qtempz * x_12_0_1 + WQtempz * x_12_0_2;
    LOCSTORE(store, 20, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_20_3_0 + WQtempx * x_20_3_1 + 2.000000 * ABCDtemp * x_12_3_1;
    QUICKDouble x_11_3_1 = Qtempz * x_11_0_1 + WQtempz * x_11_0_2;
    LOCSTORE(store, 20, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_20_3_0 + WQtempy * x_20_3_1 + 2.000000 * ABCDtemp * x_11_3_1;
    QUICKDouble x_3_0_2 = Ptempz * VY_2 + WPtempz * VY_3;
    QUICKDouble x_3_0_3 = Ptempz * VY_3 + WPtempz * VY_4;
    QUICKDouble x_3_0_1 = Ptempz * VY_1 + WPtempz * VY_2;
    QUICKDouble x_3_0_0 = Ptempz * VY_0 + WPtempz * VY_1;
    QUICKDouble x_3_0_4 = Ptempz * VY_4 + WPtempz * VY_5;
    QUICKDouble x_3_0_5 = Ptempz * VY_5 + WPtempz * VY_6;
    QUICKDouble x_9_0_2 = Ptempz * x_3_0_2 + WPtempz * x_3_0_3 + ABtemp * (VY_2 - CDcom * VY_3);
    QUICKDouble x_9_0_1 = Ptempz * x_3_0_1 + WPtempz * x_3_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_9_0_0 = Ptempz * x_3_0_0 + WPtempz * x_3_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_9_0_3 = Ptempz * x_3_0_3 + WPtempz * x_3_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_9_0_4 = Ptempz * x_3_0_4 + WPtempz * x_3_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_14_0_1 = Ptempx * x_9_0_1 + WPtempx * x_9_0_2;
    QUICKDouble x_14_0_0 = Ptempx * x_9_0_0 + WPtempx * x_9_0_1;
    QUICKDouble x_14_0_2 = Ptempx * x_9_0_2 + WPtempx * x_9_0_3;
    QUICKDouble x_14_0_3 = Ptempx * x_9_0_3 + WPtempx * x_9_0_4;
    QUICKDouble x_21_0_0 = Ptempx * x_14_0_0 + WPtempx * x_14_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_21_0_1 = Ptempx * x_14_0_1 + WPtempx * x_14_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_21_0_2 = Ptempx * x_14_0_2 + WPtempx * x_14_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_14_1_1 = Qtempx * x_14_0_1 + WQtempx * x_14_0_2 + ABCDtemp * x_9_0_2;
    QUICKDouble x_21_1_0 = Qtempx * x_21_0_0 + WQtempx * x_21_0_1 + 2.000000 * ABCDtemp * x_14_0_1;
    QUICKDouble x_21_1_1 = Qtempx * x_21_0_1 + WQtempx * x_21_0_2 + 2.000000 * ABCDtemp * x_14_0_2;
    LOCSTORE(store, 21, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_21_1_0 + WQtempx * x_21_1_1 + CDtemp * (x_21_0_0 - ABcom * x_21_0_1) + 2.000000 * ABCDtemp * x_14_1_1;
    QUICKDouble x_21_2_0 = Qtempy * x_21_0_0 + WQtempy * x_21_0_1;
    QUICKDouble x_21_2_1 = Qtempy * x_21_0_1 + WQtempy * x_21_0_2;
    LOCSTORE(store, 21, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_21_2_0 + WQtempy * x_21_2_1 + CDtemp * (x_21_0_0 - ABcom * x_21_0_1);
    QUICKDouble x_14_2_1 = Qtempy * x_14_0_1 + WQtempy * x_14_0_2;
    LOCSTORE(store, 21, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_21_2_0 + WQtempx * x_21_2_1 + 2.000000 * ABCDtemp * x_14_2_1;
    QUICKDouble x_6_0_2 = Ptempx * x_3_0_2 + WPtempx * x_3_0_3;
    QUICKDouble x_6_0_1 = Ptempx * x_3_0_1 + WPtempx * x_3_0_2;
    QUICKDouble x_6_0_3 = Ptempx * x_3_0_3 + WPtempx * x_3_0_4;
    QUICKDouble x_13_0_1 = Ptempx * x_6_0_1 + WPtempx * x_6_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_13_0_2 = Ptempx * x_6_0_2 + WPtempx * x_6_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_13_3_1 = Qtempz * x_13_0_1 + WQtempz * x_13_0_2 + ABCDtemp * x_7_0_2;
    QUICKDouble x_21_3_0 = Qtempz * x_21_0_0 + WQtempz * x_21_0_1 + 2.000000 * ABCDtemp * x_13_0_1;
    QUICKDouble x_21_3_1 = Qtempz * x_21_0_1 + WQtempz * x_21_0_2 + 2.000000 * ABCDtemp * x_13_0_2;
    LOCSTORE(store, 21, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_21_3_0 + WQtempz * x_21_3_1 + CDtemp * (x_21_0_0 - ABcom * x_21_0_1) + 2.000000 * ABCDtemp * x_13_3_1;
    QUICKDouble x_14_3_1 = Qtempz * x_14_0_1 + WQtempz * x_14_0_2 + 2.000000 * ABCDtemp * x_6_0_2;
    LOCSTORE(store, 21, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_21_3_0 + WQtempx * x_21_3_1 + 2.000000 * ABCDtemp * x_14_3_1;
    LOCSTORE(store, 21, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_21_3_0 + WQtempy * x_21_3_1;
    QUICKDouble x_16_0_1 = Ptempy * x_9_0_1 + WPtempy * x_9_0_2;
    QUICKDouble x_16_0_0 = Ptempy * x_9_0_0 + WPtempy * x_9_0_1;
    QUICKDouble x_16_0_2 = Ptempy * x_9_0_2 + WPtempy * x_9_0_3;
    QUICKDouble x_16_0_3 = Ptempy * x_9_0_3 + WPtempy * x_9_0_4;
    QUICKDouble x_22_0_0 = Ptempy * x_16_0_0 + WPtempy * x_16_0_1 + ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_22_0_1 = Ptempy * x_16_0_1 + WPtempy * x_16_0_2 + ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_22_0_2 = Ptempy * x_16_0_2 + WPtempy * x_16_0_3 + ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_22_1_0 = Qtempx * x_22_0_0 + WQtempx * x_22_0_1;
    QUICKDouble x_22_1_1 = Qtempx * x_22_0_1 + WQtempx * x_22_0_2;
    LOCSTORE(store, 22, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_22_1_0 + WQtempx * x_22_1_1 + CDtemp * (x_22_0_0 - ABcom * x_22_0_1);
    QUICKDouble x_16_2_1 = Qtempy * x_16_0_1 + WQtempy * x_16_0_2 + ABCDtemp * x_9_0_2;
    QUICKDouble x_22_2_0 = Qtempy * x_22_0_0 + WQtempy * x_22_0_1 + 2.000000 * ABCDtemp * x_16_0_1;
    QUICKDouble x_22_2_1 = Qtempy * x_22_0_1 + WQtempy * x_22_0_2 + 2.000000 * ABCDtemp * x_16_0_2;
    LOCSTORE(store, 22, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_22_2_0 + WQtempy * x_22_2_1 + CDtemp * (x_22_0_0 - ABcom * x_22_0_1) + 2.000000 * ABCDtemp * x_16_2_1;
    LOCSTORE(store, 22, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_22_2_0 + WQtempx * x_22_2_1;
    QUICKDouble x_5_0_2 = Ptempy * x_3_0_2 + WPtempy * x_3_0_3;
    QUICKDouble x_5_0_1 = Ptempy * x_3_0_1 + WPtempy * x_3_0_2;
    QUICKDouble x_5_0_3 = Ptempy * x_3_0_3 + WPtempy * x_3_0_4;
    QUICKDouble x_15_0_1 = Ptempy * x_5_0_1 + WPtempy * x_5_0_2 + ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_15_0_2 = Ptempy * x_5_0_2 + WPtempy * x_5_0_3 + ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_15_3_1 = Qtempz * x_15_0_1 + WQtempz * x_15_0_2 + ABCDtemp * x_8_0_2;
    QUICKDouble x_22_3_0 = Qtempz * x_22_0_0 + WQtempz * x_22_0_1 + 2.000000 * ABCDtemp * x_15_0_1;
    QUICKDouble x_22_3_1 = Qtempz * x_22_0_1 + WQtempz * x_22_0_2 + 2.000000 * ABCDtemp * x_15_0_2;
    LOCSTORE(store, 22, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_22_3_0 + WQtempz * x_22_3_1 + CDtemp * (x_22_0_0 - ABcom * x_22_0_1) + 2.000000 * ABCDtemp * x_15_3_1;
    LOCSTORE(store, 22, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_22_3_0 + WQtempx * x_22_3_1;
    QUICKDouble x_16_3_1 = Qtempz * x_16_0_1 + WQtempz * x_16_0_2 + 2.000000 * ABCDtemp * x_5_0_2;
    LOCSTORE(store, 22, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_22_3_0 + WQtempy * x_22_3_1 + 2.000000 * ABCDtemp * x_16_3_1;
    QUICKDouble x_5_0_0 = Ptempy * x_3_0_0 + WPtempy * x_3_0_1;
    QUICKDouble x_5_0_4 = Ptempy * x_3_0_4 + WPtempy * x_3_0_5;
    QUICKDouble x_10_0_1 = Ptempx * x_5_0_1 + WPtempx * x_5_0_2;
    QUICKDouble x_10_0_0 = Ptempx * x_5_0_0 + WPtempx * x_5_0_1;
    QUICKDouble x_10_0_2 = Ptempx * x_5_0_2 + WPtempx * x_5_0_3;
    QUICKDouble x_10_0_3 = Ptempx * x_5_0_3 + WPtempx * x_5_0_4;
    QUICKDouble x_23_0_0 = Ptempx * x_10_0_0 + WPtempx * x_10_0_1 + ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_23_0_1 = Ptempx * x_10_0_1 + WPtempx * x_10_0_2 + ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_23_0_2 = Ptempx * x_10_0_2 + WPtempx * x_10_0_3 + ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_10_1_1 = Qtempx * x_10_0_1 + WQtempx * x_10_0_2 + ABCDtemp * x_5_0_2;
    QUICKDouble x_23_1_0 = Qtempx * x_23_0_0 + WQtempx * x_23_0_1 + 2.000000 * ABCDtemp * x_10_0_1;
    QUICKDouble x_23_1_1 = Qtempx * x_23_0_1 + WQtempx * x_23_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    LOCSTORE(store, 23, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_23_1_0 + WQtempx * x_23_1_1 + CDtemp * (x_23_0_0 - ABcom * x_23_0_1) + 2.000000 * ABCDtemp * x_10_1_1;
    QUICKDouble x_13_2_1 = Qtempy * x_13_0_1 + WQtempy * x_13_0_2;
    QUICKDouble x_23_2_0 = Qtempy * x_23_0_0 + WQtempy * x_23_0_1 + ABCDtemp * x_13_0_1;
    QUICKDouble x_23_2_1 = Qtempy * x_23_0_1 + WQtempy * x_23_0_2 + ABCDtemp * x_13_0_2;
    LOCSTORE(store, 23, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_23_2_0 + WQtempy * x_23_2_1 + CDtemp * (x_23_0_0 - ABcom * x_23_0_1) + ABCDtemp * x_13_2_1;
    QUICKDouble x_10_2_1 = Qtempy * x_10_0_1 + WQtempy * x_10_0_2 + ABCDtemp * x_6_0_2;
    LOCSTORE(store, 23, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_23_2_0 + WQtempx * x_23_2_1 + 2.000000 * ABCDtemp * x_10_2_1;
    QUICKDouble x_23_3_0 = Qtempz * x_23_0_0 + WQtempz * x_23_0_1 + ABCDtemp * x_11_0_1;
    QUICKDouble x_23_3_1 = Qtempz * x_23_0_1 + WQtempz * x_23_0_2 + ABCDtemp * x_11_0_2;
    LOCSTORE(store, 23, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_23_3_0 + WQtempz * x_23_3_1 + CDtemp * (x_23_0_0 - ABcom * x_23_0_1) + ABCDtemp * x_11_3_1;
    QUICKDouble x_10_3_1 = Qtempz * x_10_0_1 + WQtempz * x_10_0_2 + ABCDtemp * x_4_0_2;
    LOCSTORE(store, 23, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_23_3_0 + WQtempx * x_23_3_1 + 2.000000 * ABCDtemp * x_10_3_1;
    LOCSTORE(store, 23, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_23_3_0 + WQtempy * x_23_3_1 + ABCDtemp * x_13_3_1;
    QUICKDouble x_15_0_0 = Ptempy * x_5_0_0 + WPtempy * x_5_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_15_0_3 = Ptempy * x_5_0_3 + WPtempy * x_5_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_24_0_0 = Ptempx * x_15_0_0 + WPtempx * x_15_0_1;
    QUICKDouble x_24_0_1 = Ptempx * x_15_0_1 + WPtempx * x_15_0_2;
    QUICKDouble x_24_0_2 = Ptempx * x_15_0_2 + WPtempx * x_15_0_3;
    QUICKDouble x_15_1_1 = Qtempx * x_15_0_1 + WQtempx * x_15_0_2;
    QUICKDouble x_24_1_0 = Qtempx * x_24_0_0 + WQtempx * x_24_0_1 + ABCDtemp * x_15_0_1;
    QUICKDouble x_24_1_1 = Qtempx * x_24_0_1 + WQtempx * x_24_0_2 + ABCDtemp * x_15_0_2;
    LOCSTORE(store, 24, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_24_1_0 + WQtempx * x_24_1_1 + CDtemp * (x_24_0_0 - ABcom * x_24_0_1) + ABCDtemp * x_15_1_1;
    QUICKDouble x_24_2_0 = Qtempy * x_24_0_0 + WQtempy * x_24_0_1 + 2.000000 * ABCDtemp * x_10_0_1;
    QUICKDouble x_24_2_1 = Qtempy * x_24_0_1 + WQtempy * x_24_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    LOCSTORE(store, 24, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_24_2_0 + WQtempy * x_24_2_1 + CDtemp * (x_24_0_0 - ABcom * x_24_0_1) + 2.000000 * ABCDtemp * x_10_2_1;
    QUICKDouble x_15_2_1 = Qtempy * x_15_0_1 + WQtempy * x_15_0_2 + 2.000000 * ABCDtemp * x_5_0_2;
    LOCSTORE(store, 24, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_24_2_0 + WQtempx * x_24_2_1 + ABCDtemp * x_15_2_1;
    QUICKDouble x_24_3_0 = Qtempz * x_24_0_0 + WQtempz * x_24_0_1 + ABCDtemp * x_12_0_1;
    QUICKDouble x_24_3_1 = Qtempz * x_24_0_1 + WQtempz * x_24_0_2 + ABCDtemp * x_12_0_2;
    LOCSTORE(store, 24, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_24_3_0 + WQtempz * x_24_3_1 + CDtemp * (x_24_0_0 - ABcom * x_24_0_1) + ABCDtemp * x_12_3_1;
    LOCSTORE(store, 24, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_24_3_0 + WQtempx * x_24_3_1 + ABCDtemp * x_15_3_1;
    LOCSTORE(store, 24, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_24_3_0 + WQtempy * x_24_3_1 + 2.000000 * ABCDtemp * x_10_3_1;
    QUICKDouble x_25_0_0 = Ptempx * x_16_0_0 + WPtempx * x_16_0_1;
    QUICKDouble x_25_0_1 = Ptempx * x_16_0_1 + WPtempx * x_16_0_2;
    QUICKDouble x_25_0_2 = Ptempx * x_16_0_2 + WPtempx * x_16_0_3;
    QUICKDouble x_16_1_1 = Qtempx * x_16_0_1 + WQtempx * x_16_0_2;
    QUICKDouble x_25_1_0 = Qtempx * x_25_0_0 + WQtempx * x_25_0_1 + ABCDtemp * x_16_0_1;
    QUICKDouble x_25_1_1 = Qtempx * x_25_0_1 + WQtempx * x_25_0_2 + ABCDtemp * x_16_0_2;
    LOCSTORE(store, 25, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_25_1_0 + WQtempx * x_25_1_1 + CDtemp * (x_25_0_0 - ABcom * x_25_0_1) + ABCDtemp * x_16_1_1;
    QUICKDouble x_25_2_0 = Qtempy * x_25_0_0 + WQtempy * x_25_0_1 + ABCDtemp * x_14_0_1;
    QUICKDouble x_25_2_1 = Qtempy * x_25_0_1 + WQtempy * x_25_0_2 + ABCDtemp * x_14_0_2;
    LOCSTORE(store, 25, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_25_2_0 + WQtempy * x_25_2_1 + CDtemp * (x_25_0_0 - ABcom * x_25_0_1) + ABCDtemp * x_14_2_1;
    LOCSTORE(store, 25, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_25_2_0 + WQtempx * x_25_2_1 + ABCDtemp * x_16_2_1;
    QUICKDouble x_25_3_0 = Qtempz * x_25_0_0 + WQtempz * x_25_0_1 + 2.000000 * ABCDtemp * x_10_0_1;
    QUICKDouble x_25_3_1 = Qtempz * x_25_0_1 + WQtempz * x_25_0_2 + 2.000000 * ABCDtemp * x_10_0_2;
    LOCSTORE(store, 25, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_25_3_0 + WQtempz * x_25_3_1 + CDtemp * (x_25_0_0 - ABcom * x_25_0_1) + 2.000000 * ABCDtemp * x_10_3_1;
    LOCSTORE(store, 25, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_25_3_0 + WQtempx * x_25_3_1 + ABCDtemp * x_16_3_1;
    LOCSTORE(store, 25, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_25_3_0 + WQtempy * x_25_3_1 + ABCDtemp * x_14_3_1;
    QUICKDouble x_6_0_0 = Ptempx * x_3_0_0 + WPtempx * x_3_0_1;
    QUICKDouble x_6_0_4 = Ptempx * x_3_0_4 + WPtempx * x_3_0_5;
    QUICKDouble x_13_0_0 = Ptempx * x_6_0_0 + WPtempx * x_6_0_1 + ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_13_0_3 = Ptempx * x_6_0_3 + WPtempx * x_6_0_4 + ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_26_0_0 = Ptempx * x_13_0_0 + WPtempx * x_13_0_1 + 2.000000 * ABtemp * (x_6_0_0 - CDcom * x_6_0_1);
    QUICKDouble x_26_0_1 = Ptempx * x_13_0_1 + WPtempx * x_13_0_2 + 2.000000 * ABtemp * (x_6_0_1 - CDcom * x_6_0_2);
    QUICKDouble x_26_0_2 = Ptempx * x_13_0_2 + WPtempx * x_13_0_3 + 2.000000 * ABtemp * (x_6_0_2 - CDcom * x_6_0_3);
    QUICKDouble x_13_1_1 = Qtempx * x_13_0_1 + WQtempx * x_13_0_2 + 2.000000 * ABCDtemp * x_6_0_2;
    QUICKDouble x_26_1_0 = Qtempx * x_26_0_0 + WQtempx * x_26_0_1 + 3.000000 * ABCDtemp * x_13_0_1;
    QUICKDouble x_26_1_1 = Qtempx * x_26_0_1 + WQtempx * x_26_0_2 + 3.000000 * ABCDtemp * x_13_0_2;
    LOCSTORE(store, 26, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_26_1_0 + WQtempx * x_26_1_1 + CDtemp * (x_26_0_0 - ABcom * x_26_0_1) + 3.000000 * ABCDtemp * x_13_1_1;
    QUICKDouble x_26_2_0 = Qtempy * x_26_0_0 + WQtempy * x_26_0_1;
    QUICKDouble x_26_2_1 = Qtempy * x_26_0_1 + WQtempy * x_26_0_2;
    LOCSTORE(store, 26, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_26_2_0 + WQtempy * x_26_2_1 + CDtemp * (x_26_0_0 - ABcom * x_26_0_1);
    LOCSTORE(store, 26, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_26_2_0 + WQtempx * x_26_2_1 + 3.000000 * ABCDtemp * x_13_2_1;
    QUICKDouble x_1_0_1 = Ptempx * VY_1 + WPtempx * VY_2;
    QUICKDouble x_1_0_4 = Ptempx * VY_4 + WPtempx * VY_5;
    QUICKDouble x_7_0_1 = Ptempx * x_1_0_1 + WPtempx * x_1_0_2 + ABtemp * (VY_1 - CDcom * VY_2);
    QUICKDouble x_7_0_3 = Ptempx * x_1_0_3 + WPtempx * x_1_0_4 + ABtemp * (VY_3 - CDcom * VY_4);
    QUICKDouble x_17_0_1 = Ptempx * x_7_0_1 + WPtempx * x_7_0_2 + 2.000000 * ABtemp * (x_1_0_1 - CDcom * x_1_0_2);
    QUICKDouble x_17_0_2 = Ptempx * x_7_0_2 + WPtempx * x_7_0_3 + 2.000000 * ABtemp * (x_1_0_2 - CDcom * x_1_0_3);
    QUICKDouble x_17_3_1 = Qtempz * x_17_0_1 + WQtempz * x_17_0_2;
    QUICKDouble x_26_3_0 = Qtempz * x_26_0_0 + WQtempz * x_26_0_1 + ABCDtemp * x_17_0_1;
    QUICKDouble x_26_3_1 = Qtempz * x_26_0_1 + WQtempz * x_26_0_2 + ABCDtemp * x_17_0_2;
    LOCSTORE(store, 26, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_26_3_0 + WQtempz * x_26_3_1 + CDtemp * (x_26_0_0 - ABcom * x_26_0_1) + ABCDtemp * x_17_3_1;
    LOCSTORE(store, 26, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_26_3_0 + WQtempx * x_26_3_1 + 3.000000 * ABCDtemp * x_13_3_1;
    LOCSTORE(store, 26, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_26_3_0 + WQtempy * x_26_3_1;
    QUICKDouble x_19_0_1 = Ptempz * x_9_0_1 + WPtempz * x_9_0_2 + 2.000000 * ABtemp * (x_3_0_1 - CDcom * x_3_0_2);
    QUICKDouble x_19_0_0 = Ptempz * x_9_0_0 + WPtempz * x_9_0_1 + 2.000000 * ABtemp * (x_3_0_0 - CDcom * x_3_0_1);
    QUICKDouble x_19_0_2 = Ptempz * x_9_0_2 + WPtempz * x_9_0_3 + 2.000000 * ABtemp * (x_3_0_2 - CDcom * x_3_0_3);
    QUICKDouble x_19_0_3 = Ptempz * x_9_0_3 + WPtempz * x_9_0_4 + 2.000000 * ABtemp * (x_3_0_3 - CDcom * x_3_0_4);
    QUICKDouble x_27_0_0 = Ptempx * x_19_0_0 + WPtempx * x_19_0_1;
    QUICKDouble x_27_0_1 = Ptempx * x_19_0_1 + WPtempx * x_19_0_2;
    QUICKDouble x_27_0_2 = Ptempx * x_19_0_2 + WPtempx * x_19_0_3;
    QUICKDouble x_19_1_1 = Qtempx * x_19_0_1 + WQtempx * x_19_0_2;
    QUICKDouble x_27_1_0 = Qtempx * x_27_0_0 + WQtempx * x_27_0_1 + ABCDtemp * x_19_0_1;
    QUICKDouble x_27_1_1 = Qtempx * x_27_0_1 + WQtempx * x_27_0_2 + ABCDtemp * x_19_0_2;
    LOCSTORE(store, 27, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_27_1_0 + WQtempx * x_27_1_1 + CDtemp * (x_27_0_0 - ABcom * x_27_0_1) + ABCDtemp * x_19_1_1;
    QUICKDouble x_27_2_0 = Qtempy * x_27_0_0 + WQtempy * x_27_0_1;
    QUICKDouble x_27_2_1 = Qtempy * x_27_0_1 + WQtempy * x_27_0_2;
    LOCSTORE(store, 27, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_27_2_0 + WQtempy * x_27_2_1 + CDtemp * (x_27_0_0 - ABcom * x_27_0_1);
    QUICKDouble x_19_2_1 = Qtempy * x_19_0_1 + WQtempy * x_19_0_2;
    LOCSTORE(store, 27, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_27_2_0 + WQtempx * x_27_2_1 + ABCDtemp * x_19_2_1;
    QUICKDouble x_27_3_0 = Qtempz * x_27_0_0 + WQtempz * x_27_0_1 + 3.000000 * ABCDtemp * x_14_0_1;
    QUICKDouble x_27_3_1 = Qtempz * x_27_0_1 + WQtempz * x_27_0_2 + 3.000000 * ABCDtemp * x_14_0_2;
    LOCSTORE(store, 27, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_27_3_0 + WQtempz * x_27_3_1 + CDtemp * (x_27_0_0 - ABcom * x_27_0_1) + 3.000000 * ABCDtemp * x_14_3_1;
    QUICKDouble x_19_3_1 = Qtempz * x_19_0_1 + WQtempz * x_19_0_2 + 3.000000 * ABCDtemp * x_9_0_2;
    LOCSTORE(store, 27, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_27_3_0 + WQtempx * x_27_3_1 + ABCDtemp * x_19_3_1;
    LOCSTORE(store, 27, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_27_3_0 + WQtempy * x_27_3_1;
    QUICKDouble x_4_0_0 = Ptempx * x_2_0_0 + WPtempx * x_2_0_1;
    QUICKDouble x_4_0_4 = Ptempx * x_2_0_4 + WPtempx * x_2_0_5;
    QUICKDouble x_11_0_0 = Ptempx * x_4_0_0 + WPtempx * x_4_0_1 + ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_11_0_3 = Ptempx * x_4_0_3 + WPtempx * x_4_0_4 + ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_28_0_0 = Ptempx * x_11_0_0 + WPtempx * x_11_0_1 + 2.000000 * ABtemp * (x_4_0_0 - CDcom * x_4_0_1);
    QUICKDouble x_28_0_1 = Ptempx * x_11_0_1 + WPtempx * x_11_0_2 + 2.000000 * ABtemp * (x_4_0_1 - CDcom * x_4_0_2);
    QUICKDouble x_28_0_2 = Ptempx * x_11_0_2 + WPtempx * x_11_0_3 + 2.000000 * ABtemp * (x_4_0_2 - CDcom * x_4_0_3);
    QUICKDouble x_11_1_1 = Qtempx * x_11_0_1 + WQtempx * x_11_0_2 + 2.000000 * ABCDtemp * x_4_0_2;
    QUICKDouble x_28_1_0 = Qtempx * x_28_0_0 + WQtempx * x_28_0_1 + 3.000000 * ABCDtemp * x_11_0_1;
    QUICKDouble x_28_1_1 = Qtempx * x_28_0_1 + WQtempx * x_28_0_2 + 3.000000 * ABCDtemp * x_11_0_2;
    LOCSTORE(store, 28, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_28_1_0 + WQtempx * x_28_1_1 + CDtemp * (x_28_0_0 - ABcom * x_28_0_1) + 3.000000 * ABCDtemp * x_11_1_1;
    QUICKDouble x_17_2_1 = Qtempy * x_17_0_1 + WQtempy * x_17_0_2;
    QUICKDouble x_28_2_0 = Qtempy * x_28_0_0 + WQtempy * x_28_0_1 + ABCDtemp * x_17_0_1;
    QUICKDouble x_28_2_1 = Qtempy * x_28_0_1 + WQtempy * x_28_0_2 + ABCDtemp * x_17_0_2;
    LOCSTORE(store, 28, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_28_2_0 + WQtempy * x_28_2_1 + CDtemp * (x_28_0_0 - ABcom * x_28_0_1) + ABCDtemp * x_17_2_1;
    LOCSTORE(store, 28, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_28_2_0 + WQtempx * x_28_2_1 + 3.000000 * ABCDtemp * x_11_2_1;
    QUICKDouble x_28_3_0 = Qtempz * x_28_0_0 + WQtempz * x_28_0_1;
    QUICKDouble x_28_3_1 = Qtempz * x_28_0_1 + WQtempz * x_28_0_2;
    LOCSTORE(store, 28, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_28_3_0 + WQtempz * x_28_3_1 + CDtemp * (x_28_0_0 - ABcom * x_28_0_1);
    LOCSTORE(store, 28, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_28_3_0 + WQtempx * x_28_3_1 + 3.000000 * ABCDtemp * x_11_3_1;
    LOCSTORE(store, 28, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_28_3_0 + WQtempy * x_28_3_1 + ABCDtemp * x_17_3_1;
    QUICKDouble x_18_0_1 = Ptempy * x_8_0_1 + WPtempy * x_8_0_2 + 2.000000 * ABtemp * (x_2_0_1 - CDcom * x_2_0_2);
    QUICKDouble x_18_0_0 = Ptempy * x_8_0_0 + WPtempy * x_8_0_1 + 2.000000 * ABtemp * (x_2_0_0 - CDcom * x_2_0_1);
    QUICKDouble x_18_0_2 = Ptempy * x_8_0_2 + WPtempy * x_8_0_3 + 2.000000 * ABtemp * (x_2_0_2 - CDcom * x_2_0_3);
    QUICKDouble x_18_0_3 = Ptempy * x_8_0_3 + WPtempy * x_8_0_4 + 2.000000 * ABtemp * (x_2_0_3 - CDcom * x_2_0_4);
    QUICKDouble x_29_0_0 = Ptempx * x_18_0_0 + WPtempx * x_18_0_1;
    QUICKDouble x_29_0_1 = Ptempx * x_18_0_1 + WPtempx * x_18_0_2;
    QUICKDouble x_29_0_2 = Ptempx * x_18_0_2 + WPtempx * x_18_0_3;
    QUICKDouble x_18_1_1 = Qtempx * x_18_0_1 + WQtempx * x_18_0_2;
    QUICKDouble x_29_1_0 = Qtempx * x_29_0_0 + WQtempx * x_29_0_1 + ABCDtemp * x_18_0_1;
    QUICKDouble x_29_1_1 = Qtempx * x_29_0_1 + WQtempx * x_29_0_2 + ABCDtemp * x_18_0_2;
    LOCSTORE(store, 29, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_29_1_0 + WQtempx * x_29_1_1 + CDtemp * (x_29_0_0 - ABcom * x_29_0_1) + ABCDtemp * x_18_1_1;
    QUICKDouble x_29_2_0 = Qtempy * x_29_0_0 + WQtempy * x_29_0_1 + 3.000000 * ABCDtemp * x_12_0_1;
    QUICKDouble x_29_2_1 = Qtempy * x_29_0_1 + WQtempy * x_29_0_2 + 3.000000 * ABCDtemp * x_12_0_2;
    LOCSTORE(store, 29, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_29_2_0 + WQtempy * x_29_2_1 + CDtemp * (x_29_0_0 - ABcom * x_29_0_1) + 3.000000 * ABCDtemp * x_12_2_1;
    QUICKDouble x_18_2_1 = Qtempy * x_18_0_1 + WQtempy * x_18_0_2 + 3.000000 * ABCDtemp * x_8_0_2;
    LOCSTORE(store, 29, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_29_2_0 + WQtempx * x_29_2_1 + ABCDtemp * x_18_2_1;
    QUICKDouble x_29_3_0 = Qtempz * x_29_0_0 + WQtempz * x_29_0_1;
    QUICKDouble x_29_3_1 = Qtempz * x_29_0_1 + WQtempz * x_29_0_2;
    LOCSTORE(store, 29, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_29_3_0 + WQtempz * x_29_3_1 + CDtemp * (x_29_0_0 - ABcom * x_29_0_1);
    QUICKDouble x_18_3_1 = Qtempz * x_18_0_1 + WQtempz * x_18_0_2;
    LOCSTORE(store, 29, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_29_3_0 + WQtempx * x_29_3_1 + ABCDtemp * x_18_3_1;
    LOCSTORE(store, 29, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_29_3_0 + WQtempy * x_29_3_1 + 3.000000 * ABCDtemp * x_12_3_1;
    QUICKDouble x_30_0_0 = Ptempy * x_15_0_0 + WPtempy * x_15_0_1 + 2.000000 * ABtemp * (x_5_0_0 - CDcom * x_5_0_1);
    QUICKDouble x_30_0_1 = Ptempy * x_15_0_1 + WPtempy * x_15_0_2 + 2.000000 * ABtemp * (x_5_0_1 - CDcom * x_5_0_2);
    QUICKDouble x_30_0_2 = Ptempy * x_15_0_2 + WPtempy * x_15_0_3 + 2.000000 * ABtemp * (x_5_0_2 - CDcom * x_5_0_3);
    QUICKDouble x_30_1_0 = Qtempx * x_30_0_0 + WQtempx * x_30_0_1;
    QUICKDouble x_30_1_1 = Qtempx * x_30_0_1 + WQtempx * x_30_0_2;
    LOCSTORE(store, 30, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_30_1_0 + WQtempx * x_30_1_1 + CDtemp * (x_30_0_0 - ABcom * x_30_0_1);
    QUICKDouble x_30_2_0 = Qtempy * x_30_0_0 + WQtempy * x_30_0_1 + 3.000000 * ABCDtemp * x_15_0_1;
    QUICKDouble x_30_2_1 = Qtempy * x_30_0_1 + WQtempy * x_30_0_2 + 3.000000 * ABCDtemp * x_15_0_2;
    LOCSTORE(store, 30, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_30_2_0 + WQtempy * x_30_2_1 + CDtemp * (x_30_0_0 - ABcom * x_30_0_1) + 3.000000 * ABCDtemp * x_15_2_1;
    LOCSTORE(store, 30, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_30_2_0 + WQtempx * x_30_2_1;
    QUICKDouble x_30_3_0 = Qtempz * x_30_0_0 + WQtempz * x_30_0_1 + ABCDtemp * x_18_0_1;
    QUICKDouble x_30_3_1 = Qtempz * x_30_0_1 + WQtempz * x_30_0_2 + ABCDtemp * x_18_0_2;
    LOCSTORE(store, 30, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_30_3_0 + WQtempz * x_30_3_1 + CDtemp * (x_30_0_0 - ABcom * x_30_0_1) + ABCDtemp * x_18_3_1;
    LOCSTORE(store, 30, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_30_3_0 + WQtempx * x_30_3_1;
    LOCSTORE(store, 30, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_30_3_0 + WQtempy * x_30_3_1 + 3.000000 * ABCDtemp * x_15_3_1;
    QUICKDouble x_31_0_0 = Ptempy * x_19_0_0 + WPtempy * x_19_0_1;
    QUICKDouble x_31_0_1 = Ptempy * x_19_0_1 + WPtempy * x_19_0_2;
    QUICKDouble x_31_0_2 = Ptempy * x_19_0_2 + WPtempy * x_19_0_3;
    QUICKDouble x_31_1_0 = Qtempx * x_31_0_0 + WQtempx * x_31_0_1;
    QUICKDouble x_31_1_1 = Qtempx * x_31_0_1 + WQtempx * x_31_0_2;
    LOCSTORE(store, 31, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_31_1_0 + WQtempx * x_31_1_1 + CDtemp * (x_31_0_0 - ABcom * x_31_0_1);
    QUICKDouble x_31_2_0 = Qtempy * x_31_0_0 + WQtempy * x_31_0_1 + ABCDtemp * x_19_0_1;
    QUICKDouble x_31_2_1 = Qtempy * x_31_0_1 + WQtempy * x_31_0_2 + ABCDtemp * x_19_0_2;
    LOCSTORE(store, 31, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_31_2_0 + WQtempy * x_31_2_1 + CDtemp * (x_31_0_0 - ABcom * x_31_0_1) + ABCDtemp * x_19_2_1;
    LOCSTORE(store, 31, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_31_2_0 + WQtempx * x_31_2_1;
    QUICKDouble x_31_3_0 = Qtempz * x_31_0_0 + WQtempz * x_31_0_1 + 3.000000 * ABCDtemp * x_16_0_1;
    QUICKDouble x_31_3_1 = Qtempz * x_31_0_1 + WQtempz * x_31_0_2 + 3.000000 * ABCDtemp * x_16_0_2;
    LOCSTORE(store, 31, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_31_3_0 + WQtempz * x_31_3_1 + CDtemp * (x_31_0_0 - ABcom * x_31_0_1) + 3.000000 * ABCDtemp * x_16_3_1;
    LOCSTORE(store, 31, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_31_3_0 + WQtempx * x_31_3_1;
    LOCSTORE(store, 31, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_31_3_0 + WQtempy * x_31_3_1 + ABCDtemp * x_19_3_1;
    QUICKDouble x_1_0_0 = Ptempx * VY_0 + WPtempx * VY_1;
    QUICKDouble x_1_0_5 = Ptempx * VY_5 + WPtempx * VY_6;
    QUICKDouble x_7_0_0 = Ptempx * x_1_0_0 + WPtempx * x_1_0_1 + ABtemp * (VY_0 - CDcom * VY_1);
    QUICKDouble x_7_0_4 = Ptempx * x_1_0_4 + WPtempx * x_1_0_5 + ABtemp * (VY_4 - CDcom * VY_5);
    QUICKDouble x_17_0_0 = Ptempx * x_7_0_0 + WPtempx * x_7_0_1 + 2.000000 * ABtemp * (x_1_0_0 - CDcom * x_1_0_1);
    QUICKDouble x_17_0_3 = Ptempx * x_7_0_3 + WPtempx * x_7_0_4 + 2.000000 * ABtemp * (x_1_0_3 - CDcom * x_1_0_4);
    QUICKDouble x_32_0_0 = Ptempx * x_17_0_0 + WPtempx * x_17_0_1 + 3.000000 * ABtemp * (x_7_0_0 - CDcom * x_7_0_1);
    QUICKDouble x_32_0_1 = Ptempx * x_17_0_1 + WPtempx * x_17_0_2 + 3.000000 * ABtemp * (x_7_0_1 - CDcom * x_7_0_2);
    QUICKDouble x_32_0_2 = Ptempx * x_17_0_2 + WPtempx * x_17_0_3 + 3.000000 * ABtemp * (x_7_0_2 - CDcom * x_7_0_3);
    QUICKDouble x_17_1_1 = Qtempx * x_17_0_1 + WQtempx * x_17_0_2 + 3.000000 * ABCDtemp * x_7_0_2;
    QUICKDouble x_32_1_0 = Qtempx * x_32_0_0 + WQtempx * x_32_0_1 + 4.000000 * ABCDtemp * x_17_0_1;
    QUICKDouble x_32_1_1 = Qtempx * x_32_0_1 + WQtempx * x_32_0_2 + 4.000000 * ABCDtemp * x_17_0_2;
    LOCSTORE(store, 32, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_32_1_0 + WQtempx * x_32_1_1 + CDtemp * (x_32_0_0 - ABcom * x_32_0_1) + 4.000000 * ABCDtemp * x_17_1_1;
    QUICKDouble x_32_2_0 = Qtempy * x_32_0_0 + WQtempy * x_32_0_1;
    QUICKDouble x_32_2_1 = Qtempy * x_32_0_1 + WQtempy * x_32_0_2;
    LOCSTORE(store, 32, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_32_2_0 + WQtempy * x_32_2_1 + CDtemp * (x_32_0_0 - ABcom * x_32_0_1);
    LOCSTORE(store, 32, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_32_2_0 + WQtempx * x_32_2_1 + 4.000000 * ABCDtemp * x_17_2_1;
    QUICKDouble x_32_3_0 = Qtempz * x_32_0_0 + WQtempz * x_32_0_1;
    QUICKDouble x_32_3_1 = Qtempz * x_32_0_1 + WQtempz * x_32_0_2;
    LOCSTORE(store, 32, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_32_3_0 + WQtempz * x_32_3_1 + CDtemp * (x_32_0_0 - ABcom * x_32_0_1);
    LOCSTORE(store, 32, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_32_3_0 + WQtempx * x_32_3_1 + 4.000000 * ABCDtemp * x_17_3_1;
    LOCSTORE(store, 32, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_32_3_0 + WQtempy * x_32_3_1;
    QUICKDouble x_33_0_0 = Ptempy * x_18_0_0 + WPtempy * x_18_0_1 + 3.000000 * ABtemp * (x_8_0_0 - CDcom * x_8_0_1);
    QUICKDouble x_33_0_1 = Ptempy * x_18_0_1 + WPtempy * x_18_0_2 + 3.000000 * ABtemp * (x_8_0_1 - CDcom * x_8_0_2);
    QUICKDouble x_33_0_2 = Ptempy * x_18_0_2 + WPtempy * x_18_0_3 + 3.000000 * ABtemp * (x_8_0_2 - CDcom * x_8_0_3);
    QUICKDouble x_33_1_0 = Qtempx * x_33_0_0 + WQtempx * x_33_0_1;
    QUICKDouble x_33_1_1 = Qtempx * x_33_0_1 + WQtempx * x_33_0_2;
    LOCSTORE(store, 33, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_33_1_0 + WQtempx * x_33_1_1 + CDtemp * (x_33_0_0 - ABcom * x_33_0_1);
    QUICKDouble x_33_2_0 = Qtempy * x_33_0_0 + WQtempy * x_33_0_1 + 4.000000 * ABCDtemp * x_18_0_1;
    QUICKDouble x_33_2_1 = Qtempy * x_33_0_1 + WQtempy * x_33_0_2 + 4.000000 * ABCDtemp * x_18_0_2;
    LOCSTORE(store, 33, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_33_2_0 + WQtempy * x_33_2_1 + CDtemp * (x_33_0_0 - ABcom * x_33_0_1) + 4.000000 * ABCDtemp * x_18_2_1;
    LOCSTORE(store, 33, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_33_2_0 + WQtempx * x_33_2_1;
    QUICKDouble x_33_3_0 = Qtempz * x_33_0_0 + WQtempz * x_33_0_1;
    QUICKDouble x_33_3_1 = Qtempz * x_33_0_1 + WQtempz * x_33_0_2;
    LOCSTORE(store, 33, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_33_3_0 + WQtempz * x_33_3_1 + CDtemp * (x_33_0_0 - ABcom * x_33_0_1);
    LOCSTORE(store, 33, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_33_3_0 + WQtempx * x_33_3_1;
    LOCSTORE(store, 33, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_33_3_0 + WQtempy * x_33_3_1 + 4.000000 * ABCDtemp * x_18_3_1;
    QUICKDouble x_34_0_0 = Ptempz * x_19_0_0 + WPtempz * x_19_0_1 + 3.000000 * ABtemp * (x_9_0_0 - CDcom * x_9_0_1);
    QUICKDouble x_34_0_1 = Ptempz * x_19_0_1 + WPtempz * x_19_0_2 + 3.000000 * ABtemp * (x_9_0_1 - CDcom * x_9_0_2);
    QUICKDouble x_34_0_2 = Ptempz * x_19_0_2 + WPtempz * x_19_0_3 + 3.000000 * ABtemp * (x_9_0_2 - CDcom * x_9_0_3);
    QUICKDouble x_34_1_0 = Qtempx * x_34_0_0 + WQtempx * x_34_0_1;
    QUICKDouble x_34_1_1 = Qtempx * x_34_0_1 + WQtempx * x_34_0_2;
    LOCSTORE(store, 34, 7, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_34_1_0 + WQtempx * x_34_1_1 + CDtemp * (x_34_0_0 - ABcom * x_34_0_1);
    QUICKDouble x_34_2_0 = Qtempy * x_34_0_0 + WQtempy * x_34_0_1;
    QUICKDouble x_34_2_1 = Qtempy * x_34_0_1 + WQtempy * x_34_0_2;
    LOCSTORE(store, 34, 8, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_34_2_0 + WQtempy * x_34_2_1 + CDtemp * (x_34_0_0 - ABcom * x_34_0_1);
    LOCSTORE(store, 34, 4, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_34_2_0 + WQtempx * x_34_2_1;
    QUICKDouble x_34_3_0 = Qtempz * x_34_0_0 + WQtempz * x_34_0_1 + 4.000000 * ABCDtemp * x_19_0_1;
    QUICKDouble x_34_3_1 = Qtempz * x_34_0_1 + WQtempz * x_34_0_2 + 4.000000 * ABCDtemp * x_19_0_2;
    LOCSTORE(store, 34, 9, STOREDIM, STOREDIM) STORE_OPERATOR Qtempz * x_34_3_0 + WQtempz * x_34_3_1 + CDtemp * (x_34_0_0 - ABcom * x_34_0_1) + 4.000000 * ABCDtemp * x_19_3_1;
    LOCSTORE(store, 34, 6, STOREDIM, STOREDIM) STORE_OPERATOR Qtempx * x_34_3_0 + WQtempx * x_34_3_1;
    LOCSTORE(store, 34, 5, STOREDIM, STOREDIM) STORE_OPERATOR Qtempy * x_34_3_0 + WQtempy * x_34_3_1;
    // [GS|DS] integral - End 

}

